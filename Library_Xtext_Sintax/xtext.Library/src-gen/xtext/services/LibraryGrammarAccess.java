/*
 * generated by Xtext 2.39.0
 */
package xtext.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class LibraryGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class LibraryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Library.Library");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLibraryKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cDataprocessingdefinitionKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cDataprocessingdefinitionAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cDataprocessingdefinitionDataProcessingDefinitionParserRuleCall_3_2_0 = (RuleCall)cDataprocessingdefinitionAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cDataprocessingdefinitionAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cDataprocessingdefinitionDataProcessingDefinitionParserRuleCall_3_3_1_0 = (RuleCall)cDataprocessingdefinitionAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//// Main entry point
		//Library:
		//    'Library'
		//    name=EString
		//    '{'
		//        ('dataprocessingdefinition' '{' dataprocessingdefinition+=DataProcessingDefinition ( "," dataprocessingdefinition+=DataProcessingDefinition)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Library'
		//name=EString
		//'{'
		//    ('dataprocessingdefinition' '{' dataprocessingdefinition+=DataProcessingDefinition ( "," dataprocessingdefinition+=DataProcessingDefinition)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Library'
		public Keyword getLibraryKeyword_0() { return cLibraryKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('dataprocessingdefinition' '{' dataprocessingdefinition+=DataProcessingDefinition ( "," dataprocessingdefinition+=DataProcessingDefinition)* '}' )?
		public Group getGroup_3() { return cGroup_3; }
		
		//'dataprocessingdefinition'
		public Keyword getDataprocessingdefinitionKeyword_3_0() { return cDataprocessingdefinitionKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//dataprocessingdefinition+=DataProcessingDefinition
		public Assignment getDataprocessingdefinitionAssignment_3_2() { return cDataprocessingdefinitionAssignment_3_2; }
		
		//DataProcessingDefinition
		public RuleCall getDataprocessingdefinitionDataProcessingDefinitionParserRuleCall_3_2_0() { return cDataprocessingdefinitionDataProcessingDefinitionParserRuleCall_3_2_0; }
		
		//( "," dataprocessingdefinition+=DataProcessingDefinition)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//dataprocessingdefinition+=DataProcessingDefinition
		public Assignment getDataprocessingdefinitionAssignment_3_3_1() { return cDataprocessingdefinitionAssignment_3_3_1; }
		
		//DataProcessingDefinition
		public RuleCall getDataprocessingdefinitionDataProcessingDefinitionParserRuleCall_3_3_1_0() { return cDataprocessingdefinitionDataProcessingDefinitionParserRuleCall_3_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class DataProcessingDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Library.DataProcessingDefinition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cJobParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cTransformationParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//// Abstract DataProcessingDefinition
		//DataProcessingDefinition:
		//    Job | Transformation;
		@Override public ParserRule getRule() { return rule; }
		
		//Job | Transformation
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Job
		public RuleCall getJobParserRuleCall_0() { return cJobParserRuleCall_0; }
		
		//Transformation
		public RuleCall getTransformationParserRuleCall_1() { return cTransformationParserRuleCall_1; }
	}
	public class JobElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Library.Job");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cJobKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cInKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cInAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cInArgumentDefinitionCrossReference_5_0 = (CrossReference)cInAssignment_5.eContents().get(0);
		private final RuleCall cInArgumentDefinitionEStringParserRuleCall_5_0_1 = (RuleCall)cInArgumentDefinitionCrossReference_5_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cInAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cInArgumentDefinitionCrossReference_6_1_0 = (CrossReference)cInAssignment_6_1.eContents().get(0);
		private final RuleCall cInArgumentDefinitionEStringParserRuleCall_6_1_0_1 = (RuleCall)cInArgumentDefinitionCrossReference_6_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cOutKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cLeftParenthesisKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cOutAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final CrossReference cOutArgumentDefinitionCrossReference_10_0 = (CrossReference)cOutAssignment_10.eContents().get(0);
		private final RuleCall cOutArgumentDefinitionEStringParserRuleCall_10_0_1 = (RuleCall)cOutArgumentDefinitionCrossReference_10_0.eContents().get(1);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cCommaKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cOutAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final CrossReference cOutArgumentDefinitionCrossReference_11_1_0 = (CrossReference)cOutAssignment_11_1.eContents().get(0);
		private final RuleCall cOutArgumentDefinitionEStringParserRuleCall_11_1_0_1 = (RuleCall)cOutArgumentDefinitionCrossReference_11_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cWorkflowKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cWorkflowAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cWorkflowEStringParserRuleCall_14_0 = (RuleCall)cWorkflowAssignment_14.eContents().get(0);
		private final Group cGroup_15 = (Group)cGroup.eContents().get(15);
		private final Keyword cParameterdefinitionKeyword_15_0 = (Keyword)cGroup_15.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_15_1 = (Keyword)cGroup_15.eContents().get(1);
		private final Assignment cParameterdefinitionAssignment_15_2 = (Assignment)cGroup_15.eContents().get(2);
		private final RuleCall cParameterdefinitionParameterDefinitionParserRuleCall_15_2_0 = (RuleCall)cParameterdefinitionAssignment_15_2.eContents().get(0);
		private final Group cGroup_15_3 = (Group)cGroup_15.eContents().get(3);
		private final Keyword cCommaKeyword_15_3_0 = (Keyword)cGroup_15_3.eContents().get(0);
		private final Assignment cParameterdefinitionAssignment_15_3_1 = (Assignment)cGroup_15_3.eContents().get(1);
		private final RuleCall cParameterdefinitionParameterDefinitionParserRuleCall_15_3_1_0 = (RuleCall)cParameterdefinitionAssignment_15_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_15_4 = (Keyword)cGroup_15.eContents().get(4);
		private final Group cGroup_16 = (Group)cGroup.eContents().get(16);
		private final Keyword cContractdefinitionKeyword_16_0 = (Keyword)cGroup_16.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_16_1 = (Keyword)cGroup_16.eContents().get(1);
		private final Assignment cContractdefinitionAssignment_16_2 = (Assignment)cGroup_16.eContents().get(2);
		private final RuleCall cContractdefinitionContractDefinitionParserRuleCall_16_2_0 = (RuleCall)cContractdefinitionAssignment_16_2.eContents().get(0);
		private final Group cGroup_16_3 = (Group)cGroup_16.eContents().get(3);
		private final Keyword cCommaKeyword_16_3_0 = (Keyword)cGroup_16_3.eContents().get(0);
		private final Assignment cContractdefinitionAssignment_16_3_1 = (Assignment)cGroup_16_3.eContents().get(1);
		private final RuleCall cContractdefinitionContractDefinitionParserRuleCall_16_3_1_0 = (RuleCall)cContractdefinitionAssignment_16_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_16_4 = (Keyword)cGroup_16.eContents().get(4);
		private final Keyword cInputPortKeyword_17 = (Keyword)cGroup.eContents().get(17);
		private final Keyword cLeftCurlyBracketKeyword_18 = (Keyword)cGroup.eContents().get(18);
		private final Assignment cInputPortAssignment_19 = (Assignment)cGroup.eContents().get(19);
		private final RuleCall cInputPortDataDictionaryDefinitionParserRuleCall_19_0 = (RuleCall)cInputPortAssignment_19.eContents().get(0);
		private final Group cGroup_20 = (Group)cGroup.eContents().get(20);
		private final Keyword cCommaKeyword_20_0 = (Keyword)cGroup_20.eContents().get(0);
		private final Assignment cInputPortAssignment_20_1 = (Assignment)cGroup_20.eContents().get(1);
		private final RuleCall cInputPortDataDictionaryDefinitionParserRuleCall_20_1_0 = (RuleCall)cInputPortAssignment_20_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_21 = (Keyword)cGroup.eContents().get(21);
		private final Keyword cOutputPortKeyword_22 = (Keyword)cGroup.eContents().get(22);
		private final Keyword cLeftCurlyBracketKeyword_23 = (Keyword)cGroup.eContents().get(23);
		private final Assignment cOutputPortAssignment_24 = (Assignment)cGroup.eContents().get(24);
		private final RuleCall cOutputPortDataDictionaryDefinitionParserRuleCall_24_0 = (RuleCall)cOutputPortAssignment_24.eContents().get(0);
		private final Group cGroup_25 = (Group)cGroup.eContents().get(25);
		private final Keyword cCommaKeyword_25_0 = (Keyword)cGroup_25.eContents().get(0);
		private final Assignment cOutputPortAssignment_25_1 = (Assignment)cGroup_25.eContents().get(1);
		private final RuleCall cOutputPortDataDictionaryDefinitionParserRuleCall_25_1_0 = (RuleCall)cOutputPortAssignment_25_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_26 = (Keyword)cGroup.eContents().get(26);
		private final Keyword cRightCurlyBracketKeyword_27 = (Keyword)cGroup.eContents().get(27);
		
		//Job:
		//    'Job'
		//    name=EString
		//    '{'
		//        'in' '(' in+=[ArgumentDefinition|EString] ( "," in+=[ArgumentDefinition|EString])* ')'
		//        'out' '(' out+=[ArgumentDefinition|EString] ( "," out+=[ArgumentDefinition|EString])* ')'
		//        'workflow' workflow=EString
		//        ('parameterdefinition' '{' parameterdefinition+=ParameterDefinition ( "," parameterdefinition+=ParameterDefinition)* '}' )?
		//        ('contractdefinition' '{' contractdefinition+=ContractDefinition ( "," contractdefinition+=ContractDefinition)* '}' )?
		//        'inputPort' '{' inputPort+=DataDictionaryDefinition ( "," inputPort+=DataDictionaryDefinition)* '}'
		//        'outputPort' '{' outputPort+=DataDictionaryDefinition ( "," outputPort+=DataDictionaryDefinition)* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Job'
		//name=EString
		//'{'
		//    'in' '(' in+=[ArgumentDefinition|EString] ( "," in+=[ArgumentDefinition|EString])* ')'
		//    'out' '(' out+=[ArgumentDefinition|EString] ( "," out+=[ArgumentDefinition|EString])* ')'
		//    'workflow' workflow=EString
		//    ('parameterdefinition' '{' parameterdefinition+=ParameterDefinition ( "," parameterdefinition+=ParameterDefinition)* '}' )?
		//    ('contractdefinition' '{' contractdefinition+=ContractDefinition ( "," contractdefinition+=ContractDefinition)* '}' )?
		//    'inputPort' '{' inputPort+=DataDictionaryDefinition ( "," inputPort+=DataDictionaryDefinition)* '}'
		//    'outputPort' '{' outputPort+=DataDictionaryDefinition ( "," outputPort+=DataDictionaryDefinition)* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Job'
		public Keyword getJobKeyword_0() { return cJobKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'in'
		public Keyword getInKeyword_3() { return cInKeyword_3; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_4() { return cLeftParenthesisKeyword_4; }
		
		//in+=[ArgumentDefinition|EString]
		public Assignment getInAssignment_5() { return cInAssignment_5; }
		
		//[ArgumentDefinition|EString]
		public CrossReference getInArgumentDefinitionCrossReference_5_0() { return cInArgumentDefinitionCrossReference_5_0; }
		
		//EString
		public RuleCall getInArgumentDefinitionEStringParserRuleCall_5_0_1() { return cInArgumentDefinitionEStringParserRuleCall_5_0_1; }
		
		//( "," in+=[ArgumentDefinition|EString])*
		public Group getGroup_6() { return cGroup_6; }
		
		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }
		
		//in+=[ArgumentDefinition|EString]
		public Assignment getInAssignment_6_1() { return cInAssignment_6_1; }
		
		//[ArgumentDefinition|EString]
		public CrossReference getInArgumentDefinitionCrossReference_6_1_0() { return cInArgumentDefinitionCrossReference_6_1_0; }
		
		//EString
		public RuleCall getInArgumentDefinitionEStringParserRuleCall_6_1_0_1() { return cInArgumentDefinitionEStringParserRuleCall_6_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
		
		//'out'
		public Keyword getOutKeyword_8() { return cOutKeyword_8; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_9() { return cLeftParenthesisKeyword_9; }
		
		//out+=[ArgumentDefinition|EString]
		public Assignment getOutAssignment_10() { return cOutAssignment_10; }
		
		//[ArgumentDefinition|EString]
		public CrossReference getOutArgumentDefinitionCrossReference_10_0() { return cOutArgumentDefinitionCrossReference_10_0; }
		
		//EString
		public RuleCall getOutArgumentDefinitionEStringParserRuleCall_10_0_1() { return cOutArgumentDefinitionEStringParserRuleCall_10_0_1; }
		
		//( "," out+=[ArgumentDefinition|EString])*
		public Group getGroup_11() { return cGroup_11; }
		
		//","
		public Keyword getCommaKeyword_11_0() { return cCommaKeyword_11_0; }
		
		//out+=[ArgumentDefinition|EString]
		public Assignment getOutAssignment_11_1() { return cOutAssignment_11_1; }
		
		//[ArgumentDefinition|EString]
		public CrossReference getOutArgumentDefinitionCrossReference_11_1_0() { return cOutArgumentDefinitionCrossReference_11_1_0; }
		
		//EString
		public RuleCall getOutArgumentDefinitionEStringParserRuleCall_11_1_0_1() { return cOutArgumentDefinitionEStringParserRuleCall_11_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_12() { return cRightParenthesisKeyword_12; }
		
		//'workflow'
		public Keyword getWorkflowKeyword_13() { return cWorkflowKeyword_13; }
		
		//workflow=EString
		public Assignment getWorkflowAssignment_14() { return cWorkflowAssignment_14; }
		
		//EString
		public RuleCall getWorkflowEStringParserRuleCall_14_0() { return cWorkflowEStringParserRuleCall_14_0; }
		
		//('parameterdefinition' '{' parameterdefinition+=ParameterDefinition ( "," parameterdefinition+=ParameterDefinition)* '}' )?
		public Group getGroup_15() { return cGroup_15; }
		
		//'parameterdefinition'
		public Keyword getParameterdefinitionKeyword_15_0() { return cParameterdefinitionKeyword_15_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_15_1() { return cLeftCurlyBracketKeyword_15_1; }
		
		//parameterdefinition+=ParameterDefinition
		public Assignment getParameterdefinitionAssignment_15_2() { return cParameterdefinitionAssignment_15_2; }
		
		//ParameterDefinition
		public RuleCall getParameterdefinitionParameterDefinitionParserRuleCall_15_2_0() { return cParameterdefinitionParameterDefinitionParserRuleCall_15_2_0; }
		
		//( "," parameterdefinition+=ParameterDefinition)*
		public Group getGroup_15_3() { return cGroup_15_3; }
		
		//","
		public Keyword getCommaKeyword_15_3_0() { return cCommaKeyword_15_3_0; }
		
		//parameterdefinition+=ParameterDefinition
		public Assignment getParameterdefinitionAssignment_15_3_1() { return cParameterdefinitionAssignment_15_3_1; }
		
		//ParameterDefinition
		public RuleCall getParameterdefinitionParameterDefinitionParserRuleCall_15_3_1_0() { return cParameterdefinitionParameterDefinitionParserRuleCall_15_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_15_4() { return cRightCurlyBracketKeyword_15_4; }
		
		//('contractdefinition' '{' contractdefinition+=ContractDefinition ( "," contractdefinition+=ContractDefinition)* '}' )?
		public Group getGroup_16() { return cGroup_16; }
		
		//'contractdefinition'
		public Keyword getContractdefinitionKeyword_16_0() { return cContractdefinitionKeyword_16_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_16_1() { return cLeftCurlyBracketKeyword_16_1; }
		
		//contractdefinition+=ContractDefinition
		public Assignment getContractdefinitionAssignment_16_2() { return cContractdefinitionAssignment_16_2; }
		
		//ContractDefinition
		public RuleCall getContractdefinitionContractDefinitionParserRuleCall_16_2_0() { return cContractdefinitionContractDefinitionParserRuleCall_16_2_0; }
		
		//( "," contractdefinition+=ContractDefinition)*
		public Group getGroup_16_3() { return cGroup_16_3; }
		
		//","
		public Keyword getCommaKeyword_16_3_0() { return cCommaKeyword_16_3_0; }
		
		//contractdefinition+=ContractDefinition
		public Assignment getContractdefinitionAssignment_16_3_1() { return cContractdefinitionAssignment_16_3_1; }
		
		//ContractDefinition
		public RuleCall getContractdefinitionContractDefinitionParserRuleCall_16_3_1_0() { return cContractdefinitionContractDefinitionParserRuleCall_16_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_16_4() { return cRightCurlyBracketKeyword_16_4; }
		
		//'inputPort'
		public Keyword getInputPortKeyword_17() { return cInputPortKeyword_17; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_18() { return cLeftCurlyBracketKeyword_18; }
		
		//inputPort+=DataDictionaryDefinition
		public Assignment getInputPortAssignment_19() { return cInputPortAssignment_19; }
		
		//DataDictionaryDefinition
		public RuleCall getInputPortDataDictionaryDefinitionParserRuleCall_19_0() { return cInputPortDataDictionaryDefinitionParserRuleCall_19_0; }
		
		//( "," inputPort+=DataDictionaryDefinition)*
		public Group getGroup_20() { return cGroup_20; }
		
		//","
		public Keyword getCommaKeyword_20_0() { return cCommaKeyword_20_0; }
		
		//inputPort+=DataDictionaryDefinition
		public Assignment getInputPortAssignment_20_1() { return cInputPortAssignment_20_1; }
		
		//DataDictionaryDefinition
		public RuleCall getInputPortDataDictionaryDefinitionParserRuleCall_20_1_0() { return cInputPortDataDictionaryDefinitionParserRuleCall_20_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_21() { return cRightCurlyBracketKeyword_21; }
		
		//'outputPort'
		public Keyword getOutputPortKeyword_22() { return cOutputPortKeyword_22; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_23() { return cLeftCurlyBracketKeyword_23; }
		
		//outputPort+=DataDictionaryDefinition
		public Assignment getOutputPortAssignment_24() { return cOutputPortAssignment_24; }
		
		//DataDictionaryDefinition
		public RuleCall getOutputPortDataDictionaryDefinitionParserRuleCall_24_0() { return cOutputPortDataDictionaryDefinitionParserRuleCall_24_0; }
		
		//( "," outputPort+=DataDictionaryDefinition)*
		public Group getGroup_25() { return cGroup_25; }
		
		//","
		public Keyword getCommaKeyword_25_0() { return cCommaKeyword_25_0; }
		
		//outputPort+=DataDictionaryDefinition
		public Assignment getOutputPortAssignment_25_1() { return cOutputPortAssignment_25_1; }
		
		//DataDictionaryDefinition
		public RuleCall getOutputPortDataDictionaryDefinitionParserRuleCall_25_1_0() { return cOutputPortDataDictionaryDefinitionParserRuleCall_25_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_26() { return cRightCurlyBracketKeyword_26; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_27() { return cRightCurlyBracketKeyword_27; }
	}
	public class TransformationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Library.Transformation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTransformationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cInKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cInAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cInArgumentDefinitionCrossReference_5_0 = (CrossReference)cInAssignment_5.eContents().get(0);
		private final RuleCall cInArgumentDefinitionEStringParserRuleCall_5_0_1 = (RuleCall)cInArgumentDefinitionCrossReference_5_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cInAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cInArgumentDefinitionCrossReference_6_1_0 = (CrossReference)cInAssignment_6_1.eContents().get(0);
		private final RuleCall cInArgumentDefinitionEStringParserRuleCall_6_1_0_1 = (RuleCall)cInArgumentDefinitionCrossReference_6_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cOutKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cLeftParenthesisKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cOutAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final CrossReference cOutArgumentDefinitionCrossReference_10_0 = (CrossReference)cOutAssignment_10.eContents().get(0);
		private final RuleCall cOutArgumentDefinitionEStringParserRuleCall_10_0_1 = (RuleCall)cOutArgumentDefinitionCrossReference_10_0.eContents().get(1);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cCommaKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cOutAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final CrossReference cOutArgumentDefinitionCrossReference_11_1_0 = (CrossReference)cOutAssignment_11_1.eContents().get(0);
		private final RuleCall cOutArgumentDefinitionEStringParserRuleCall_11_1_0_1 = (RuleCall)cOutArgumentDefinitionCrossReference_11_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cParameterdefinitionKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_13_1 = (Keyword)cGroup_13.eContents().get(1);
		private final Assignment cParameterdefinitionAssignment_13_2 = (Assignment)cGroup_13.eContents().get(2);
		private final RuleCall cParameterdefinitionParameterDefinitionParserRuleCall_13_2_0 = (RuleCall)cParameterdefinitionAssignment_13_2.eContents().get(0);
		private final Group cGroup_13_3 = (Group)cGroup_13.eContents().get(3);
		private final Keyword cCommaKeyword_13_3_0 = (Keyword)cGroup_13_3.eContents().get(0);
		private final Assignment cParameterdefinitionAssignment_13_3_1 = (Assignment)cGroup_13_3.eContents().get(1);
		private final RuleCall cParameterdefinitionParameterDefinitionParserRuleCall_13_3_1_0 = (RuleCall)cParameterdefinitionAssignment_13_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_13_4 = (Keyword)cGroup_13.eContents().get(4);
		private final Group cGroup_14 = (Group)cGroup.eContents().get(14);
		private final Keyword cContractdefinitionKeyword_14_0 = (Keyword)cGroup_14.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_14_1 = (Keyword)cGroup_14.eContents().get(1);
		private final Assignment cContractdefinitionAssignment_14_2 = (Assignment)cGroup_14.eContents().get(2);
		private final RuleCall cContractdefinitionContractDefinitionParserRuleCall_14_2_0 = (RuleCall)cContractdefinitionAssignment_14_2.eContents().get(0);
		private final Group cGroup_14_3 = (Group)cGroup_14.eContents().get(3);
		private final Keyword cCommaKeyword_14_3_0 = (Keyword)cGroup_14_3.eContents().get(0);
		private final Assignment cContractdefinitionAssignment_14_3_1 = (Assignment)cGroup_14_3.eContents().get(1);
		private final RuleCall cContractdefinitionContractDefinitionParserRuleCall_14_3_1_0 = (RuleCall)cContractdefinitionAssignment_14_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_14_4 = (Keyword)cGroup_14.eContents().get(4);
		private final Keyword cInputPortKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Keyword cLeftCurlyBracketKeyword_16 = (Keyword)cGroup.eContents().get(16);
		private final Assignment cInputPortAssignment_17 = (Assignment)cGroup.eContents().get(17);
		private final RuleCall cInputPortDataDictionaryDefinitionParserRuleCall_17_0 = (RuleCall)cInputPortAssignment_17.eContents().get(0);
		private final Group cGroup_18 = (Group)cGroup.eContents().get(18);
		private final Keyword cCommaKeyword_18_0 = (Keyword)cGroup_18.eContents().get(0);
		private final Assignment cInputPortAssignment_18_1 = (Assignment)cGroup_18.eContents().get(1);
		private final RuleCall cInputPortDataDictionaryDefinitionParserRuleCall_18_1_0 = (RuleCall)cInputPortAssignment_18_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_19 = (Keyword)cGroup.eContents().get(19);
		private final Keyword cOutputPortKeyword_20 = (Keyword)cGroup.eContents().get(20);
		private final Keyword cLeftCurlyBracketKeyword_21 = (Keyword)cGroup.eContents().get(21);
		private final Assignment cOutputPortAssignment_22 = (Assignment)cGroup.eContents().get(22);
		private final RuleCall cOutputPortDataDictionaryDefinitionParserRuleCall_22_0 = (RuleCall)cOutputPortAssignment_22.eContents().get(0);
		private final Group cGroup_23 = (Group)cGroup.eContents().get(23);
		private final Keyword cCommaKeyword_23_0 = (Keyword)cGroup_23.eContents().get(0);
		private final Assignment cOutputPortAssignment_23_1 = (Assignment)cGroup_23.eContents().get(1);
		private final RuleCall cOutputPortDataDictionaryDefinitionParserRuleCall_23_1_0 = (RuleCall)cOutputPortAssignment_23_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_24 = (Keyword)cGroup.eContents().get(24);
		private final Keyword cRightCurlyBracketKeyword_25 = (Keyword)cGroup.eContents().get(25);
		
		//Transformation:
		//    'Transformation'
		//    name=EString
		//    '{'
		//        'in' '(' in+=[ArgumentDefinition|EString] ( "," in+=[ArgumentDefinition|EString])* ')'
		//        'out' '(' out+=[ArgumentDefinition|EString] ( "," out+=[ArgumentDefinition|EString])* ')'
		//        ('parameterdefinition' '{' parameterdefinition+=ParameterDefinition ( "," parameterdefinition+=ParameterDefinition)* '}' )?
		//        ('contractdefinition' '{' contractdefinition+=ContractDefinition ( "," contractdefinition+=ContractDefinition)* '}' )?
		//        'inputPort' '{' inputPort+=DataDictionaryDefinition ( "," inputPort+=DataDictionaryDefinition)* '}'
		//        'outputPort' '{' outputPort+=DataDictionaryDefinition ( "," outputPort+=DataDictionaryDefinition)* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Transformation'
		//name=EString
		//'{'
		//    'in' '(' in+=[ArgumentDefinition|EString] ( "," in+=[ArgumentDefinition|EString])* ')'
		//    'out' '(' out+=[ArgumentDefinition|EString] ( "," out+=[ArgumentDefinition|EString])* ')'
		//    ('parameterdefinition' '{' parameterdefinition+=ParameterDefinition ( "," parameterdefinition+=ParameterDefinition)* '}' )?
		//    ('contractdefinition' '{' contractdefinition+=ContractDefinition ( "," contractdefinition+=ContractDefinition)* '}' )?
		//    'inputPort' '{' inputPort+=DataDictionaryDefinition ( "," inputPort+=DataDictionaryDefinition)* '}'
		//    'outputPort' '{' outputPort+=DataDictionaryDefinition ( "," outputPort+=DataDictionaryDefinition)* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Transformation'
		public Keyword getTransformationKeyword_0() { return cTransformationKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'in'
		public Keyword getInKeyword_3() { return cInKeyword_3; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_4() { return cLeftParenthesisKeyword_4; }
		
		//in+=[ArgumentDefinition|EString]
		public Assignment getInAssignment_5() { return cInAssignment_5; }
		
		//[ArgumentDefinition|EString]
		public CrossReference getInArgumentDefinitionCrossReference_5_0() { return cInArgumentDefinitionCrossReference_5_0; }
		
		//EString
		public RuleCall getInArgumentDefinitionEStringParserRuleCall_5_0_1() { return cInArgumentDefinitionEStringParserRuleCall_5_0_1; }
		
		//( "," in+=[ArgumentDefinition|EString])*
		public Group getGroup_6() { return cGroup_6; }
		
		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }
		
		//in+=[ArgumentDefinition|EString]
		public Assignment getInAssignment_6_1() { return cInAssignment_6_1; }
		
		//[ArgumentDefinition|EString]
		public CrossReference getInArgumentDefinitionCrossReference_6_1_0() { return cInArgumentDefinitionCrossReference_6_1_0; }
		
		//EString
		public RuleCall getInArgumentDefinitionEStringParserRuleCall_6_1_0_1() { return cInArgumentDefinitionEStringParserRuleCall_6_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
		
		//'out'
		public Keyword getOutKeyword_8() { return cOutKeyword_8; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_9() { return cLeftParenthesisKeyword_9; }
		
		//out+=[ArgumentDefinition|EString]
		public Assignment getOutAssignment_10() { return cOutAssignment_10; }
		
		//[ArgumentDefinition|EString]
		public CrossReference getOutArgumentDefinitionCrossReference_10_0() { return cOutArgumentDefinitionCrossReference_10_0; }
		
		//EString
		public RuleCall getOutArgumentDefinitionEStringParserRuleCall_10_0_1() { return cOutArgumentDefinitionEStringParserRuleCall_10_0_1; }
		
		//( "," out+=[ArgumentDefinition|EString])*
		public Group getGroup_11() { return cGroup_11; }
		
		//","
		public Keyword getCommaKeyword_11_0() { return cCommaKeyword_11_0; }
		
		//out+=[ArgumentDefinition|EString]
		public Assignment getOutAssignment_11_1() { return cOutAssignment_11_1; }
		
		//[ArgumentDefinition|EString]
		public CrossReference getOutArgumentDefinitionCrossReference_11_1_0() { return cOutArgumentDefinitionCrossReference_11_1_0; }
		
		//EString
		public RuleCall getOutArgumentDefinitionEStringParserRuleCall_11_1_0_1() { return cOutArgumentDefinitionEStringParserRuleCall_11_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_12() { return cRightParenthesisKeyword_12; }
		
		//('parameterdefinition' '{' parameterdefinition+=ParameterDefinition ( "," parameterdefinition+=ParameterDefinition)* '}' )?
		public Group getGroup_13() { return cGroup_13; }
		
		//'parameterdefinition'
		public Keyword getParameterdefinitionKeyword_13_0() { return cParameterdefinitionKeyword_13_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_13_1() { return cLeftCurlyBracketKeyword_13_1; }
		
		//parameterdefinition+=ParameterDefinition
		public Assignment getParameterdefinitionAssignment_13_2() { return cParameterdefinitionAssignment_13_2; }
		
		//ParameterDefinition
		public RuleCall getParameterdefinitionParameterDefinitionParserRuleCall_13_2_0() { return cParameterdefinitionParameterDefinitionParserRuleCall_13_2_0; }
		
		//( "," parameterdefinition+=ParameterDefinition)*
		public Group getGroup_13_3() { return cGroup_13_3; }
		
		//","
		public Keyword getCommaKeyword_13_3_0() { return cCommaKeyword_13_3_0; }
		
		//parameterdefinition+=ParameterDefinition
		public Assignment getParameterdefinitionAssignment_13_3_1() { return cParameterdefinitionAssignment_13_3_1; }
		
		//ParameterDefinition
		public RuleCall getParameterdefinitionParameterDefinitionParserRuleCall_13_3_1_0() { return cParameterdefinitionParameterDefinitionParserRuleCall_13_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_13_4() { return cRightCurlyBracketKeyword_13_4; }
		
		//('contractdefinition' '{' contractdefinition+=ContractDefinition ( "," contractdefinition+=ContractDefinition)* '}' )?
		public Group getGroup_14() { return cGroup_14; }
		
		//'contractdefinition'
		public Keyword getContractdefinitionKeyword_14_0() { return cContractdefinitionKeyword_14_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_14_1() { return cLeftCurlyBracketKeyword_14_1; }
		
		//contractdefinition+=ContractDefinition
		public Assignment getContractdefinitionAssignment_14_2() { return cContractdefinitionAssignment_14_2; }
		
		//ContractDefinition
		public RuleCall getContractdefinitionContractDefinitionParserRuleCall_14_2_0() { return cContractdefinitionContractDefinitionParserRuleCall_14_2_0; }
		
		//( "," contractdefinition+=ContractDefinition)*
		public Group getGroup_14_3() { return cGroup_14_3; }
		
		//","
		public Keyword getCommaKeyword_14_3_0() { return cCommaKeyword_14_3_0; }
		
		//contractdefinition+=ContractDefinition
		public Assignment getContractdefinitionAssignment_14_3_1() { return cContractdefinitionAssignment_14_3_1; }
		
		//ContractDefinition
		public RuleCall getContractdefinitionContractDefinitionParserRuleCall_14_3_1_0() { return cContractdefinitionContractDefinitionParserRuleCall_14_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_14_4() { return cRightCurlyBracketKeyword_14_4; }
		
		//'inputPort'
		public Keyword getInputPortKeyword_15() { return cInputPortKeyword_15; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_16() { return cLeftCurlyBracketKeyword_16; }
		
		//inputPort+=DataDictionaryDefinition
		public Assignment getInputPortAssignment_17() { return cInputPortAssignment_17; }
		
		//DataDictionaryDefinition
		public RuleCall getInputPortDataDictionaryDefinitionParserRuleCall_17_0() { return cInputPortDataDictionaryDefinitionParserRuleCall_17_0; }
		
		//( "," inputPort+=DataDictionaryDefinition)*
		public Group getGroup_18() { return cGroup_18; }
		
		//","
		public Keyword getCommaKeyword_18_0() { return cCommaKeyword_18_0; }
		
		//inputPort+=DataDictionaryDefinition
		public Assignment getInputPortAssignment_18_1() { return cInputPortAssignment_18_1; }
		
		//DataDictionaryDefinition
		public RuleCall getInputPortDataDictionaryDefinitionParserRuleCall_18_1_0() { return cInputPortDataDictionaryDefinitionParserRuleCall_18_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_19() { return cRightCurlyBracketKeyword_19; }
		
		//'outputPort'
		public Keyword getOutputPortKeyword_20() { return cOutputPortKeyword_20; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_21() { return cLeftCurlyBracketKeyword_21; }
		
		//outputPort+=DataDictionaryDefinition
		public Assignment getOutputPortAssignment_22() { return cOutputPortAssignment_22; }
		
		//DataDictionaryDefinition
		public RuleCall getOutputPortDataDictionaryDefinitionParserRuleCall_22_0() { return cOutputPortDataDictionaryDefinitionParserRuleCall_22_0; }
		
		//( "," outputPort+=DataDictionaryDefinition)*
		public Group getGroup_23() { return cGroup_23; }
		
		//","
		public Keyword getCommaKeyword_23_0() { return cCommaKeyword_23_0; }
		
		//outputPort+=DataDictionaryDefinition
		public Assignment getOutputPortAssignment_23_1() { return cOutputPortAssignment_23_1; }
		
		//DataDictionaryDefinition
		public RuleCall getOutputPortDataDictionaryDefinitionParserRuleCall_23_1_0() { return cOutputPortDataDictionaryDefinitionParserRuleCall_23_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_24() { return cRightCurlyBracketKeyword_24; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_25() { return cRightCurlyBracketKeyword_25; }
	}
	public class ParameterDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Library.ParameterDefinition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMapDefParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cCastTypeDefParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cPrimitiveDefParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cDerivedFieldDefParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cFilterValueDefParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cDiscretizeBinDefParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cFieldRangeDefParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cMathOpDefParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cJoinDefParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cRangeDefParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cMissingValuesDefParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cDateRangeDefParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cDerivedValueDefParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		private final RuleCall cNumOpDefParserRuleCall_13 = (RuleCall)cAlternatives.eContents().get(13);
		private final RuleCall cFixValueDefParserRuleCall_14 = (RuleCall)cAlternatives.eContents().get(14);
		private final RuleCall cFieldDefParserRuleCall_15 = (RuleCall)cAlternatives.eContents().get(15);
		
		//// Abstract ParameterDefinition
		//ParameterDefinition:
		//    MapDef | CastTypeDef | PrimitiveDef | DerivedFieldDef | FilterValueDef |
		//    DiscretizeBinDef | FieldRangeDef | MathOpDef | JoinDef |
		//    RangeDef | MissingValuesDef | DateRangeDef |
		//    DerivedValueDef | NumOpDef | FixValueDef |
		//    FieldDef;
		@Override public ParserRule getRule() { return rule; }
		
		//MapDef | CastTypeDef | PrimitiveDef | DerivedFieldDef | FilterValueDef |
		//DiscretizeBinDef | FieldRangeDef | MathOpDef | JoinDef |
		//RangeDef | MissingValuesDef | DateRangeDef |
		//DerivedValueDef | NumOpDef | FixValueDef |
		//FieldDef
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MapDef
		public RuleCall getMapDefParserRuleCall_0() { return cMapDefParserRuleCall_0; }
		
		//CastTypeDef
		public RuleCall getCastTypeDefParserRuleCall_1() { return cCastTypeDefParserRuleCall_1; }
		
		//PrimitiveDef
		public RuleCall getPrimitiveDefParserRuleCall_2() { return cPrimitiveDefParserRuleCall_2; }
		
		//DerivedFieldDef
		public RuleCall getDerivedFieldDefParserRuleCall_3() { return cDerivedFieldDefParserRuleCall_3; }
		
		//FilterValueDef
		public RuleCall getFilterValueDefParserRuleCall_4() { return cFilterValueDefParserRuleCall_4; }
		
		//DiscretizeBinDef
		public RuleCall getDiscretizeBinDefParserRuleCall_5() { return cDiscretizeBinDefParserRuleCall_5; }
		
		//FieldRangeDef
		public RuleCall getFieldRangeDefParserRuleCall_6() { return cFieldRangeDefParserRuleCall_6; }
		
		//MathOpDef
		public RuleCall getMathOpDefParserRuleCall_7() { return cMathOpDefParserRuleCall_7; }
		
		//JoinDef
		public RuleCall getJoinDefParserRuleCall_8() { return cJoinDefParserRuleCall_8; }
		
		//RangeDef
		public RuleCall getRangeDefParserRuleCall_9() { return cRangeDefParserRuleCall_9; }
		
		//MissingValuesDef
		public RuleCall getMissingValuesDefParserRuleCall_10() { return cMissingValuesDefParserRuleCall_10; }
		
		//DateRangeDef
		public RuleCall getDateRangeDefParserRuleCall_11() { return cDateRangeDefParserRuleCall_11; }
		
		//DerivedValueDef
		public RuleCall getDerivedValueDefParserRuleCall_12() { return cDerivedValueDefParserRuleCall_12; }
		
		//NumOpDef
		public RuleCall getNumOpDefParserRuleCall_13() { return cNumOpDefParserRuleCall_13; }
		
		//FixValueDef
		public RuleCall getFixValueDefParserRuleCall_14() { return cFixValueDefParserRuleCall_14; }
		
		//FieldDef
		public RuleCall getFieldDefParserRuleCall_15() { return cFieldDefParserRuleCall_15; }
	}
	public class ContractDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Library.ContractDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cContractDefinitionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cBoundToKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cBoundToAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cBoundToEStringParserRuleCall_3_1_0 = (RuleCall)cBoundToAssignment_3_1.eContents().get(0);
		private final Keyword cContractDefinitionKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cContractDefinitionAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cContractDefinitionContractDefinition0ParserRuleCall_5_0 = (RuleCall)cContractDefinitionAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//// Contract Definition
		//ContractDefinition:
		//    'ContractDefinition'
		//    name=EString
		//    '{'
		//        ('boundTo' boundTo=EString)?
		//        'contractDefinition' contractDefinition=ContractDefinition0
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'ContractDefinition'
		//name=EString
		//'{'
		//    ('boundTo' boundTo=EString)?
		//    'contractDefinition' contractDefinition=ContractDefinition0
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'ContractDefinition'
		public Keyword getContractDefinitionKeyword_0() { return cContractDefinitionKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('boundTo' boundTo=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'boundTo'
		public Keyword getBoundToKeyword_3_0() { return cBoundToKeyword_3_0; }
		
		//boundTo=EString
		public Assignment getBoundToAssignment_3_1() { return cBoundToAssignment_3_1; }
		
		//EString
		public RuleCall getBoundToEStringParserRuleCall_3_1_0() { return cBoundToEStringParserRuleCall_3_1_0; }
		
		//'contractDefinition'
		public Keyword getContractDefinitionKeyword_4() { return cContractDefinitionKeyword_4; }
		
		//contractDefinition=ContractDefinition0
		public Assignment getContractDefinitionAssignment_5() { return cContractDefinitionAssignment_5; }
		
		//ContractDefinition0
		public RuleCall getContractDefinitionContractDefinition0ParserRuleCall_5_0() { return cContractDefinitionContractDefinition0ParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class ContractDefinition0Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Library.ContractDefinition0");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cConditionDefParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cValueRangeDefinitionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cFieldRangeDefinitionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//ContractDefinition0:
		//    ConditionDef | ValueRangeDefinition | FieldRangeDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//ConditionDef | ValueRangeDefinition | FieldRangeDefinition
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ConditionDef
		public RuleCall getConditionDefParserRuleCall_0() { return cConditionDefParserRuleCall_0; }
		
		//ValueRangeDefinition
		public RuleCall getValueRangeDefinitionParserRuleCall_1() { return cValueRangeDefinitionParserRuleCall_1; }
		
		//FieldRangeDefinition
		public RuleCall getFieldRangeDefinitionParserRuleCall_2() { return cFieldRangeDefinitionParserRuleCall_2; }
	}
	public class ArgumentDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Library.ArgumentDefinition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDataDictionaryDefinitionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDataFieldDefinitionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//// Abstract ArgumentDefinition
		//ArgumentDefinition:
		//    DataDictionaryDefinition | DataFieldDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//DataDictionaryDefinition | DataFieldDefinition
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DataDictionaryDefinition
		public RuleCall getDataDictionaryDefinitionParserRuleCall_0() { return cDataDictionaryDefinitionParserRuleCall_0; }
		
		//DataFieldDefinition
		public RuleCall getDataFieldDefinitionParserRuleCall_1() { return cDataFieldDefinitionParserRuleCall_1; }
	}
	public class DataDictionaryDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Library.DataDictionaryDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDataDictionaryDefinitionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cBoundToKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cBoundToAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cBoundToEStringParserRuleCall_3_1_0 = (RuleCall)cBoundToAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cDatafielddefinitionKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cDatafielddefinitionAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cDatafielddefinitionDataFieldDefinitionParserRuleCall_4_2_0 = (RuleCall)cDatafielddefinitionAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cDatafielddefinitionAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cDatafielddefinitionDataFieldDefinitionParserRuleCall_4_3_1_0 = (RuleCall)cDatafielddefinitionAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//DataDictionaryDefinition:
		//    'DataDictionaryDefinition'
		//    name=EString
		//    '{'
		//        ('boundTo' boundTo=EString)?
		//        ('datafielddefinition' '{' datafielddefinition+=DataFieldDefinition ( "," datafielddefinition+=DataFieldDefinition)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'DataDictionaryDefinition'
		//name=EString
		//'{'
		//    ('boundTo' boundTo=EString)?
		//    ('datafielddefinition' '{' datafielddefinition+=DataFieldDefinition ( "," datafielddefinition+=DataFieldDefinition)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'DataDictionaryDefinition'
		public Keyword getDataDictionaryDefinitionKeyword_0() { return cDataDictionaryDefinitionKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('boundTo' boundTo=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'boundTo'
		public Keyword getBoundToKeyword_3_0() { return cBoundToKeyword_3_0; }
		
		//boundTo=EString
		public Assignment getBoundToAssignment_3_1() { return cBoundToAssignment_3_1; }
		
		//EString
		public RuleCall getBoundToEStringParserRuleCall_3_1_0() { return cBoundToEStringParserRuleCall_3_1_0; }
		
		//('datafielddefinition' '{' datafielddefinition+=DataFieldDefinition ( "," datafielddefinition+=DataFieldDefinition)* '}' )?
		public Group getGroup_4() { return cGroup_4; }
		
		//'datafielddefinition'
		public Keyword getDatafielddefinitionKeyword_4_0() { return cDatafielddefinitionKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//datafielddefinition+=DataFieldDefinition
		public Assignment getDatafielddefinitionAssignment_4_2() { return cDatafielddefinitionAssignment_4_2; }
		
		//DataFieldDefinition
		public RuleCall getDatafielddefinitionDataFieldDefinitionParserRuleCall_4_2_0() { return cDatafielddefinitionDataFieldDefinitionParserRuleCall_4_2_0; }
		
		//( "," datafielddefinition+=DataFieldDefinition)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//datafielddefinition+=DataFieldDefinition
		public Assignment getDatafielddefinitionAssignment_4_3_1() { return cDatafielddefinitionAssignment_4_3_1; }
		
		//DataFieldDefinition
		public RuleCall getDatafielddefinitionDataFieldDefinitionParserRuleCall_4_3_1_0() { return cDatafielddefinitionDataFieldDefinitionParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class DataFieldDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Library.DataFieldDefinition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCategoricalDefParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cContinuousDefParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cDateDefParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//// Abstract DataFieldDefinition
		//DataFieldDefinition:
		//    CategoricalDef | ContinuousDef | DateDef;
		@Override public ParserRule getRule() { return rule; }
		
		//CategoricalDef | ContinuousDef | DateDef
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//CategoricalDef
		public RuleCall getCategoricalDefParserRuleCall_0() { return cCategoricalDefParserRuleCall_0; }
		
		//ContinuousDef
		public RuleCall getContinuousDefParserRuleCall_1() { return cContinuousDefParserRuleCall_1; }
		
		//DateDef
		public RuleCall getDateDefParserRuleCall_2() { return cDateDefParserRuleCall_2; }
	}
	public class CategoricalDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Library.CategoricalDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCategoricalDefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cBoundToKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cBoundToAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cBoundToEStringParserRuleCall_3_1_0 = (RuleCall)cBoundToAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//CategoricalDef:
		//    'CategoricalDef'
		//    name=EString
		//    '{'
		//        ('boundTo' boundTo=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'CategoricalDef'
		//name=EString
		//'{'
		//    ('boundTo' boundTo=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'CategoricalDef'
		public Keyword getCategoricalDefKeyword_0() { return cCategoricalDefKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('boundTo' boundTo=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'boundTo'
		public Keyword getBoundToKeyword_3_0() { return cBoundToKeyword_3_0; }
		
		//boundTo=EString
		public Assignment getBoundToAssignment_3_1() { return cBoundToAssignment_3_1; }
		
		//EString
		public RuleCall getBoundToEStringParserRuleCall_3_1_0() { return cBoundToEStringParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ContinuousDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Library.ContinuousDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cContinuousDefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cBoundToKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cBoundToAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cBoundToEStringParserRuleCall_3_1_0 = (RuleCall)cBoundToAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ContinuousDef:
		//    'ContinuousDef'
		//    name=EString
		//    '{'
		//        ('boundTo' boundTo=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'ContinuousDef'
		//name=EString
		//'{'
		//    ('boundTo' boundTo=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'ContinuousDef'
		public Keyword getContinuousDefKeyword_0() { return cContinuousDefKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('boundTo' boundTo=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'boundTo'
		public Keyword getBoundToKeyword_3_0() { return cBoundToKeyword_3_0; }
		
		//boundTo=EString
		public Assignment getBoundToAssignment_3_1() { return cBoundToAssignment_3_1; }
		
		//EString
		public RuleCall getBoundToEStringParserRuleCall_3_1_0() { return cBoundToEStringParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class DateDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Library.DateDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDateDefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cBoundToKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cBoundToAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cBoundToEStringParserRuleCall_3_1_0 = (RuleCall)cBoundToAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//DateDef:
		//    'DateDef'
		//    name=EString
		//    '{'
		//        ('boundTo' boundTo=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'DateDef'
		//name=EString
		//'{'
		//    ('boundTo' boundTo=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'DateDef'
		public Keyword getDateDefKeyword_0() { return cDateDefKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('boundTo' boundTo=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'boundTo'
		public Keyword getBoundToKeyword_3_0() { return cBoundToKeyword_3_0; }
		
		//boundTo=EString
		public Assignment getBoundToAssignment_3_1() { return cBoundToAssignment_3_1; }
		
		//EString
		public RuleCall getBoundToEStringParserRuleCall_3_1_0() { return cBoundToEStringParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class MapDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Library.MapDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMapDefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cRequiredKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cRequiredAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cRequiredEBooleanParserRuleCall_3_1_0 = (RuleCall)cRequiredAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cBoundToKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cBoundToAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cBoundToEStringParserRuleCall_4_1_0 = (RuleCall)cBoundToAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//// ParameterDefinition concrete classes
		//MapDef:
		//    'MapDef'
		//    name=EString
		//    '{'
		//        ('required' required=EBoolean)?
		//        ('boundTo' boundTo=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'MapDef'
		//name=EString
		//'{'
		//    ('required' required=EBoolean)?
		//    ('boundTo' boundTo=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'MapDef'
		public Keyword getMapDefKeyword_0() { return cMapDefKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('required' required=EBoolean)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'required'
		public Keyword getRequiredKeyword_3_0() { return cRequiredKeyword_3_0; }
		
		//required=EBoolean
		public Assignment getRequiredAssignment_3_1() { return cRequiredAssignment_3_1; }
		
		//EBoolean
		public RuleCall getRequiredEBooleanParserRuleCall_3_1_0() { return cRequiredEBooleanParserRuleCall_3_1_0; }
		
		//('boundTo' boundTo=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'boundTo'
		public Keyword getBoundToKeyword_4_0() { return cBoundToKeyword_4_0; }
		
		//boundTo=EString
		public Assignment getBoundToAssignment_4_1() { return cBoundToAssignment_4_1; }
		
		//EString
		public RuleCall getBoundToEStringParserRuleCall_4_1_0() { return cBoundToEStringParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class CastTypeDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Library.CastTypeDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCastTypeDefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cRequiredKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cRequiredAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cRequiredEBooleanParserRuleCall_3_1_0 = (RuleCall)cRequiredAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cBoundToKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cBoundToAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cBoundToEStringParserRuleCall_4_1_0 = (RuleCall)cBoundToAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//CastTypeDef:
		//    'CastTypeDef'
		//    name=EString
		//    '{'
		//        ('required' required=EBoolean)?
		//        ('boundTo' boundTo=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'CastTypeDef'
		//name=EString
		//'{'
		//    ('required' required=EBoolean)?
		//    ('boundTo' boundTo=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'CastTypeDef'
		public Keyword getCastTypeDefKeyword_0() { return cCastTypeDefKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('required' required=EBoolean)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'required'
		public Keyword getRequiredKeyword_3_0() { return cRequiredKeyword_3_0; }
		
		//required=EBoolean
		public Assignment getRequiredAssignment_3_1() { return cRequiredAssignment_3_1; }
		
		//EBoolean
		public RuleCall getRequiredEBooleanParserRuleCall_3_1_0() { return cRequiredEBooleanParserRuleCall_3_1_0; }
		
		//('boundTo' boundTo=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'boundTo'
		public Keyword getBoundToKeyword_4_0() { return cBoundToKeyword_4_0; }
		
		//boundTo=EString
		public Assignment getBoundToAssignment_4_1() { return cBoundToAssignment_4_1; }
		
		//EString
		public RuleCall getBoundToEStringParserRuleCall_4_1_0() { return cBoundToEStringParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class PrimitiveDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Library.PrimitiveDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPrimitiveDefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cRequiredKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cRequiredAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cRequiredEBooleanParserRuleCall_3_1_0 = (RuleCall)cRequiredAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cBoundToKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cBoundToAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cBoundToEStringParserRuleCall_4_1_0 = (RuleCall)cBoundToAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//PrimitiveDef:
		//    'PrimitiveDef'
		//    name=EString
		//    '{'
		//        ('required' required=EBoolean)?
		//        ('boundTo' boundTo=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'PrimitiveDef'
		//name=EString
		//'{'
		//    ('required' required=EBoolean)?
		//    ('boundTo' boundTo=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'PrimitiveDef'
		public Keyword getPrimitiveDefKeyword_0() { return cPrimitiveDefKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('required' required=EBoolean)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'required'
		public Keyword getRequiredKeyword_3_0() { return cRequiredKeyword_3_0; }
		
		//required=EBoolean
		public Assignment getRequiredAssignment_3_1() { return cRequiredAssignment_3_1; }
		
		//EBoolean
		public RuleCall getRequiredEBooleanParserRuleCall_3_1_0() { return cRequiredEBooleanParserRuleCall_3_1_0; }
		
		//('boundTo' boundTo=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'boundTo'
		public Keyword getBoundToKeyword_4_0() { return cBoundToKeyword_4_0; }
		
		//boundTo=EString
		public Assignment getBoundToAssignment_4_1() { return cBoundToAssignment_4_1; }
		
		//EString
		public RuleCall getBoundToEStringParserRuleCall_4_1_0() { return cBoundToEStringParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class DerivedFieldDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Library.DerivedFieldDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDerivedFieldDefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cRequiredKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cRequiredAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cRequiredEBooleanParserRuleCall_3_1_0 = (RuleCall)cRequiredAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cBoundToKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cBoundToAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cBoundToEStringParserRuleCall_4_1_0 = (RuleCall)cBoundToAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//DerivedFieldDef:
		//    'DerivedFieldDef'
		//    name=EString
		//    '{'
		//        ('required' required=EBoolean)?
		//        ('boundTo' boundTo=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'DerivedFieldDef'
		//name=EString
		//'{'
		//    ('required' required=EBoolean)?
		//    ('boundTo' boundTo=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'DerivedFieldDef'
		public Keyword getDerivedFieldDefKeyword_0() { return cDerivedFieldDefKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('required' required=EBoolean)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'required'
		public Keyword getRequiredKeyword_3_0() { return cRequiredKeyword_3_0; }
		
		//required=EBoolean
		public Assignment getRequiredAssignment_3_1() { return cRequiredAssignment_3_1; }
		
		//EBoolean
		public RuleCall getRequiredEBooleanParserRuleCall_3_1_0() { return cRequiredEBooleanParserRuleCall_3_1_0; }
		
		//('boundTo' boundTo=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'boundTo'
		public Keyword getBoundToKeyword_4_0() { return cBoundToKeyword_4_0; }
		
		//boundTo=EString
		public Assignment getBoundToAssignment_4_1() { return cBoundToAssignment_4_1; }
		
		//EString
		public RuleCall getBoundToEStringParserRuleCall_4_1_0() { return cBoundToEStringParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class FilterValueDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Library.FilterValueDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFilterValueDefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cRequiredKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cRequiredAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cRequiredEBooleanParserRuleCall_3_1_0 = (RuleCall)cRequiredAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cBoundToKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cBoundToAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cBoundToEStringParserRuleCall_4_1_0 = (RuleCall)cBoundToAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cMatchingvaluedefKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cMatchingvaluedefAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cMatchingvaluedefMatchingValueDefParserRuleCall_5_2_0 = (RuleCall)cMatchingvaluedefAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cMatchingvaluedefAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cMatchingvaluedefMatchingValueDefParserRuleCall_5_3_1_0 = (RuleCall)cMatchingvaluedefAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cPrimitivedefKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cPrimitivedefAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cPrimitivedefPrimitiveDefParserRuleCall_6_2_0 = (RuleCall)cPrimitivedefAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cPrimitivedefAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cPrimitivedefPrimitiveDefParserRuleCall_6_3_1_0 = (RuleCall)cPrimitivedefAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//FilterValueDef:
		//    'FilterValueDef'
		//    name=EString
		//    '{'
		//        ('required' required=EBoolean)?
		//        ('boundTo' boundTo=EString)?
		//        ('matchingvaluedef' '{' matchingvaluedef+=MatchingValueDef ( "," matchingvaluedef+=MatchingValueDef)* '}' )?
		//        ('primitivedef' '{' primitivedef+=PrimitiveDef ( "," primitivedef+=PrimitiveDef)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'FilterValueDef'
		//name=EString
		//'{'
		//    ('required' required=EBoolean)?
		//    ('boundTo' boundTo=EString)?
		//    ('matchingvaluedef' '{' matchingvaluedef+=MatchingValueDef ( "," matchingvaluedef+=MatchingValueDef)* '}' )?
		//    ('primitivedef' '{' primitivedef+=PrimitiveDef ( "," primitivedef+=PrimitiveDef)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'FilterValueDef'
		public Keyword getFilterValueDefKeyword_0() { return cFilterValueDefKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('required' required=EBoolean)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'required'
		public Keyword getRequiredKeyword_3_0() { return cRequiredKeyword_3_0; }
		
		//required=EBoolean
		public Assignment getRequiredAssignment_3_1() { return cRequiredAssignment_3_1; }
		
		//EBoolean
		public RuleCall getRequiredEBooleanParserRuleCall_3_1_0() { return cRequiredEBooleanParserRuleCall_3_1_0; }
		
		//('boundTo' boundTo=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'boundTo'
		public Keyword getBoundToKeyword_4_0() { return cBoundToKeyword_4_0; }
		
		//boundTo=EString
		public Assignment getBoundToAssignment_4_1() { return cBoundToAssignment_4_1; }
		
		//EString
		public RuleCall getBoundToEStringParserRuleCall_4_1_0() { return cBoundToEStringParserRuleCall_4_1_0; }
		
		//('matchingvaluedef' '{' matchingvaluedef+=MatchingValueDef ( "," matchingvaluedef+=MatchingValueDef)* '}' )?
		public Group getGroup_5() { return cGroup_5; }
		
		//'matchingvaluedef'
		public Keyword getMatchingvaluedefKeyword_5_0() { return cMatchingvaluedefKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//matchingvaluedef+=MatchingValueDef
		public Assignment getMatchingvaluedefAssignment_5_2() { return cMatchingvaluedefAssignment_5_2; }
		
		//MatchingValueDef
		public RuleCall getMatchingvaluedefMatchingValueDefParserRuleCall_5_2_0() { return cMatchingvaluedefMatchingValueDefParserRuleCall_5_2_0; }
		
		//( "," matchingvaluedef+=MatchingValueDef)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//matchingvaluedef+=MatchingValueDef
		public Assignment getMatchingvaluedefAssignment_5_3_1() { return cMatchingvaluedefAssignment_5_3_1; }
		
		//MatchingValueDef
		public RuleCall getMatchingvaluedefMatchingValueDefParserRuleCall_5_3_1_0() { return cMatchingvaluedefMatchingValueDefParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//('primitivedef' '{' primitivedef+=PrimitiveDef ( "," primitivedef+=PrimitiveDef)* '}' )?
		public Group getGroup_6() { return cGroup_6; }
		
		//'primitivedef'
		public Keyword getPrimitivedefKeyword_6_0() { return cPrimitivedefKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//primitivedef+=PrimitiveDef
		public Assignment getPrimitivedefAssignment_6_2() { return cPrimitivedefAssignment_6_2; }
		
		//PrimitiveDef
		public RuleCall getPrimitivedefPrimitiveDefParserRuleCall_6_2_0() { return cPrimitivedefPrimitiveDefParserRuleCall_6_2_0; }
		
		//( "," primitivedef+=PrimitiveDef)*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//primitivedef+=PrimitiveDef
		public Assignment getPrimitivedefAssignment_6_3_1() { return cPrimitivedefAssignment_6_3_1; }
		
		//PrimitiveDef
		public RuleCall getPrimitivedefPrimitiveDefParserRuleCall_6_3_1_0() { return cPrimitivedefPrimitiveDefParserRuleCall_6_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class MatchingValueDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Library.MatchingValueDef");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRangeDefParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMissingValuesDefParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cDateRangeDefParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//MatchingValueDef:
		//    RangeDef | MissingValuesDef | DateRangeDef;
		@Override public ParserRule getRule() { return rule; }
		
		//RangeDef | MissingValuesDef | DateRangeDef
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//RangeDef
		public RuleCall getRangeDefParserRuleCall_0() { return cRangeDefParserRuleCall_0; }
		
		//MissingValuesDef
		public RuleCall getMissingValuesDefParserRuleCall_1() { return cMissingValuesDefParserRuleCall_1; }
		
		//DateRangeDef
		public RuleCall getDateRangeDefParserRuleCall_2() { return cDateRangeDefParserRuleCall_2; }
	}
	public class RangeDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Library.RangeDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRangeDefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cRequiredKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cRequiredAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cRequiredEBooleanParserRuleCall_3_1_0 = (RuleCall)cRequiredAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cBoundToKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cBoundToAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cBoundToEStringParserRuleCall_4_1_0 = (RuleCall)cBoundToAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//RangeDef:
		//    'RangeDef'
		//    name=EString
		//    '{'
		//        ('required' required=EBoolean)?
		//        ('boundTo' boundTo=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'RangeDef'
		//name=EString
		//'{'
		//    ('required' required=EBoolean)?
		//    ('boundTo' boundTo=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'RangeDef'
		public Keyword getRangeDefKeyword_0() { return cRangeDefKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('required' required=EBoolean)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'required'
		public Keyword getRequiredKeyword_3_0() { return cRequiredKeyword_3_0; }
		
		//required=EBoolean
		public Assignment getRequiredAssignment_3_1() { return cRequiredAssignment_3_1; }
		
		//EBoolean
		public RuleCall getRequiredEBooleanParserRuleCall_3_1_0() { return cRequiredEBooleanParserRuleCall_3_1_0; }
		
		//('boundTo' boundTo=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'boundTo'
		public Keyword getBoundToKeyword_4_0() { return cBoundToKeyword_4_0; }
		
		//boundTo=EString
		public Assignment getBoundToAssignment_4_1() { return cBoundToAssignment_4_1; }
		
		//EString
		public RuleCall getBoundToEStringParserRuleCall_4_1_0() { return cBoundToEStringParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class MissingValuesDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Library.MissingValuesDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMissingValuesDefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cRequiredKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cRequiredAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cRequiredEBooleanParserRuleCall_3_1_0 = (RuleCall)cRequiredAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cBoundToKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cBoundToAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cBoundToEStringParserRuleCall_4_1_0 = (RuleCall)cBoundToAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//MissingValuesDef:
		//    'MissingValuesDef'
		//    name=EString
		//    '{'
		//        ('required' required=EBoolean)?
		//        ('boundTo' boundTo=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'MissingValuesDef'
		//name=EString
		//'{'
		//    ('required' required=EBoolean)?
		//    ('boundTo' boundTo=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'MissingValuesDef'
		public Keyword getMissingValuesDefKeyword_0() { return cMissingValuesDefKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('required' required=EBoolean)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'required'
		public Keyword getRequiredKeyword_3_0() { return cRequiredKeyword_3_0; }
		
		//required=EBoolean
		public Assignment getRequiredAssignment_3_1() { return cRequiredAssignment_3_1; }
		
		//EBoolean
		public RuleCall getRequiredEBooleanParserRuleCall_3_1_0() { return cRequiredEBooleanParserRuleCall_3_1_0; }
		
		//('boundTo' boundTo=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'boundTo'
		public Keyword getBoundToKeyword_4_0() { return cBoundToKeyword_4_0; }
		
		//boundTo=EString
		public Assignment getBoundToAssignment_4_1() { return cBoundToAssignment_4_1; }
		
		//EString
		public RuleCall getBoundToEStringParserRuleCall_4_1_0() { return cBoundToEStringParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class DateRangeDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Library.DateRangeDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDateRangeDefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cRequiredKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cRequiredAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cRequiredEBooleanParserRuleCall_3_1_0 = (RuleCall)cRequiredAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cBoundToKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cBoundToAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cBoundToEStringParserRuleCall_4_1_0 = (RuleCall)cBoundToAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//DateRangeDef:
		//    'DateRangeDef'
		//    name=EString
		//    '{'
		//        ('required' required=EBoolean)?
		//        ('boundTo' boundTo=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'DateRangeDef'
		//name=EString
		//'{'
		//    ('required' required=EBoolean)?
		//    ('boundTo' boundTo=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'DateRangeDef'
		public Keyword getDateRangeDefKeyword_0() { return cDateRangeDefKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('required' required=EBoolean)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'required'
		public Keyword getRequiredKeyword_3_0() { return cRequiredKeyword_3_0; }
		
		//required=EBoolean
		public Assignment getRequiredAssignment_3_1() { return cRequiredAssignment_3_1; }
		
		//EBoolean
		public RuleCall getRequiredEBooleanParserRuleCall_3_1_0() { return cRequiredEBooleanParserRuleCall_3_1_0; }
		
		//('boundTo' boundTo=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'boundTo'
		public Keyword getBoundToKeyword_4_0() { return cBoundToKeyword_4_0; }
		
		//boundTo=EString
		public Assignment getBoundToAssignment_4_1() { return cBoundToAssignment_4_1; }
		
		//EString
		public RuleCall getBoundToEStringParserRuleCall_4_1_0() { return cBoundToEStringParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class DiscretizeBinDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Library.DiscretizeBinDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDiscretizeBinDefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cRequiredKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cRequiredAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cRequiredEBooleanParserRuleCall_3_1_0 = (RuleCall)cRequiredAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cBoundToKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cBoundToAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cBoundToEStringParserRuleCall_4_1_0 = (RuleCall)cBoundToAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//DiscretizeBinDef:
		//    'DiscretizeBinDef'
		//    name=EString
		//    '{'
		//        ('required' required=EBoolean)?
		//        ('boundTo' boundTo=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'DiscretizeBinDef'
		//name=EString
		//'{'
		//    ('required' required=EBoolean)?
		//    ('boundTo' boundTo=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'DiscretizeBinDef'
		public Keyword getDiscretizeBinDefKeyword_0() { return cDiscretizeBinDefKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('required' required=EBoolean)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'required'
		public Keyword getRequiredKeyword_3_0() { return cRequiredKeyword_3_0; }
		
		//required=EBoolean
		public Assignment getRequiredAssignment_3_1() { return cRequiredAssignment_3_1; }
		
		//EBoolean
		public RuleCall getRequiredEBooleanParserRuleCall_3_1_0() { return cRequiredEBooleanParserRuleCall_3_1_0; }
		
		//('boundTo' boundTo=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'boundTo'
		public Keyword getBoundToKeyword_4_0() { return cBoundToKeyword_4_0; }
		
		//boundTo=EString
		public Assignment getBoundToAssignment_4_1() { return cBoundToAssignment_4_1; }
		
		//EString
		public RuleCall getBoundToEStringParserRuleCall_4_1_0() { return cBoundToEStringParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class DerivedValueDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Library.DerivedValueDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDerivedValueDefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cRequiredKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cRequiredAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cRequiredEBooleanParserRuleCall_3_1_0 = (RuleCall)cRequiredAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cBoundToKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cBoundToAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cBoundToEStringParserRuleCall_4_1_0 = (RuleCall)cBoundToAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//DerivedValueDef:
		//    'DerivedValueDef'
		//    name=EString
		//    '{'
		//        ('required' required=EBoolean)?
		//        ('boundTo' boundTo=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'DerivedValueDef'
		//name=EString
		//'{'
		//    ('required' required=EBoolean)?
		//    ('boundTo' boundTo=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'DerivedValueDef'
		public Keyword getDerivedValueDefKeyword_0() { return cDerivedValueDefKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('required' required=EBoolean)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'required'
		public Keyword getRequiredKeyword_3_0() { return cRequiredKeyword_3_0; }
		
		//required=EBoolean
		public Assignment getRequiredAssignment_3_1() { return cRequiredAssignment_3_1; }
		
		//EBoolean
		public RuleCall getRequiredEBooleanParserRuleCall_3_1_0() { return cRequiredEBooleanParserRuleCall_3_1_0; }
		
		//('boundTo' boundTo=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'boundTo'
		public Keyword getBoundToKeyword_4_0() { return cBoundToKeyword_4_0; }
		
		//boundTo=EString
		public Assignment getBoundToAssignment_4_1() { return cBoundToAssignment_4_1; }
		
		//EString
		public RuleCall getBoundToEStringParserRuleCall_4_1_0() { return cBoundToEStringParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class NumOpDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Library.NumOpDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNumOpDefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cRequiredKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cRequiredAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cRequiredEBooleanParserRuleCall_3_1_0 = (RuleCall)cRequiredAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cBoundToKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cBoundToAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cBoundToEStringParserRuleCall_4_1_0 = (RuleCall)cBoundToAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//NumOpDef:
		//    'NumOpDef'
		//    name=EString
		//    '{'
		//        ('required' required=EBoolean)?
		//        ('boundTo' boundTo=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'NumOpDef'
		//name=EString
		//'{'
		//    ('required' required=EBoolean)?
		//    ('boundTo' boundTo=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'NumOpDef'
		public Keyword getNumOpDefKeyword_0() { return cNumOpDefKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('required' required=EBoolean)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'required'
		public Keyword getRequiredKeyword_3_0() { return cRequiredKeyword_3_0; }
		
		//required=EBoolean
		public Assignment getRequiredAssignment_3_1() { return cRequiredAssignment_3_1; }
		
		//EBoolean
		public RuleCall getRequiredEBooleanParserRuleCall_3_1_0() { return cRequiredEBooleanParserRuleCall_3_1_0; }
		
		//('boundTo' boundTo=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'boundTo'
		public Keyword getBoundToKeyword_4_0() { return cBoundToKeyword_4_0; }
		
		//boundTo=EString
		public Assignment getBoundToAssignment_4_1() { return cBoundToAssignment_4_1; }
		
		//EString
		public RuleCall getBoundToEStringParserRuleCall_4_1_0() { return cBoundToEStringParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class FixValueDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Library.FixValueDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFixValueDefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cRequiredKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cRequiredAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cRequiredEBooleanParserRuleCall_3_1_0 = (RuleCall)cRequiredAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cBoundToKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cBoundToAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cBoundToEStringParserRuleCall_4_1_0 = (RuleCall)cBoundToAssignment_4_1.eContents().get(0);
		private final Keyword cValueKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cValueAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cValuePrimitiveDefParserRuleCall_6_0 = (RuleCall)cValueAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//FixValueDef:
		//    'FixValueDef'
		//    name=EString
		//    '{'
		//        ('required' required=EBoolean)?
		//        ('boundTo' boundTo=EString)?
		//        'value' value=PrimitiveDef
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'FixValueDef'
		//name=EString
		//'{'
		//    ('required' required=EBoolean)?
		//    ('boundTo' boundTo=EString)?
		//    'value' value=PrimitiveDef
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'FixValueDef'
		public Keyword getFixValueDefKeyword_0() { return cFixValueDefKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('required' required=EBoolean)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'required'
		public Keyword getRequiredKeyword_3_0() { return cRequiredKeyword_3_0; }
		
		//required=EBoolean
		public Assignment getRequiredAssignment_3_1() { return cRequiredAssignment_3_1; }
		
		//EBoolean
		public RuleCall getRequiredEBooleanParserRuleCall_3_1_0() { return cRequiredEBooleanParserRuleCall_3_1_0; }
		
		//('boundTo' boundTo=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'boundTo'
		public Keyword getBoundToKeyword_4_0() { return cBoundToKeyword_4_0; }
		
		//boundTo=EString
		public Assignment getBoundToAssignment_4_1() { return cBoundToAssignment_4_1; }
		
		//EString
		public RuleCall getBoundToEStringParserRuleCall_4_1_0() { return cBoundToEStringParserRuleCall_4_1_0; }
		
		//'value'
		public Keyword getValueKeyword_5() { return cValueKeyword_5; }
		
		//value=PrimitiveDef
		public Assignment getValueAssignment_6() { return cValueAssignment_6; }
		
		//PrimitiveDef
		public RuleCall getValuePrimitiveDefParserRuleCall_6_0() { return cValuePrimitiveDefParserRuleCall_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class FieldRangeDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Library.FieldRangeDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFieldRangeDefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cRequiredKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cRequiredAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cRequiredEBooleanParserRuleCall_3_1_0 = (RuleCall)cRequiredAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cBoundToKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cBoundToAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cBoundToEStringParserRuleCall_4_1_0 = (RuleCall)cBoundToAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//FieldRangeDef:
		//    'FieldRangeDef'
		//    name=EString
		//    '{'
		//        ('required' required=EBoolean)?
		//        ('boundTo' boundTo=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'FieldRangeDef'
		//name=EString
		//'{'
		//    ('required' required=EBoolean)?
		//    ('boundTo' boundTo=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'FieldRangeDef'
		public Keyword getFieldRangeDefKeyword_0() { return cFieldRangeDefKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('required' required=EBoolean)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'required'
		public Keyword getRequiredKeyword_3_0() { return cRequiredKeyword_3_0; }
		
		//required=EBoolean
		public Assignment getRequiredAssignment_3_1() { return cRequiredAssignment_3_1; }
		
		//EBoolean
		public RuleCall getRequiredEBooleanParserRuleCall_3_1_0() { return cRequiredEBooleanParserRuleCall_3_1_0; }
		
		//('boundTo' boundTo=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'boundTo'
		public Keyword getBoundToKeyword_4_0() { return cBoundToKeyword_4_0; }
		
		//boundTo=EString
		public Assignment getBoundToAssignment_4_1() { return cBoundToAssignment_4_1; }
		
		//EString
		public RuleCall getBoundToEStringParserRuleCall_4_1_0() { return cBoundToEStringParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class MathOpDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Library.MathOpDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMathOpDefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cRequiredKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cRequiredAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cRequiredEBooleanParserRuleCall_3_1_0 = (RuleCall)cRequiredAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cBoundToKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cBoundToAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cBoundToEStringParserRuleCall_4_1_0 = (RuleCall)cBoundToAssignment_4_1.eContents().get(0);
		private final Keyword cOperandDefKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cOperandDefAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cOperandDefOperandDefParserRuleCall_7_0 = (RuleCall)cOperandDefAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cCommaKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cOperandDefAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cOperandDefOperandDefParserRuleCall_8_1_0 = (RuleCall)cOperandDefAssignment_8_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//MathOpDef:
		//    'MathOpDef'
		//    name=EString
		//    '{'
		//        ('required' required=EBoolean)?
		//        ('boundTo' boundTo=EString)?
		//        'operandDef' '{' operandDef+=OperandDef ( "," operandDef+=OperandDef)* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'MathOpDef'
		//name=EString
		//'{'
		//    ('required' required=EBoolean)?
		//    ('boundTo' boundTo=EString)?
		//    'operandDef' '{' operandDef+=OperandDef ( "," operandDef+=OperandDef)* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'MathOpDef'
		public Keyword getMathOpDefKeyword_0() { return cMathOpDefKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('required' required=EBoolean)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'required'
		public Keyword getRequiredKeyword_3_0() { return cRequiredKeyword_3_0; }
		
		//required=EBoolean
		public Assignment getRequiredAssignment_3_1() { return cRequiredAssignment_3_1; }
		
		//EBoolean
		public RuleCall getRequiredEBooleanParserRuleCall_3_1_0() { return cRequiredEBooleanParserRuleCall_3_1_0; }
		
		//('boundTo' boundTo=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'boundTo'
		public Keyword getBoundToKeyword_4_0() { return cBoundToKeyword_4_0; }
		
		//boundTo=EString
		public Assignment getBoundToAssignment_4_1() { return cBoundToAssignment_4_1; }
		
		//EString
		public RuleCall getBoundToEStringParserRuleCall_4_1_0() { return cBoundToEStringParserRuleCall_4_1_0; }
		
		//'operandDef'
		public Keyword getOperandDefKeyword_5() { return cOperandDefKeyword_5; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }
		
		//operandDef+=OperandDef
		public Assignment getOperandDefAssignment_7() { return cOperandDefAssignment_7; }
		
		//OperandDef
		public RuleCall getOperandDefOperandDefParserRuleCall_7_0() { return cOperandDefOperandDefParserRuleCall_7_0; }
		
		//( "," operandDef+=OperandDef)*
		public Group getGroup_8() { return cGroup_8; }
		
		//","
		public Keyword getCommaKeyword_8_0() { return cCommaKeyword_8_0; }
		
		//operandDef+=OperandDef
		public Assignment getOperandDefAssignment_8_1() { return cOperandDefAssignment_8_1; }
		
		//OperandDef
		public RuleCall getOperandDefOperandDefParserRuleCall_8_1_0() { return cOperandDefOperandDefParserRuleCall_8_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}
	public class JoinDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Library.JoinDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cJoinDefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cRequiredKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cRequiredAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cRequiredEBooleanParserRuleCall_3_1_0 = (RuleCall)cRequiredAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cBoundToKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cBoundToAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cBoundToEStringParserRuleCall_4_1_0 = (RuleCall)cBoundToAssignment_4_1.eContents().get(0);
		private final Keyword cOperandDefKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cOperandDefAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cOperandDefOperandDefParserRuleCall_7_0 = (RuleCall)cOperandDefAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cCommaKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cOperandDefAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cOperandDefOperandDefParserRuleCall_8_1_0 = (RuleCall)cOperandDefAssignment_8_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//JoinDef:
		//    'JoinDef'
		//    name=EString
		//    '{'
		//        ('required' required=EBoolean)?
		//        ('boundTo' boundTo=EString)?
		//        'operandDef' '{' operandDef+=OperandDef ( "," operandDef+=OperandDef)* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'JoinDef'
		//name=EString
		//'{'
		//    ('required' required=EBoolean)?
		//    ('boundTo' boundTo=EString)?
		//    'operandDef' '{' operandDef+=OperandDef ( "," operandDef+=OperandDef)* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'JoinDef'
		public Keyword getJoinDefKeyword_0() { return cJoinDefKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('required' required=EBoolean)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'required'
		public Keyword getRequiredKeyword_3_0() { return cRequiredKeyword_3_0; }
		
		//required=EBoolean
		public Assignment getRequiredAssignment_3_1() { return cRequiredAssignment_3_1; }
		
		//EBoolean
		public RuleCall getRequiredEBooleanParserRuleCall_3_1_0() { return cRequiredEBooleanParserRuleCall_3_1_0; }
		
		//('boundTo' boundTo=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'boundTo'
		public Keyword getBoundToKeyword_4_0() { return cBoundToKeyword_4_0; }
		
		//boundTo=EString
		public Assignment getBoundToAssignment_4_1() { return cBoundToAssignment_4_1; }
		
		//EString
		public RuleCall getBoundToEStringParserRuleCall_4_1_0() { return cBoundToEStringParserRuleCall_4_1_0; }
		
		//'operandDef'
		public Keyword getOperandDefKeyword_5() { return cOperandDefKeyword_5; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }
		
		//operandDef+=OperandDef
		public Assignment getOperandDefAssignment_7() { return cOperandDefAssignment_7; }
		
		//OperandDef
		public RuleCall getOperandDefOperandDefParserRuleCall_7_0() { return cOperandDefOperandDefParserRuleCall_7_0; }
		
		//( "," operandDef+=OperandDef)*
		public Group getGroup_8() { return cGroup_8; }
		
		//","
		public Keyword getCommaKeyword_8_0() { return cCommaKeyword_8_0; }
		
		//operandDef+=OperandDef
		public Assignment getOperandDefAssignment_8_1() { return cOperandDefAssignment_8_1; }
		
		//OperandDef
		public RuleCall getOperandDefOperandDefParserRuleCall_8_1_0() { return cOperandDefOperandDefParserRuleCall_8_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}
	public class OperandDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Library.OperandDef");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cFixValueDefParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cFieldDefParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//OperandDef:
		//    FixValueDef | FieldDef;
		@Override public ParserRule getRule() { return rule; }
		
		//FixValueDef | FieldDef
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//FixValueDef
		public RuleCall getFixValueDefParserRuleCall_0() { return cFixValueDefParserRuleCall_0; }
		
		//FieldDef
		public RuleCall getFieldDefParserRuleCall_1() { return cFieldDefParserRuleCall_1; }
	}
	public class FieldDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Library.FieldDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFieldDefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cRequiredKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cRequiredAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cRequiredEBooleanParserRuleCall_3_1_0 = (RuleCall)cRequiredAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cBoundToKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cBoundToAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cBoundToEStringParserRuleCall_4_1_0 = (RuleCall)cBoundToAssignment_4_1.eContents().get(0);
		private final Keyword cDatafielddefinitionKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cDatafielddefinitionAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cDatafielddefinitionDataFieldDefinitionCrossReference_6_0 = (CrossReference)cDatafielddefinitionAssignment_6.eContents().get(0);
		private final RuleCall cDatafielddefinitionDataFieldDefinitionEStringParserRuleCall_6_0_1 = (RuleCall)cDatafielddefinitionDataFieldDefinitionCrossReference_6_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//FieldDef:
		//    'FieldDef'
		//    name=EString
		//    '{'
		//        ('required' required=EBoolean)?
		//        ('boundTo' boundTo=EString)?
		//        'datafielddefinition' datafielddefinition=[DataFieldDefinition|EString]
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'FieldDef'
		//name=EString
		//'{'
		//    ('required' required=EBoolean)?
		//    ('boundTo' boundTo=EString)?
		//    'datafielddefinition' datafielddefinition=[DataFieldDefinition|EString]
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'FieldDef'
		public Keyword getFieldDefKeyword_0() { return cFieldDefKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('required' required=EBoolean)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'required'
		public Keyword getRequiredKeyword_3_0() { return cRequiredKeyword_3_0; }
		
		//required=EBoolean
		public Assignment getRequiredAssignment_3_1() { return cRequiredAssignment_3_1; }
		
		//EBoolean
		public RuleCall getRequiredEBooleanParserRuleCall_3_1_0() { return cRequiredEBooleanParserRuleCall_3_1_0; }
		
		//('boundTo' boundTo=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'boundTo'
		public Keyword getBoundToKeyword_4_0() { return cBoundToKeyword_4_0; }
		
		//boundTo=EString
		public Assignment getBoundToAssignment_4_1() { return cBoundToAssignment_4_1; }
		
		//EString
		public RuleCall getBoundToEStringParserRuleCall_4_1_0() { return cBoundToEStringParserRuleCall_4_1_0; }
		
		//'datafielddefinition'
		public Keyword getDatafielddefinitionKeyword_5() { return cDatafielddefinitionKeyword_5; }
		
		//datafielddefinition=[DataFieldDefinition|EString]
		public Assignment getDatafielddefinitionAssignment_6() { return cDatafielddefinitionAssignment_6; }
		
		//[DataFieldDefinition|EString]
		public CrossReference getDatafielddefinitionDataFieldDefinitionCrossReference_6_0() { return cDatafielddefinitionDataFieldDefinitionCrossReference_6_0; }
		
		//EString
		public RuleCall getDatafielddefinitionDataFieldDefinitionEStringParserRuleCall_6_0_1() { return cDatafielddefinitionDataFieldDefinitionEStringParserRuleCall_6_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Library.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//// Utility rules
		//EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Library.EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean:
		//    'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class ConditionDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Library.ConditionDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConditionDefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//// Placeholders for contracts
		//ConditionDef:
		//    'ConditionDef'
		//    name=EString
		//    '{'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'ConditionDef'
		//name=EString
		//'{'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'ConditionDef'
		public Keyword getConditionDefKeyword_0() { return cConditionDefKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class ValueRangeDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Library.ValueRangeDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cValueRangeDefinitionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//ValueRangeDefinition:
		//    'ValueRangeDefinition'
		//    name=EString
		//    '{'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'ValueRangeDefinition'
		//name=EString
		//'{'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'ValueRangeDefinition'
		public Keyword getValueRangeDefinitionKeyword_0() { return cValueRangeDefinitionKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class FieldRangeDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Library.FieldRangeDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFieldRangeDefinitionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//FieldRangeDefinition:
		//    'FieldRangeDefinition'
		//    name=EString
		//    '{'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'FieldRangeDefinition'
		//name=EString
		//'{'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'FieldRangeDefinition'
		public Keyword getFieldRangeDefinitionKeyword_0() { return cFieldRangeDefinitionKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	
	
	private final LibraryElements pLibrary;
	private final DataProcessingDefinitionElements pDataProcessingDefinition;
	private final JobElements pJob;
	private final TransformationElements pTransformation;
	private final ParameterDefinitionElements pParameterDefinition;
	private final ContractDefinitionElements pContractDefinition;
	private final ContractDefinition0Elements pContractDefinition0;
	private final ArgumentDefinitionElements pArgumentDefinition;
	private final DataDictionaryDefinitionElements pDataDictionaryDefinition;
	private final DataFieldDefinitionElements pDataFieldDefinition;
	private final CategoricalDefElements pCategoricalDef;
	private final ContinuousDefElements pContinuousDef;
	private final DateDefElements pDateDef;
	private final MapDefElements pMapDef;
	private final CastTypeDefElements pCastTypeDef;
	private final PrimitiveDefElements pPrimitiveDef;
	private final DerivedFieldDefElements pDerivedFieldDef;
	private final FilterValueDefElements pFilterValueDef;
	private final MatchingValueDefElements pMatchingValueDef;
	private final RangeDefElements pRangeDef;
	private final MissingValuesDefElements pMissingValuesDef;
	private final DateRangeDefElements pDateRangeDef;
	private final DiscretizeBinDefElements pDiscretizeBinDef;
	private final DerivedValueDefElements pDerivedValueDef;
	private final NumOpDefElements pNumOpDef;
	private final FixValueDefElements pFixValueDef;
	private final FieldRangeDefElements pFieldRangeDef;
	private final MathOpDefElements pMathOpDef;
	private final JoinDefElements pJoinDef;
	private final OperandDefElements pOperandDef;
	private final FieldDefElements pFieldDef;
	private final EStringElements pEString;
	private final EBooleanElements pEBoolean;
	private final ConditionDefElements pConditionDef;
	private final ValueRangeDefinitionElements pValueRangeDefinition;
	private final FieldRangeDefinitionElements pFieldRangeDefinition;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public LibraryGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pLibrary = new LibraryElements();
		this.pDataProcessingDefinition = new DataProcessingDefinitionElements();
		this.pJob = new JobElements();
		this.pTransformation = new TransformationElements();
		this.pParameterDefinition = new ParameterDefinitionElements();
		this.pContractDefinition = new ContractDefinitionElements();
		this.pContractDefinition0 = new ContractDefinition0Elements();
		this.pArgumentDefinition = new ArgumentDefinitionElements();
		this.pDataDictionaryDefinition = new DataDictionaryDefinitionElements();
		this.pDataFieldDefinition = new DataFieldDefinitionElements();
		this.pCategoricalDef = new CategoricalDefElements();
		this.pContinuousDef = new ContinuousDefElements();
		this.pDateDef = new DateDefElements();
		this.pMapDef = new MapDefElements();
		this.pCastTypeDef = new CastTypeDefElements();
		this.pPrimitiveDef = new PrimitiveDefElements();
		this.pDerivedFieldDef = new DerivedFieldDefElements();
		this.pFilterValueDef = new FilterValueDefElements();
		this.pMatchingValueDef = new MatchingValueDefElements();
		this.pRangeDef = new RangeDefElements();
		this.pMissingValuesDef = new MissingValuesDefElements();
		this.pDateRangeDef = new DateRangeDefElements();
		this.pDiscretizeBinDef = new DiscretizeBinDefElements();
		this.pDerivedValueDef = new DerivedValueDefElements();
		this.pNumOpDef = new NumOpDefElements();
		this.pFixValueDef = new FixValueDefElements();
		this.pFieldRangeDef = new FieldRangeDefElements();
		this.pMathOpDef = new MathOpDefElements();
		this.pJoinDef = new JoinDefElements();
		this.pOperandDef = new OperandDefElements();
		this.pFieldDef = new FieldDefElements();
		this.pEString = new EStringElements();
		this.pEBoolean = new EBooleanElements();
		this.pConditionDef = new ConditionDefElements();
		this.pValueRangeDefinition = new ValueRangeDefinitionElements();
		this.pFieldRangeDefinition = new FieldRangeDefinitionElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("xtext.Library".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//// Main entry point
	//Library:
	//    'Library'
	//    name=EString
	//    '{'
	//        ('dataprocessingdefinition' '{' dataprocessingdefinition+=DataProcessingDefinition ( "," dataprocessingdefinition+=DataProcessingDefinition)* '}' )?
	//    '}';
	public LibraryElements getLibraryAccess() {
		return pLibrary;
	}
	
	public ParserRule getLibraryRule() {
		return getLibraryAccess().getRule();
	}
	
	//// Abstract DataProcessingDefinition
	//DataProcessingDefinition:
	//    Job | Transformation;
	public DataProcessingDefinitionElements getDataProcessingDefinitionAccess() {
		return pDataProcessingDefinition;
	}
	
	public ParserRule getDataProcessingDefinitionRule() {
		return getDataProcessingDefinitionAccess().getRule();
	}
	
	//Job:
	//    'Job'
	//    name=EString
	//    '{'
	//        'in' '(' in+=[ArgumentDefinition|EString] ( "," in+=[ArgumentDefinition|EString])* ')'
	//        'out' '(' out+=[ArgumentDefinition|EString] ( "," out+=[ArgumentDefinition|EString])* ')'
	//        'workflow' workflow=EString
	//        ('parameterdefinition' '{' parameterdefinition+=ParameterDefinition ( "," parameterdefinition+=ParameterDefinition)* '}' )?
	//        ('contractdefinition' '{' contractdefinition+=ContractDefinition ( "," contractdefinition+=ContractDefinition)* '}' )?
	//        'inputPort' '{' inputPort+=DataDictionaryDefinition ( "," inputPort+=DataDictionaryDefinition)* '}'
	//        'outputPort' '{' outputPort+=DataDictionaryDefinition ( "," outputPort+=DataDictionaryDefinition)* '}'
	//    '}';
	public JobElements getJobAccess() {
		return pJob;
	}
	
	public ParserRule getJobRule() {
		return getJobAccess().getRule();
	}
	
	//Transformation:
	//    'Transformation'
	//    name=EString
	//    '{'
	//        'in' '(' in+=[ArgumentDefinition|EString] ( "," in+=[ArgumentDefinition|EString])* ')'
	//        'out' '(' out+=[ArgumentDefinition|EString] ( "," out+=[ArgumentDefinition|EString])* ')'
	//        ('parameterdefinition' '{' parameterdefinition+=ParameterDefinition ( "," parameterdefinition+=ParameterDefinition)* '}' )?
	//        ('contractdefinition' '{' contractdefinition+=ContractDefinition ( "," contractdefinition+=ContractDefinition)* '}' )?
	//        'inputPort' '{' inputPort+=DataDictionaryDefinition ( "," inputPort+=DataDictionaryDefinition)* '}'
	//        'outputPort' '{' outputPort+=DataDictionaryDefinition ( "," outputPort+=DataDictionaryDefinition)* '}'
	//    '}';
	public TransformationElements getTransformationAccess() {
		return pTransformation;
	}
	
	public ParserRule getTransformationRule() {
		return getTransformationAccess().getRule();
	}
	
	//// Abstract ParameterDefinition
	//ParameterDefinition:
	//    MapDef | CastTypeDef | PrimitiveDef | DerivedFieldDef | FilterValueDef |
	//    DiscretizeBinDef | FieldRangeDef | MathOpDef | JoinDef |
	//    RangeDef | MissingValuesDef | DateRangeDef |
	//    DerivedValueDef | NumOpDef | FixValueDef |
	//    FieldDef;
	public ParameterDefinitionElements getParameterDefinitionAccess() {
		return pParameterDefinition;
	}
	
	public ParserRule getParameterDefinitionRule() {
		return getParameterDefinitionAccess().getRule();
	}
	
	//// Contract Definition
	//ContractDefinition:
	//    'ContractDefinition'
	//    name=EString
	//    '{'
	//        ('boundTo' boundTo=EString)?
	//        'contractDefinition' contractDefinition=ContractDefinition0
	//    '}';
	public ContractDefinitionElements getContractDefinitionAccess() {
		return pContractDefinition;
	}
	
	public ParserRule getContractDefinitionRule() {
		return getContractDefinitionAccess().getRule();
	}
	
	//ContractDefinition0:
	//    ConditionDef | ValueRangeDefinition | FieldRangeDefinition;
	public ContractDefinition0Elements getContractDefinition0Access() {
		return pContractDefinition0;
	}
	
	public ParserRule getContractDefinition0Rule() {
		return getContractDefinition0Access().getRule();
	}
	
	//// Abstract ArgumentDefinition
	//ArgumentDefinition:
	//    DataDictionaryDefinition | DataFieldDefinition;
	public ArgumentDefinitionElements getArgumentDefinitionAccess() {
		return pArgumentDefinition;
	}
	
	public ParserRule getArgumentDefinitionRule() {
		return getArgumentDefinitionAccess().getRule();
	}
	
	//DataDictionaryDefinition:
	//    'DataDictionaryDefinition'
	//    name=EString
	//    '{'
	//        ('boundTo' boundTo=EString)?
	//        ('datafielddefinition' '{' datafielddefinition+=DataFieldDefinition ( "," datafielddefinition+=DataFieldDefinition)* '}' )?
	//    '}';
	public DataDictionaryDefinitionElements getDataDictionaryDefinitionAccess() {
		return pDataDictionaryDefinition;
	}
	
	public ParserRule getDataDictionaryDefinitionRule() {
		return getDataDictionaryDefinitionAccess().getRule();
	}
	
	//// Abstract DataFieldDefinition
	//DataFieldDefinition:
	//    CategoricalDef | ContinuousDef | DateDef;
	public DataFieldDefinitionElements getDataFieldDefinitionAccess() {
		return pDataFieldDefinition;
	}
	
	public ParserRule getDataFieldDefinitionRule() {
		return getDataFieldDefinitionAccess().getRule();
	}
	
	//CategoricalDef:
	//    'CategoricalDef'
	//    name=EString
	//    '{'
	//        ('boundTo' boundTo=EString)?
	//    '}';
	public CategoricalDefElements getCategoricalDefAccess() {
		return pCategoricalDef;
	}
	
	public ParserRule getCategoricalDefRule() {
		return getCategoricalDefAccess().getRule();
	}
	
	//ContinuousDef:
	//    'ContinuousDef'
	//    name=EString
	//    '{'
	//        ('boundTo' boundTo=EString)?
	//    '}';
	public ContinuousDefElements getContinuousDefAccess() {
		return pContinuousDef;
	}
	
	public ParserRule getContinuousDefRule() {
		return getContinuousDefAccess().getRule();
	}
	
	//DateDef:
	//    'DateDef'
	//    name=EString
	//    '{'
	//        ('boundTo' boundTo=EString)?
	//    '}';
	public DateDefElements getDateDefAccess() {
		return pDateDef;
	}
	
	public ParserRule getDateDefRule() {
		return getDateDefAccess().getRule();
	}
	
	//// ParameterDefinition concrete classes
	//MapDef:
	//    'MapDef'
	//    name=EString
	//    '{'
	//        ('required' required=EBoolean)?
	//        ('boundTo' boundTo=EString)?
	//    '}';
	public MapDefElements getMapDefAccess() {
		return pMapDef;
	}
	
	public ParserRule getMapDefRule() {
		return getMapDefAccess().getRule();
	}
	
	//CastTypeDef:
	//    'CastTypeDef'
	//    name=EString
	//    '{'
	//        ('required' required=EBoolean)?
	//        ('boundTo' boundTo=EString)?
	//    '}';
	public CastTypeDefElements getCastTypeDefAccess() {
		return pCastTypeDef;
	}
	
	public ParserRule getCastTypeDefRule() {
		return getCastTypeDefAccess().getRule();
	}
	
	//PrimitiveDef:
	//    'PrimitiveDef'
	//    name=EString
	//    '{'
	//        ('required' required=EBoolean)?
	//        ('boundTo' boundTo=EString)?
	//    '}';
	public PrimitiveDefElements getPrimitiveDefAccess() {
		return pPrimitiveDef;
	}
	
	public ParserRule getPrimitiveDefRule() {
		return getPrimitiveDefAccess().getRule();
	}
	
	//DerivedFieldDef:
	//    'DerivedFieldDef'
	//    name=EString
	//    '{'
	//        ('required' required=EBoolean)?
	//        ('boundTo' boundTo=EString)?
	//    '}';
	public DerivedFieldDefElements getDerivedFieldDefAccess() {
		return pDerivedFieldDef;
	}
	
	public ParserRule getDerivedFieldDefRule() {
		return getDerivedFieldDefAccess().getRule();
	}
	
	//FilterValueDef:
	//    'FilterValueDef'
	//    name=EString
	//    '{'
	//        ('required' required=EBoolean)?
	//        ('boundTo' boundTo=EString)?
	//        ('matchingvaluedef' '{' matchingvaluedef+=MatchingValueDef ( "," matchingvaluedef+=MatchingValueDef)* '}' )?
	//        ('primitivedef' '{' primitivedef+=PrimitiveDef ( "," primitivedef+=PrimitiveDef)* '}' )?
	//    '}';
	public FilterValueDefElements getFilterValueDefAccess() {
		return pFilterValueDef;
	}
	
	public ParserRule getFilterValueDefRule() {
		return getFilterValueDefAccess().getRule();
	}
	
	//MatchingValueDef:
	//    RangeDef | MissingValuesDef | DateRangeDef;
	public MatchingValueDefElements getMatchingValueDefAccess() {
		return pMatchingValueDef;
	}
	
	public ParserRule getMatchingValueDefRule() {
		return getMatchingValueDefAccess().getRule();
	}
	
	//RangeDef:
	//    'RangeDef'
	//    name=EString
	//    '{'
	//        ('required' required=EBoolean)?
	//        ('boundTo' boundTo=EString)?
	//    '}';
	public RangeDefElements getRangeDefAccess() {
		return pRangeDef;
	}
	
	public ParserRule getRangeDefRule() {
		return getRangeDefAccess().getRule();
	}
	
	//MissingValuesDef:
	//    'MissingValuesDef'
	//    name=EString
	//    '{'
	//        ('required' required=EBoolean)?
	//        ('boundTo' boundTo=EString)?
	//    '}';
	public MissingValuesDefElements getMissingValuesDefAccess() {
		return pMissingValuesDef;
	}
	
	public ParserRule getMissingValuesDefRule() {
		return getMissingValuesDefAccess().getRule();
	}
	
	//DateRangeDef:
	//    'DateRangeDef'
	//    name=EString
	//    '{'
	//        ('required' required=EBoolean)?
	//        ('boundTo' boundTo=EString)?
	//    '}';
	public DateRangeDefElements getDateRangeDefAccess() {
		return pDateRangeDef;
	}
	
	public ParserRule getDateRangeDefRule() {
		return getDateRangeDefAccess().getRule();
	}
	
	//DiscretizeBinDef:
	//    'DiscretizeBinDef'
	//    name=EString
	//    '{'
	//        ('required' required=EBoolean)?
	//        ('boundTo' boundTo=EString)?
	//    '}';
	public DiscretizeBinDefElements getDiscretizeBinDefAccess() {
		return pDiscretizeBinDef;
	}
	
	public ParserRule getDiscretizeBinDefRule() {
		return getDiscretizeBinDefAccess().getRule();
	}
	
	//DerivedValueDef:
	//    'DerivedValueDef'
	//    name=EString
	//    '{'
	//        ('required' required=EBoolean)?
	//        ('boundTo' boundTo=EString)?
	//    '}';
	public DerivedValueDefElements getDerivedValueDefAccess() {
		return pDerivedValueDef;
	}
	
	public ParserRule getDerivedValueDefRule() {
		return getDerivedValueDefAccess().getRule();
	}
	
	//NumOpDef:
	//    'NumOpDef'
	//    name=EString
	//    '{'
	//        ('required' required=EBoolean)?
	//        ('boundTo' boundTo=EString)?
	//    '}';
	public NumOpDefElements getNumOpDefAccess() {
		return pNumOpDef;
	}
	
	public ParserRule getNumOpDefRule() {
		return getNumOpDefAccess().getRule();
	}
	
	//FixValueDef:
	//    'FixValueDef'
	//    name=EString
	//    '{'
	//        ('required' required=EBoolean)?
	//        ('boundTo' boundTo=EString)?
	//        'value' value=PrimitiveDef
	//    '}';
	public FixValueDefElements getFixValueDefAccess() {
		return pFixValueDef;
	}
	
	public ParserRule getFixValueDefRule() {
		return getFixValueDefAccess().getRule();
	}
	
	//FieldRangeDef:
	//    'FieldRangeDef'
	//    name=EString
	//    '{'
	//        ('required' required=EBoolean)?
	//        ('boundTo' boundTo=EString)?
	//    '}';
	public FieldRangeDefElements getFieldRangeDefAccess() {
		return pFieldRangeDef;
	}
	
	public ParserRule getFieldRangeDefRule() {
		return getFieldRangeDefAccess().getRule();
	}
	
	//MathOpDef:
	//    'MathOpDef'
	//    name=EString
	//    '{'
	//        ('required' required=EBoolean)?
	//        ('boundTo' boundTo=EString)?
	//        'operandDef' '{' operandDef+=OperandDef ( "," operandDef+=OperandDef)* '}'
	//    '}';
	public MathOpDefElements getMathOpDefAccess() {
		return pMathOpDef;
	}
	
	public ParserRule getMathOpDefRule() {
		return getMathOpDefAccess().getRule();
	}
	
	//JoinDef:
	//    'JoinDef'
	//    name=EString
	//    '{'
	//        ('required' required=EBoolean)?
	//        ('boundTo' boundTo=EString)?
	//        'operandDef' '{' operandDef+=OperandDef ( "," operandDef+=OperandDef)* '}'
	//    '}';
	public JoinDefElements getJoinDefAccess() {
		return pJoinDef;
	}
	
	public ParserRule getJoinDefRule() {
		return getJoinDefAccess().getRule();
	}
	
	//OperandDef:
	//    FixValueDef | FieldDef;
	public OperandDefElements getOperandDefAccess() {
		return pOperandDef;
	}
	
	public ParserRule getOperandDefRule() {
		return getOperandDefAccess().getRule();
	}
	
	//FieldDef:
	//    'FieldDef'
	//    name=EString
	//    '{'
	//        ('required' required=EBoolean)?
	//        ('boundTo' boundTo=EString)?
	//        'datafielddefinition' datafielddefinition=[DataFieldDefinition|EString]
	//    '}';
	public FieldDefElements getFieldDefAccess() {
		return pFieldDef;
	}
	
	public ParserRule getFieldDefRule() {
		return getFieldDefAccess().getRule();
	}
	
	//// Utility rules
	//EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//EBoolean:
	//    'true' | 'false';
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}
	
	//// Placeholders for contracts
	//ConditionDef:
	//    'ConditionDef'
	//    name=EString
	//    '{'
	//    '}';
	public ConditionDefElements getConditionDefAccess() {
		return pConditionDef;
	}
	
	public ParserRule getConditionDefRule() {
		return getConditionDefAccess().getRule();
	}
	
	//ValueRangeDefinition:
	//    'ValueRangeDefinition'
	//    name=EString
	//    '{'
	//    '}';
	public ValueRangeDefinitionElements getValueRangeDefinitionAccess() {
		return pValueRangeDefinition;
	}
	
	public ParserRule getValueRangeDefinitionRule() {
		return getValueRangeDefinitionAccess().getRule();
	}
	
	//FieldRangeDefinition:
	//    'FieldRangeDefinition'
	//    name=EString
	//    '{'
	//    '}';
	public FieldRangeDefinitionElements getFieldRangeDefinitionAccess() {
		return pFieldRangeDefinition;
	}
	
	public ParserRule getFieldRangeDefinitionRule() {
		return getFieldRangeDefinitionAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}

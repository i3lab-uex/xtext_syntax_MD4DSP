/**
 * generated by Xtext 2.39.0
 */
package xtext.library.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import xtext.library.ArgumentDefinition;
import xtext.library.CastTypeDef;
import xtext.library.CategoricalDef;
import xtext.library.ConditionDef;
import xtext.library.ContinuousDef;
import xtext.library.ContractDefinition;
import xtext.library.ContractDefinition0;
import xtext.library.DataDictionaryDefinition;
import xtext.library.DataFieldDefinition;
import xtext.library.DataProcessingDefinition;
import xtext.library.DateDef;
import xtext.library.DateRangeDef;
import xtext.library.DerivedFieldDef;
import xtext.library.DerivedValueDef;
import xtext.library.DiscretizeBinDef;
import xtext.library.FieldDef;
import xtext.library.FieldRangeDef;
import xtext.library.FieldRangeDefinition;
import xtext.library.FilterValueDef;
import xtext.library.FixValueDef;
import xtext.library.Job;
import xtext.library.JoinDef;
import xtext.library.Library;
import xtext.library.LibraryFactory;
import xtext.library.LibraryPackage;
import xtext.library.MapDef;
import xtext.library.MatchingValueDef;
import xtext.library.MathOpDef;
import xtext.library.MissingValuesDef;
import xtext.library.NumOpDef;
import xtext.library.OperandDef;
import xtext.library.ParameterDefinition;
import xtext.library.PrimitiveDef;
import xtext.library.RangeDef;
import xtext.library.Transformation;
import xtext.library.ValueRangeDefinition;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class LibraryPackageImpl extends EPackageImpl implements LibraryPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass libraryEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dataProcessingDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass jobEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass transformationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass parameterDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass contractDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass contractDefinition0EClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass argumentDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dataDictionaryDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dataFieldDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass categoricalDefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass continuousDefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dateDefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass mapDefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass castTypeDefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass primitiveDefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass derivedFieldDefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass filterValueDefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass matchingValueDefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass rangeDefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass missingValuesDefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dateRangeDefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass discretizeBinDefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass derivedValueDefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass numOpDefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fixValueDefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fieldRangeDefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass mathOpDefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass joinDefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass operandDefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fieldDefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass conditionDefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass valueRangeDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fieldRangeDefinitionEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see xtext.library.LibraryPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private LibraryPackageImpl()
  {
    super(eNS_URI, LibraryFactory.eINSTANCE);
  }
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link LibraryPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static LibraryPackage init()
  {
    if (isInited) return (LibraryPackage)EPackage.Registry.INSTANCE.getEPackage(LibraryPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredLibraryPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    LibraryPackageImpl theLibraryPackage = registeredLibraryPackage instanceof LibraryPackageImpl ? (LibraryPackageImpl)registeredLibraryPackage : new LibraryPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theLibraryPackage.createPackageContents();

    // Initialize created meta-data
    theLibraryPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theLibraryPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(LibraryPackage.eNS_URI, theLibraryPackage);
    return theLibraryPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLibrary()
  {
    return libraryEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLibrary_Name()
  {
    return (EAttribute)libraryEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLibrary_Dataprocessingdefinition()
  {
    return (EReference)libraryEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDataProcessingDefinition()
  {
    return dataProcessingDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDataProcessingDefinition_Name()
  {
    return (EAttribute)dataProcessingDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDataProcessingDefinition_In()
  {
    return (EReference)dataProcessingDefinitionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDataProcessingDefinition_Out()
  {
    return (EReference)dataProcessingDefinitionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDataProcessingDefinition_Parameterdefinition()
  {
    return (EReference)dataProcessingDefinitionEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDataProcessingDefinition_Contractdefinition()
  {
    return (EReference)dataProcessingDefinitionEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDataProcessingDefinition_InputPort()
  {
    return (EReference)dataProcessingDefinitionEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDataProcessingDefinition_OutputPort()
  {
    return (EReference)dataProcessingDefinitionEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getJob()
  {
    return jobEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getJob_Workflow()
  {
    return (EAttribute)jobEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTransformation()
  {
    return transformationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getParameterDefinition()
  {
    return parameterDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getParameterDefinition_Name()
  {
    return (EAttribute)parameterDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getParameterDefinition_Required()
  {
    return (EAttribute)parameterDefinitionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getParameterDefinition_BoundTo()
  {
    return (EAttribute)parameterDefinitionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getContractDefinition()
  {
    return contractDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getContractDefinition_Name()
  {
    return (EAttribute)contractDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getContractDefinition_BoundTo()
  {
    return (EAttribute)contractDefinitionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getContractDefinition_ContractDefinition()
  {
    return (EReference)contractDefinitionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getContractDefinition0()
  {
    return contractDefinition0EClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getContractDefinition0_Name()
  {
    return (EAttribute)contractDefinition0EClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getArgumentDefinition()
  {
    return argumentDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getArgumentDefinition_Name()
  {
    return (EAttribute)argumentDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getArgumentDefinition_BoundTo()
  {
    return (EAttribute)argumentDefinitionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDataDictionaryDefinition()
  {
    return dataDictionaryDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDataDictionaryDefinition_Datafielddefinition()
  {
    return (EReference)dataDictionaryDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDataFieldDefinition()
  {
    return dataFieldDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCategoricalDef()
  {
    return categoricalDefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getContinuousDef()
  {
    return continuousDefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDateDef()
  {
    return dateDefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMapDef()
  {
    return mapDefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCastTypeDef()
  {
    return castTypeDefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPrimitiveDef()
  {
    return primitiveDefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDerivedFieldDef()
  {
    return derivedFieldDefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFilterValueDef()
  {
    return filterValueDefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFilterValueDef_Matchingvaluedef()
  {
    return (EReference)filterValueDefEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFilterValueDef_Primitivedef()
  {
    return (EReference)filterValueDefEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMatchingValueDef()
  {
    return matchingValueDefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRangeDef()
  {
    return rangeDefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMissingValuesDef()
  {
    return missingValuesDefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDateRangeDef()
  {
    return dateRangeDefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDiscretizeBinDef()
  {
    return discretizeBinDefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDerivedValueDef()
  {
    return derivedValueDefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getNumOpDef()
  {
    return numOpDefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFixValueDef()
  {
    return fixValueDefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFixValueDef_Value()
  {
    return (EReference)fixValueDefEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFieldRangeDef()
  {
    return fieldRangeDefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMathOpDef()
  {
    return mathOpDefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getMathOpDef_OperandDef()
  {
    return (EReference)mathOpDefEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getJoinDef()
  {
    return joinDefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getJoinDef_OperandDef()
  {
    return (EReference)joinDefEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getOperandDef()
  {
    return operandDefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFieldDef()
  {
    return fieldDefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFieldDef_Datafielddefinition()
  {
    return (EReference)fieldDefEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getConditionDef()
  {
    return conditionDefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getValueRangeDefinition()
  {
    return valueRangeDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFieldRangeDefinition()
  {
    return fieldRangeDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LibraryFactory getLibraryFactory()
  {
    return (LibraryFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    libraryEClass = createEClass(LIBRARY);
    createEAttribute(libraryEClass, LIBRARY__NAME);
    createEReference(libraryEClass, LIBRARY__DATAPROCESSINGDEFINITION);

    dataProcessingDefinitionEClass = createEClass(DATA_PROCESSING_DEFINITION);
    createEAttribute(dataProcessingDefinitionEClass, DATA_PROCESSING_DEFINITION__NAME);
    createEReference(dataProcessingDefinitionEClass, DATA_PROCESSING_DEFINITION__IN);
    createEReference(dataProcessingDefinitionEClass, DATA_PROCESSING_DEFINITION__OUT);
    createEReference(dataProcessingDefinitionEClass, DATA_PROCESSING_DEFINITION__PARAMETERDEFINITION);
    createEReference(dataProcessingDefinitionEClass, DATA_PROCESSING_DEFINITION__CONTRACTDEFINITION);
    createEReference(dataProcessingDefinitionEClass, DATA_PROCESSING_DEFINITION__INPUT_PORT);
    createEReference(dataProcessingDefinitionEClass, DATA_PROCESSING_DEFINITION__OUTPUT_PORT);

    jobEClass = createEClass(JOB);
    createEAttribute(jobEClass, JOB__WORKFLOW);

    transformationEClass = createEClass(TRANSFORMATION);

    parameterDefinitionEClass = createEClass(PARAMETER_DEFINITION);
    createEAttribute(parameterDefinitionEClass, PARAMETER_DEFINITION__NAME);
    createEAttribute(parameterDefinitionEClass, PARAMETER_DEFINITION__REQUIRED);
    createEAttribute(parameterDefinitionEClass, PARAMETER_DEFINITION__BOUND_TO);

    contractDefinitionEClass = createEClass(CONTRACT_DEFINITION);
    createEAttribute(contractDefinitionEClass, CONTRACT_DEFINITION__NAME);
    createEAttribute(contractDefinitionEClass, CONTRACT_DEFINITION__BOUND_TO);
    createEReference(contractDefinitionEClass, CONTRACT_DEFINITION__CONTRACT_DEFINITION);

    contractDefinition0EClass = createEClass(CONTRACT_DEFINITION0);
    createEAttribute(contractDefinition0EClass, CONTRACT_DEFINITION0__NAME);

    argumentDefinitionEClass = createEClass(ARGUMENT_DEFINITION);
    createEAttribute(argumentDefinitionEClass, ARGUMENT_DEFINITION__NAME);
    createEAttribute(argumentDefinitionEClass, ARGUMENT_DEFINITION__BOUND_TO);

    dataDictionaryDefinitionEClass = createEClass(DATA_DICTIONARY_DEFINITION);
    createEReference(dataDictionaryDefinitionEClass, DATA_DICTIONARY_DEFINITION__DATAFIELDDEFINITION);

    dataFieldDefinitionEClass = createEClass(DATA_FIELD_DEFINITION);

    categoricalDefEClass = createEClass(CATEGORICAL_DEF);

    continuousDefEClass = createEClass(CONTINUOUS_DEF);

    dateDefEClass = createEClass(DATE_DEF);

    mapDefEClass = createEClass(MAP_DEF);

    castTypeDefEClass = createEClass(CAST_TYPE_DEF);

    primitiveDefEClass = createEClass(PRIMITIVE_DEF);

    derivedFieldDefEClass = createEClass(DERIVED_FIELD_DEF);

    filterValueDefEClass = createEClass(FILTER_VALUE_DEF);
    createEReference(filterValueDefEClass, FILTER_VALUE_DEF__MATCHINGVALUEDEF);
    createEReference(filterValueDefEClass, FILTER_VALUE_DEF__PRIMITIVEDEF);

    matchingValueDefEClass = createEClass(MATCHING_VALUE_DEF);

    rangeDefEClass = createEClass(RANGE_DEF);

    missingValuesDefEClass = createEClass(MISSING_VALUES_DEF);

    dateRangeDefEClass = createEClass(DATE_RANGE_DEF);

    discretizeBinDefEClass = createEClass(DISCRETIZE_BIN_DEF);

    derivedValueDefEClass = createEClass(DERIVED_VALUE_DEF);

    numOpDefEClass = createEClass(NUM_OP_DEF);

    fixValueDefEClass = createEClass(FIX_VALUE_DEF);
    createEReference(fixValueDefEClass, FIX_VALUE_DEF__VALUE);

    fieldRangeDefEClass = createEClass(FIELD_RANGE_DEF);

    mathOpDefEClass = createEClass(MATH_OP_DEF);
    createEReference(mathOpDefEClass, MATH_OP_DEF__OPERAND_DEF);

    joinDefEClass = createEClass(JOIN_DEF);
    createEReference(joinDefEClass, JOIN_DEF__OPERAND_DEF);

    operandDefEClass = createEClass(OPERAND_DEF);

    fieldDefEClass = createEClass(FIELD_DEF);
    createEReference(fieldDefEClass, FIELD_DEF__DATAFIELDDEFINITION);

    conditionDefEClass = createEClass(CONDITION_DEF);

    valueRangeDefinitionEClass = createEClass(VALUE_RANGE_DEFINITION);

    fieldRangeDefinitionEClass = createEClass(FIELD_RANGE_DEFINITION);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    jobEClass.getESuperTypes().add(this.getDataProcessingDefinition());
    transformationEClass.getESuperTypes().add(this.getDataProcessingDefinition());
    dataDictionaryDefinitionEClass.getESuperTypes().add(this.getArgumentDefinition());
    dataFieldDefinitionEClass.getESuperTypes().add(this.getArgumentDefinition());
    categoricalDefEClass.getESuperTypes().add(this.getDataFieldDefinition());
    continuousDefEClass.getESuperTypes().add(this.getDataFieldDefinition());
    dateDefEClass.getESuperTypes().add(this.getDataFieldDefinition());
    mapDefEClass.getESuperTypes().add(this.getParameterDefinition());
    castTypeDefEClass.getESuperTypes().add(this.getParameterDefinition());
    primitiveDefEClass.getESuperTypes().add(this.getParameterDefinition());
    derivedFieldDefEClass.getESuperTypes().add(this.getParameterDefinition());
    filterValueDefEClass.getESuperTypes().add(this.getParameterDefinition());
    rangeDefEClass.getESuperTypes().add(this.getParameterDefinition());
    rangeDefEClass.getESuperTypes().add(this.getMatchingValueDef());
    missingValuesDefEClass.getESuperTypes().add(this.getParameterDefinition());
    missingValuesDefEClass.getESuperTypes().add(this.getMatchingValueDef());
    dateRangeDefEClass.getESuperTypes().add(this.getParameterDefinition());
    dateRangeDefEClass.getESuperTypes().add(this.getMatchingValueDef());
    discretizeBinDefEClass.getESuperTypes().add(this.getParameterDefinition());
    derivedValueDefEClass.getESuperTypes().add(this.getParameterDefinition());
    numOpDefEClass.getESuperTypes().add(this.getParameterDefinition());
    fixValueDefEClass.getESuperTypes().add(this.getParameterDefinition());
    fixValueDefEClass.getESuperTypes().add(this.getOperandDef());
    fieldRangeDefEClass.getESuperTypes().add(this.getParameterDefinition());
    mathOpDefEClass.getESuperTypes().add(this.getParameterDefinition());
    joinDefEClass.getESuperTypes().add(this.getParameterDefinition());
    fieldDefEClass.getESuperTypes().add(this.getParameterDefinition());
    fieldDefEClass.getESuperTypes().add(this.getOperandDef());
    conditionDefEClass.getESuperTypes().add(this.getContractDefinition0());
    valueRangeDefinitionEClass.getESuperTypes().add(this.getContractDefinition0());
    fieldRangeDefinitionEClass.getESuperTypes().add(this.getContractDefinition0());

    // Initialize classes and features; add operations and parameters
    initEClass(libraryEClass, Library.class, "Library", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLibrary_Name(), ecorePackage.getEString(), "name", null, 0, 1, Library.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLibrary_Dataprocessingdefinition(), this.getDataProcessingDefinition(), null, "dataprocessingdefinition", null, 0, -1, Library.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dataProcessingDefinitionEClass, DataProcessingDefinition.class, "DataProcessingDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDataProcessingDefinition_Name(), ecorePackage.getEString(), "name", null, 0, 1, DataProcessingDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDataProcessingDefinition_In(), this.getArgumentDefinition(), null, "in", null, 0, -1, DataProcessingDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDataProcessingDefinition_Out(), this.getArgumentDefinition(), null, "out", null, 0, -1, DataProcessingDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDataProcessingDefinition_Parameterdefinition(), this.getParameterDefinition(), null, "parameterdefinition", null, 0, -1, DataProcessingDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDataProcessingDefinition_Contractdefinition(), this.getContractDefinition(), null, "contractdefinition", null, 0, -1, DataProcessingDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDataProcessingDefinition_InputPort(), this.getDataDictionaryDefinition(), null, "inputPort", null, 0, -1, DataProcessingDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDataProcessingDefinition_OutputPort(), this.getDataDictionaryDefinition(), null, "outputPort", null, 0, -1, DataProcessingDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(jobEClass, Job.class, "Job", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getJob_Workflow(), ecorePackage.getEString(), "workflow", null, 0, 1, Job.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(transformationEClass, Transformation.class, "Transformation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(parameterDefinitionEClass, ParameterDefinition.class, "ParameterDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getParameterDefinition_Name(), ecorePackage.getEString(), "name", null, 0, 1, ParameterDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getParameterDefinition_Required(), ecorePackage.getEString(), "required", null, 0, 1, ParameterDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getParameterDefinition_BoundTo(), ecorePackage.getEString(), "boundTo", null, 0, 1, ParameterDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(contractDefinitionEClass, ContractDefinition.class, "ContractDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getContractDefinition_Name(), ecorePackage.getEString(), "name", null, 0, 1, ContractDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getContractDefinition_BoundTo(), ecorePackage.getEString(), "boundTo", null, 0, 1, ContractDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getContractDefinition_ContractDefinition(), this.getContractDefinition0(), null, "contractDefinition", null, 0, 1, ContractDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(contractDefinition0EClass, ContractDefinition0.class, "ContractDefinition0", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getContractDefinition0_Name(), ecorePackage.getEString(), "name", null, 0, 1, ContractDefinition0.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(argumentDefinitionEClass, ArgumentDefinition.class, "ArgumentDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getArgumentDefinition_Name(), ecorePackage.getEString(), "name", null, 0, 1, ArgumentDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getArgumentDefinition_BoundTo(), ecorePackage.getEString(), "boundTo", null, 0, 1, ArgumentDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dataDictionaryDefinitionEClass, DataDictionaryDefinition.class, "DataDictionaryDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDataDictionaryDefinition_Datafielddefinition(), this.getDataFieldDefinition(), null, "datafielddefinition", null, 0, -1, DataDictionaryDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dataFieldDefinitionEClass, DataFieldDefinition.class, "DataFieldDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(categoricalDefEClass, CategoricalDef.class, "CategoricalDef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(continuousDefEClass, ContinuousDef.class, "ContinuousDef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(dateDefEClass, DateDef.class, "DateDef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(mapDefEClass, MapDef.class, "MapDef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(castTypeDefEClass, CastTypeDef.class, "CastTypeDef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(primitiveDefEClass, PrimitiveDef.class, "PrimitiveDef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(derivedFieldDefEClass, DerivedFieldDef.class, "DerivedFieldDef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(filterValueDefEClass, FilterValueDef.class, "FilterValueDef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFilterValueDef_Matchingvaluedef(), this.getMatchingValueDef(), null, "matchingvaluedef", null, 0, -1, FilterValueDef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFilterValueDef_Primitivedef(), this.getPrimitiveDef(), null, "primitivedef", null, 0, -1, FilterValueDef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(matchingValueDefEClass, MatchingValueDef.class, "MatchingValueDef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(rangeDefEClass, RangeDef.class, "RangeDef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(missingValuesDefEClass, MissingValuesDef.class, "MissingValuesDef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(dateRangeDefEClass, DateRangeDef.class, "DateRangeDef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(discretizeBinDefEClass, DiscretizeBinDef.class, "DiscretizeBinDef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(derivedValueDefEClass, DerivedValueDef.class, "DerivedValueDef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(numOpDefEClass, NumOpDef.class, "NumOpDef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(fixValueDefEClass, FixValueDef.class, "FixValueDef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFixValueDef_Value(), this.getPrimitiveDef(), null, "value", null, 0, 1, FixValueDef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fieldRangeDefEClass, FieldRangeDef.class, "FieldRangeDef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(mathOpDefEClass, MathOpDef.class, "MathOpDef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getMathOpDef_OperandDef(), this.getOperandDef(), null, "operandDef", null, 0, -1, MathOpDef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(joinDefEClass, JoinDef.class, "JoinDef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getJoinDef_OperandDef(), this.getOperandDef(), null, "operandDef", null, 0, -1, JoinDef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(operandDefEClass, OperandDef.class, "OperandDef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(fieldDefEClass, FieldDef.class, "FieldDef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFieldDef_Datafielddefinition(), this.getDataFieldDefinition(), null, "datafielddefinition", null, 0, 1, FieldDef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(conditionDefEClass, ConditionDef.class, "ConditionDef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(valueRangeDefinitionEClass, ValueRangeDefinition.class, "ValueRangeDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(fieldRangeDefinitionEClass, FieldRangeDefinition.class, "FieldRangeDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    // Create resource
    createResource(eNS_URI);
  }

} //LibraryPackageImpl

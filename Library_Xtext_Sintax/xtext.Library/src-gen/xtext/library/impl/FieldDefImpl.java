/**
 * generated by Xtext 2.39.0
 */
package xtext.library.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import xtext.library.DataFieldDefinition;
import xtext.library.FieldDef;
import xtext.library.LibraryPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Field Def</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link xtext.library.impl.FieldDefImpl#getDatafielddefinition <em>Datafielddefinition</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FieldDefImpl extends ParameterDefinitionImpl implements FieldDef
{
  /**
   * The cached value of the '{@link #getDatafielddefinition() <em>Datafielddefinition</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDatafielddefinition()
   * @generated
   * @ordered
   */
  protected DataFieldDefinition datafielddefinition;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FieldDefImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return LibraryPackage.Literals.FIELD_DEF;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DataFieldDefinition getDatafielddefinition()
  {
    if (datafielddefinition != null && datafielddefinition.eIsProxy())
    {
      InternalEObject oldDatafielddefinition = (InternalEObject)datafielddefinition;
      datafielddefinition = (DataFieldDefinition)eResolveProxy(oldDatafielddefinition);
      if (datafielddefinition != oldDatafielddefinition)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, LibraryPackage.FIELD_DEF__DATAFIELDDEFINITION, oldDatafielddefinition, datafielddefinition));
      }
    }
    return datafielddefinition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DataFieldDefinition basicGetDatafielddefinition()
  {
    return datafielddefinition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDatafielddefinition(DataFieldDefinition newDatafielddefinition)
  {
    DataFieldDefinition oldDatafielddefinition = datafielddefinition;
    datafielddefinition = newDatafielddefinition;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LibraryPackage.FIELD_DEF__DATAFIELDDEFINITION, oldDatafielddefinition, datafielddefinition));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case LibraryPackage.FIELD_DEF__DATAFIELDDEFINITION:
        if (resolve) return getDatafielddefinition();
        return basicGetDatafielddefinition();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case LibraryPackage.FIELD_DEF__DATAFIELDDEFINITION:
        setDatafielddefinition((DataFieldDefinition)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case LibraryPackage.FIELD_DEF__DATAFIELDDEFINITION:
        setDatafielddefinition((DataFieldDefinition)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case LibraryPackage.FIELD_DEF__DATAFIELDDEFINITION:
        return datafielddefinition != null;
    }
    return super.eIsSet(featureID);
  }

} //FieldDefImpl

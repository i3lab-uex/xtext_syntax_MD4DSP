/**
 * generated by Xtext 2.39.0
 */
package xtext.library.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import xtext.library.ContractDefinition;
import xtext.library.ContractDefinition0;
import xtext.library.LibraryPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Contract Definition</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link xtext.library.impl.ContractDefinitionImpl#getName <em>Name</em>}</li>
 *   <li>{@link xtext.library.impl.ContractDefinitionImpl#getBoundTo <em>Bound To</em>}</li>
 *   <li>{@link xtext.library.impl.ContractDefinitionImpl#getContractDefinition <em>Contract Definition</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ContractDefinitionImpl extends MinimalEObjectImpl.Container implements ContractDefinition
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getBoundTo() <em>Bound To</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBoundTo()
   * @generated
   * @ordered
   */
  protected static final String BOUND_TO_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getBoundTo() <em>Bound To</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBoundTo()
   * @generated
   * @ordered
   */
  protected String boundTo = BOUND_TO_EDEFAULT;

  /**
   * The cached value of the '{@link #getContractDefinition() <em>Contract Definition</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContractDefinition()
   * @generated
   * @ordered
   */
  protected ContractDefinition0 contractDefinition;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ContractDefinitionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return LibraryPackage.Literals.CONTRACT_DEFINITION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LibraryPackage.CONTRACT_DEFINITION__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getBoundTo()
  {
    return boundTo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBoundTo(String newBoundTo)
  {
    String oldBoundTo = boundTo;
    boundTo = newBoundTo;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LibraryPackage.CONTRACT_DEFINITION__BOUND_TO, oldBoundTo, boundTo));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ContractDefinition0 getContractDefinition()
  {
    return contractDefinition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetContractDefinition(ContractDefinition0 newContractDefinition, NotificationChain msgs)
  {
    ContractDefinition0 oldContractDefinition = contractDefinition;
    contractDefinition = newContractDefinition;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, LibraryPackage.CONTRACT_DEFINITION__CONTRACT_DEFINITION, oldContractDefinition, newContractDefinition);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setContractDefinition(ContractDefinition0 newContractDefinition)
  {
    if (newContractDefinition != contractDefinition)
    {
      NotificationChain msgs = null;
      if (contractDefinition != null)
        msgs = ((InternalEObject)contractDefinition).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - LibraryPackage.CONTRACT_DEFINITION__CONTRACT_DEFINITION, null, msgs);
      if (newContractDefinition != null)
        msgs = ((InternalEObject)newContractDefinition).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - LibraryPackage.CONTRACT_DEFINITION__CONTRACT_DEFINITION, null, msgs);
      msgs = basicSetContractDefinition(newContractDefinition, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LibraryPackage.CONTRACT_DEFINITION__CONTRACT_DEFINITION, newContractDefinition, newContractDefinition));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case LibraryPackage.CONTRACT_DEFINITION__CONTRACT_DEFINITION:
        return basicSetContractDefinition(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case LibraryPackage.CONTRACT_DEFINITION__NAME:
        return getName();
      case LibraryPackage.CONTRACT_DEFINITION__BOUND_TO:
        return getBoundTo();
      case LibraryPackage.CONTRACT_DEFINITION__CONTRACT_DEFINITION:
        return getContractDefinition();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case LibraryPackage.CONTRACT_DEFINITION__NAME:
        setName((String)newValue);
        return;
      case LibraryPackage.CONTRACT_DEFINITION__BOUND_TO:
        setBoundTo((String)newValue);
        return;
      case LibraryPackage.CONTRACT_DEFINITION__CONTRACT_DEFINITION:
        setContractDefinition((ContractDefinition0)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case LibraryPackage.CONTRACT_DEFINITION__NAME:
        setName(NAME_EDEFAULT);
        return;
      case LibraryPackage.CONTRACT_DEFINITION__BOUND_TO:
        setBoundTo(BOUND_TO_EDEFAULT);
        return;
      case LibraryPackage.CONTRACT_DEFINITION__CONTRACT_DEFINITION:
        setContractDefinition((ContractDefinition0)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case LibraryPackage.CONTRACT_DEFINITION__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case LibraryPackage.CONTRACT_DEFINITION__BOUND_TO:
        return BOUND_TO_EDEFAULT == null ? boundTo != null : !BOUND_TO_EDEFAULT.equals(boundTo);
      case LibraryPackage.CONTRACT_DEFINITION__CONTRACT_DEFINITION:
        return contractDefinition != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", boundTo: ");
    result.append(boundTo);
    result.append(')');
    return result.toString();
  }

} //ContractDefinitionImpl

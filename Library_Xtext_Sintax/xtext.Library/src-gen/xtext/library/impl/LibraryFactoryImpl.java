/**
 * generated by Xtext 2.39.0
 */
package xtext.library.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import xtext.library.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class LibraryFactoryImpl extends EFactoryImpl implements LibraryFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static LibraryFactory init()
  {
    try
    {
      LibraryFactory theLibraryFactory = (LibraryFactory)EPackage.Registry.INSTANCE.getEFactory(LibraryPackage.eNS_URI);
      if (theLibraryFactory != null)
      {
        return theLibraryFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new LibraryFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LibraryFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case LibraryPackage.LIBRARY: return createLibrary();
      case LibraryPackage.DATA_PROCESSING_DEFINITION: return createDataProcessingDefinition();
      case LibraryPackage.JOB: return createJob();
      case LibraryPackage.TRANSFORMATION: return createTransformation();
      case LibraryPackage.PARAMETER_DEFINITION: return createParameterDefinition();
      case LibraryPackage.CONTRACT_DEFINITION: return createContractDefinition();
      case LibraryPackage.CONTRACT_DEFINITION0: return createContractDefinition0();
      case LibraryPackage.ARGUMENT_DEFINITION: return createArgumentDefinition();
      case LibraryPackage.DATA_DICTIONARY_DEFINITION: return createDataDictionaryDefinition();
      case LibraryPackage.DATA_FIELD_DEFINITION: return createDataFieldDefinition();
      case LibraryPackage.CATEGORICAL_DEF: return createCategoricalDef();
      case LibraryPackage.CONTINUOUS_DEF: return createContinuousDef();
      case LibraryPackage.DATE_DEF: return createDateDef();
      case LibraryPackage.MAP_DEF: return createMapDef();
      case LibraryPackage.CAST_TYPE_DEF: return createCastTypeDef();
      case LibraryPackage.PRIMITIVE_DEF: return createPrimitiveDef();
      case LibraryPackage.DERIVED_FIELD_DEF: return createDerivedFieldDef();
      case LibraryPackage.FILTER_VALUE_DEF: return createFilterValueDef();
      case LibraryPackage.MATCHING_VALUE_DEF: return createMatchingValueDef();
      case LibraryPackage.RANGE_DEF: return createRangeDef();
      case LibraryPackage.MISSING_VALUES_DEF: return createMissingValuesDef();
      case LibraryPackage.DATE_RANGE_DEF: return createDateRangeDef();
      case LibraryPackage.DISCRETIZE_BIN_DEF: return createDiscretizeBinDef();
      case LibraryPackage.DERIVED_VALUE_DEF: return createDerivedValueDef();
      case LibraryPackage.NUM_OP_DEF: return createNumOpDef();
      case LibraryPackage.FIX_VALUE_DEF: return createFixValueDef();
      case LibraryPackage.FIELD_RANGE_DEF: return createFieldRangeDef();
      case LibraryPackage.MATH_OP_DEF: return createMathOpDef();
      case LibraryPackage.JOIN_DEF: return createJoinDef();
      case LibraryPackage.OPERAND_DEF: return createOperandDef();
      case LibraryPackage.FIELD_DEF: return createFieldDef();
      case LibraryPackage.CONDITION_DEF: return createConditionDef();
      case LibraryPackage.VALUE_RANGE_DEFINITION: return createValueRangeDefinition();
      case LibraryPackage.FIELD_RANGE_DEFINITION: return createFieldRangeDefinition();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Library createLibrary()
  {
    LibraryImpl library = new LibraryImpl();
    return library;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DataProcessingDefinition createDataProcessingDefinition()
  {
    DataProcessingDefinitionImpl dataProcessingDefinition = new DataProcessingDefinitionImpl();
    return dataProcessingDefinition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Job createJob()
  {
    JobImpl job = new JobImpl();
    return job;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Transformation createTransformation()
  {
    TransformationImpl transformation = new TransformationImpl();
    return transformation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ParameterDefinition createParameterDefinition()
  {
    ParameterDefinitionImpl parameterDefinition = new ParameterDefinitionImpl();
    return parameterDefinition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ContractDefinition createContractDefinition()
  {
    ContractDefinitionImpl contractDefinition = new ContractDefinitionImpl();
    return contractDefinition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ContractDefinition0 createContractDefinition0()
  {
    ContractDefinition0Impl contractDefinition0 = new ContractDefinition0Impl();
    return contractDefinition0;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ArgumentDefinition createArgumentDefinition()
  {
    ArgumentDefinitionImpl argumentDefinition = new ArgumentDefinitionImpl();
    return argumentDefinition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DataDictionaryDefinition createDataDictionaryDefinition()
  {
    DataDictionaryDefinitionImpl dataDictionaryDefinition = new DataDictionaryDefinitionImpl();
    return dataDictionaryDefinition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DataFieldDefinition createDataFieldDefinition()
  {
    DataFieldDefinitionImpl dataFieldDefinition = new DataFieldDefinitionImpl();
    return dataFieldDefinition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CategoricalDef createCategoricalDef()
  {
    CategoricalDefImpl categoricalDef = new CategoricalDefImpl();
    return categoricalDef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ContinuousDef createContinuousDef()
  {
    ContinuousDefImpl continuousDef = new ContinuousDefImpl();
    return continuousDef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DateDef createDateDef()
  {
    DateDefImpl dateDef = new DateDefImpl();
    return dateDef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MapDef createMapDef()
  {
    MapDefImpl mapDef = new MapDefImpl();
    return mapDef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CastTypeDef createCastTypeDef()
  {
    CastTypeDefImpl castTypeDef = new CastTypeDefImpl();
    return castTypeDef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PrimitiveDef createPrimitiveDef()
  {
    PrimitiveDefImpl primitiveDef = new PrimitiveDefImpl();
    return primitiveDef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DerivedFieldDef createDerivedFieldDef()
  {
    DerivedFieldDefImpl derivedFieldDef = new DerivedFieldDefImpl();
    return derivedFieldDef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FilterValueDef createFilterValueDef()
  {
    FilterValueDefImpl filterValueDef = new FilterValueDefImpl();
    return filterValueDef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MatchingValueDef createMatchingValueDef()
  {
    MatchingValueDefImpl matchingValueDef = new MatchingValueDefImpl();
    return matchingValueDef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RangeDef createRangeDef()
  {
    RangeDefImpl rangeDef = new RangeDefImpl();
    return rangeDef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MissingValuesDef createMissingValuesDef()
  {
    MissingValuesDefImpl missingValuesDef = new MissingValuesDefImpl();
    return missingValuesDef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DateRangeDef createDateRangeDef()
  {
    DateRangeDefImpl dateRangeDef = new DateRangeDefImpl();
    return dateRangeDef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DiscretizeBinDef createDiscretizeBinDef()
  {
    DiscretizeBinDefImpl discretizeBinDef = new DiscretizeBinDefImpl();
    return discretizeBinDef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DerivedValueDef createDerivedValueDef()
  {
    DerivedValueDefImpl derivedValueDef = new DerivedValueDefImpl();
    return derivedValueDef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NumOpDef createNumOpDef()
  {
    NumOpDefImpl numOpDef = new NumOpDefImpl();
    return numOpDef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FixValueDef createFixValueDef()
  {
    FixValueDefImpl fixValueDef = new FixValueDefImpl();
    return fixValueDef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FieldRangeDef createFieldRangeDef()
  {
    FieldRangeDefImpl fieldRangeDef = new FieldRangeDefImpl();
    return fieldRangeDef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MathOpDef createMathOpDef()
  {
    MathOpDefImpl mathOpDef = new MathOpDefImpl();
    return mathOpDef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public JoinDef createJoinDef()
  {
    JoinDefImpl joinDef = new JoinDefImpl();
    return joinDef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public OperandDef createOperandDef()
  {
    OperandDefImpl operandDef = new OperandDefImpl();
    return operandDef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FieldDef createFieldDef()
  {
    FieldDefImpl fieldDef = new FieldDefImpl();
    return fieldDef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ConditionDef createConditionDef()
  {
    ConditionDefImpl conditionDef = new ConditionDefImpl();
    return conditionDef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ValueRangeDefinition createValueRangeDefinition()
  {
    ValueRangeDefinitionImpl valueRangeDefinition = new ValueRangeDefinitionImpl();
    return valueRangeDefinition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FieldRangeDefinition createFieldRangeDefinition()
  {
    FieldRangeDefinitionImpl fieldRangeDefinition = new FieldRangeDefinitionImpl();
    return fieldRangeDefinition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LibraryPackage getLibraryPackage()
  {
    return (LibraryPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static LibraryPackage getPackage()
  {
    return LibraryPackage.eINSTANCE;
  }

} //LibraryFactoryImpl

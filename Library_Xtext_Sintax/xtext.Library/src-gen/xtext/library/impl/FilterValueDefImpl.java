/**
 * generated by Xtext 2.39.0
 */
package xtext.library.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import xtext.library.FilterValueDef;
import xtext.library.LibraryPackage;
import xtext.library.MatchingValueDef;
import xtext.library.PrimitiveDef;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Filter Value Def</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link xtext.library.impl.FilterValueDefImpl#getMatchingvaluedef <em>Matchingvaluedef</em>}</li>
 *   <li>{@link xtext.library.impl.FilterValueDefImpl#getPrimitivedef <em>Primitivedef</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FilterValueDefImpl extends ParameterDefinitionImpl implements FilterValueDef
{
  /**
   * The cached value of the '{@link #getMatchingvaluedef() <em>Matchingvaluedef</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMatchingvaluedef()
   * @generated
   * @ordered
   */
  protected EList<MatchingValueDef> matchingvaluedef;

  /**
   * The cached value of the '{@link #getPrimitivedef() <em>Primitivedef</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPrimitivedef()
   * @generated
   * @ordered
   */
  protected EList<PrimitiveDef> primitivedef;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FilterValueDefImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return LibraryPackage.Literals.FILTER_VALUE_DEF;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<MatchingValueDef> getMatchingvaluedef()
  {
    if (matchingvaluedef == null)
    {
      matchingvaluedef = new EObjectContainmentEList<MatchingValueDef>(MatchingValueDef.class, this, LibraryPackage.FILTER_VALUE_DEF__MATCHINGVALUEDEF);
    }
    return matchingvaluedef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<PrimitiveDef> getPrimitivedef()
  {
    if (primitivedef == null)
    {
      primitivedef = new EObjectContainmentEList<PrimitiveDef>(PrimitiveDef.class, this, LibraryPackage.FILTER_VALUE_DEF__PRIMITIVEDEF);
    }
    return primitivedef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case LibraryPackage.FILTER_VALUE_DEF__MATCHINGVALUEDEF:
        return ((InternalEList<?>)getMatchingvaluedef()).basicRemove(otherEnd, msgs);
      case LibraryPackage.FILTER_VALUE_DEF__PRIMITIVEDEF:
        return ((InternalEList<?>)getPrimitivedef()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case LibraryPackage.FILTER_VALUE_DEF__MATCHINGVALUEDEF:
        return getMatchingvaluedef();
      case LibraryPackage.FILTER_VALUE_DEF__PRIMITIVEDEF:
        return getPrimitivedef();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case LibraryPackage.FILTER_VALUE_DEF__MATCHINGVALUEDEF:
        getMatchingvaluedef().clear();
        getMatchingvaluedef().addAll((Collection<? extends MatchingValueDef>)newValue);
        return;
      case LibraryPackage.FILTER_VALUE_DEF__PRIMITIVEDEF:
        getPrimitivedef().clear();
        getPrimitivedef().addAll((Collection<? extends PrimitiveDef>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case LibraryPackage.FILTER_VALUE_DEF__MATCHINGVALUEDEF:
        getMatchingvaluedef().clear();
        return;
      case LibraryPackage.FILTER_VALUE_DEF__PRIMITIVEDEF:
        getPrimitivedef().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case LibraryPackage.FILTER_VALUE_DEF__MATCHINGVALUEDEF:
        return matchingvaluedef != null && !matchingvaluedef.isEmpty();
      case LibraryPackage.FILTER_VALUE_DEF__PRIMITIVEDEF:
        return primitivedef != null && !primitivedef.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //FilterValueDefImpl

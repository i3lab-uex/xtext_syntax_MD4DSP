/**
 * generated by Xtext 2.39.0
 */
package xtext.workflow;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>DBTYPE</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @see xtext.workflow.WorkflowPackage#getDBTYPE()
 * @model
 * @generated
 */
public enum DBTYPE implements Enumerator
{
  /**
   * The '<em><b>MYSQL</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #MYSQL_VALUE
   * @generated
   * @ordered
   */
  MYSQL(0, "MYSQL", "MYSQL"),

  /**
   * The '<em><b>POSTGRESQL</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #POSTGRESQL_VALUE
   * @generated
   * @ordered
   */
  POSTGRESQL(1, "POSTGRESQL", "POSTGRESQL"),

  /**
   * The '<em><b>SQLSERVER</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SQLSERVER_VALUE
   * @generated
   * @ordered
   */
  SQLSERVER(2, "SQLSERVER", "SQLSERVER"),

  /**
   * The '<em><b>ORACLE</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ORACLE_VALUE
   * @generated
   * @ordered
   */
  ORACLE(3, "ORACLE", "ORACLE"),

  /**
   * The '<em><b>MONGODB</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #MONGODB_VALUE
   * @generated
   * @ordered
   */
  MONGODB(4, "MONGODB", "MONGODB"),

  /**
   * The '<em><b>DYNAMODB</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #DYNAMODB_VALUE
   * @generated
   * @ordered
   */
  DYNAMODB(5, "DYNAMODB", "DYNAMODB");

  /**
   * The '<em><b>MYSQL</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #MYSQL
   * @model
   * @generated
   * @ordered
   */
  public static final int MYSQL_VALUE = 0;

  /**
   * The '<em><b>POSTGRESQL</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #POSTGRESQL
   * @model
   * @generated
   * @ordered
   */
  public static final int POSTGRESQL_VALUE = 1;

  /**
   * The '<em><b>SQLSERVER</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SQLSERVER
   * @model
   * @generated
   * @ordered
   */
  public static final int SQLSERVER_VALUE = 2;

  /**
   * The '<em><b>ORACLE</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ORACLE
   * @model
   * @generated
   * @ordered
   */
  public static final int ORACLE_VALUE = 3;

  /**
   * The '<em><b>MONGODB</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #MONGODB
   * @model
   * @generated
   * @ordered
   */
  public static final int MONGODB_VALUE = 4;

  /**
   * The '<em><b>DYNAMODB</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #DYNAMODB
   * @model
   * @generated
   * @ordered
   */
  public static final int DYNAMODB_VALUE = 5;

  /**
   * An array of all the '<em><b>DBTYPE</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static final DBTYPE[] VALUES_ARRAY =
    new DBTYPE[]
    {
      MYSQL,
      POSTGRESQL,
      SQLSERVER,
      ORACLE,
      MONGODB,
      DYNAMODB,
    };

  /**
   * A public read-only list of all the '<em><b>DBTYPE</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final List<DBTYPE> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

  /**
   * Returns the '<em><b>DBTYPE</b></em>' literal with the specified literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param literal the literal.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static DBTYPE get(String literal)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      DBTYPE result = VALUES_ARRAY[i];
      if (result.toString().equals(literal))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>DBTYPE</b></em>' literal with the specified name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param name the name.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static DBTYPE getByName(String name)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      DBTYPE result = VALUES_ARRAY[i];
      if (result.getName().equals(name))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>DBTYPE</b></em>' literal with the specified integer value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the integer value.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static DBTYPE get(int value)
  {
    switch (value)
    {
      case MYSQL_VALUE: return MYSQL;
      case POSTGRESQL_VALUE: return POSTGRESQL;
      case SQLSERVER_VALUE: return SQLSERVER;
      case ORACLE_VALUE: return ORACLE;
      case MONGODB_VALUE: return MONGODB;
      case DYNAMODB_VALUE: return DYNAMODB;
    }
    return null;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final int value;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String name;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String literal;

  /**
   * Only this class can construct instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private DBTYPE(int value, String name, String literal)
  {
    this.value = value;
    this.name = name;
    this.literal = literal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLiteral()
  {
    return literal;
  }

  /**
   * Returns the literal value of the enumerator, which is its string representation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    return literal;
  }
  
} //DBTYPE

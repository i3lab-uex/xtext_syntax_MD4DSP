/**
 * generated by Xtext 2.39.0
 */
package xtext.workflow;

import org.eclipse.emf.common.util.EList;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Data Field</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link xtext.workflow.DataField#isId <em>Id</em>}</li>
 *   <li>{@link xtext.workflow.DataField#getDataType <em>Data Type</em>}</li>
 *   <li>{@link xtext.workflow.DataField#isTarget <em>Target</em>}</li>
 *   <li>{@link xtext.workflow.DataField#getDisplayName <em>Display Name</em>}</li>
 *   <li>{@link xtext.workflow.DataField#getValidValues <em>Valid Values</em>}</li>
 *   <li>{@link xtext.workflow.DataField#getInvalidValues <em>Invalid Values</em>}</li>
 *   <li>{@link xtext.workflow.DataField#getMissingValues <em>Missing Values</em>}</li>
 * </ul>
 *
 * @see xtext.workflow.WorkflowPackage#getDataField()
 * @model
 * @generated
 */
public interface DataField extends Argument
{
  /**
   * Returns the value of the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Id</em>' attribute.
   * @see #setId(boolean)
   * @see xtext.workflow.WorkflowPackage#getDataField_Id()
   * @model
   * @generated
   */
  boolean isId();

  /**
   * Sets the value of the '{@link xtext.workflow.DataField#isId <em>Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Id</em>' attribute.
   * @see #isId()
   * @generated
   */
  void setId(boolean value);

  /**
   * Returns the value of the '<em><b>Data Type</b></em>' attribute.
   * The literals are from the enumeration {@link xtext.workflow.DataType}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Data Type</em>' attribute.
   * @see xtext.workflow.DataType
   * @see #setDataType(DataType)
   * @see xtext.workflow.WorkflowPackage#getDataField_DataType()
   * @model
   * @generated
   */
  DataType getDataType();

  /**
   * Sets the value of the '{@link xtext.workflow.DataField#getDataType <em>Data Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Data Type</em>' attribute.
   * @see xtext.workflow.DataType
   * @see #getDataType()
   * @generated
   */
  void setDataType(DataType value);

  /**
   * Returns the value of the '<em><b>Target</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Target</em>' attribute.
   * @see #setTarget(boolean)
   * @see xtext.workflow.WorkflowPackage#getDataField_Target()
   * @model
   * @generated
   */
  boolean isTarget();

  /**
   * Sets the value of the '{@link xtext.workflow.DataField#isTarget <em>Target</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Target</em>' attribute.
   * @see #isTarget()
   * @generated
   */
  void setTarget(boolean value);

  /**
   * Returns the value of the '<em><b>Display Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Display Name</em>' attribute.
   * @see #setDisplayName(String)
   * @see xtext.workflow.WorkflowPackage#getDataField_DisplayName()
   * @model
   * @generated
   */
  String getDisplayName();

  /**
   * Sets the value of the '{@link xtext.workflow.DataField#getDisplayName <em>Display Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Display Name</em>' attribute.
   * @see #getDisplayName()
   * @generated
   */
  void setDisplayName(String value);

  /**
   * Returns the value of the '<em><b>Valid Values</b></em>' containment reference list.
   * The list contents are of type {@link xtext.workflow.ValueField}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Valid Values</em>' containment reference list.
   * @see xtext.workflow.WorkflowPackage#getDataField_ValidValues()
   * @model containment="true"
   * @generated
   */
  EList<ValueField> getValidValues();

  /**
   * Returns the value of the '<em><b>Invalid Values</b></em>' containment reference list.
   * The list contents are of type {@link xtext.workflow.ValueField}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Invalid Values</em>' containment reference list.
   * @see xtext.workflow.WorkflowPackage#getDataField_InvalidValues()
   * @model containment="true"
   * @generated
   */
  EList<ValueField> getInvalidValues();

  /**
   * Returns the value of the '<em><b>Missing Values</b></em>' containment reference list.
   * The list contents are of type {@link xtext.workflow.ValueField}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Missing Values</em>' containment reference list.
   * @see xtext.workflow.WorkflowPackage#getDataField_MissingValues()
   * @model containment="true"
   * @generated
   */
  EList<ValueField> getMissingValues();

} // DataField

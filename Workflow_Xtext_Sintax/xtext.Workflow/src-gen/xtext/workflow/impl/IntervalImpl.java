/**
 * generated by Xtext 2.39.0
 */
package xtext.workflow.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import xtext.workflow.ClosureType;
import xtext.workflow.Interval;
import xtext.workflow.WorkflowPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Interval</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link xtext.workflow.impl.IntervalImpl#getLeftMargin <em>Left Margin</em>}</li>
 *   <li>{@link xtext.workflow.impl.IntervalImpl#getRightMargin <em>Right Margin</em>}</li>
 *   <li>{@link xtext.workflow.impl.IntervalImpl#getClousure <em>Clousure</em>}</li>
 * </ul>
 *
 * @generated
 */
public class IntervalImpl extends MinimalEObjectImpl.Container implements Interval
{
  /**
   * The default value of the '{@link #getLeftMargin() <em>Left Margin</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLeftMargin()
   * @generated
   * @ordered
   */
  protected static final float LEFT_MARGIN_EDEFAULT = 0.0F;

  /**
   * The cached value of the '{@link #getLeftMargin() <em>Left Margin</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLeftMargin()
   * @generated
   * @ordered
   */
  protected float leftMargin = LEFT_MARGIN_EDEFAULT;

  /**
   * The default value of the '{@link #getRightMargin() <em>Right Margin</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRightMargin()
   * @generated
   * @ordered
   */
  protected static final float RIGHT_MARGIN_EDEFAULT = 0.0F;

  /**
   * The cached value of the '{@link #getRightMargin() <em>Right Margin</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRightMargin()
   * @generated
   * @ordered
   */
  protected float rightMargin = RIGHT_MARGIN_EDEFAULT;

  /**
   * The default value of the '{@link #getClousure() <em>Clousure</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getClousure()
   * @generated
   * @ordered
   */
  protected static final ClosureType CLOUSURE_EDEFAULT = ClosureType.OPEN_OPEN;

  /**
   * The cached value of the '{@link #getClousure() <em>Clousure</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getClousure()
   * @generated
   * @ordered
   */
  protected ClosureType clousure = CLOUSURE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected IntervalImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return WorkflowPackage.Literals.INTERVAL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public float getLeftMargin()
  {
    return leftMargin;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLeftMargin(float newLeftMargin)
  {
    float oldLeftMargin = leftMargin;
    leftMargin = newLeftMargin;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowPackage.INTERVAL__LEFT_MARGIN, oldLeftMargin, leftMargin));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public float getRightMargin()
  {
    return rightMargin;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRightMargin(float newRightMargin)
  {
    float oldRightMargin = rightMargin;
    rightMargin = newRightMargin;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowPackage.INTERVAL__RIGHT_MARGIN, oldRightMargin, rightMargin));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ClosureType getClousure()
  {
    return clousure;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setClousure(ClosureType newClousure)
  {
    ClosureType oldClousure = clousure;
    clousure = newClousure == null ? CLOUSURE_EDEFAULT : newClousure;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowPackage.INTERVAL__CLOUSURE, oldClousure, clousure));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case WorkflowPackage.INTERVAL__LEFT_MARGIN:
        return getLeftMargin();
      case WorkflowPackage.INTERVAL__RIGHT_MARGIN:
        return getRightMargin();
      case WorkflowPackage.INTERVAL__CLOUSURE:
        return getClousure();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case WorkflowPackage.INTERVAL__LEFT_MARGIN:
        setLeftMargin((Float)newValue);
        return;
      case WorkflowPackage.INTERVAL__RIGHT_MARGIN:
        setRightMargin((Float)newValue);
        return;
      case WorkflowPackage.INTERVAL__CLOUSURE:
        setClousure((ClosureType)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case WorkflowPackage.INTERVAL__LEFT_MARGIN:
        setLeftMargin(LEFT_MARGIN_EDEFAULT);
        return;
      case WorkflowPackage.INTERVAL__RIGHT_MARGIN:
        setRightMargin(RIGHT_MARGIN_EDEFAULT);
        return;
      case WorkflowPackage.INTERVAL__CLOUSURE:
        setClousure(CLOUSURE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case WorkflowPackage.INTERVAL__LEFT_MARGIN:
        return leftMargin != LEFT_MARGIN_EDEFAULT;
      case WorkflowPackage.INTERVAL__RIGHT_MARGIN:
        return rightMargin != RIGHT_MARGIN_EDEFAULT;
      case WorkflowPackage.INTERVAL__CLOUSURE:
        return clousure != CLOUSURE_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (leftMargin: ");
    result.append(leftMargin);
    result.append(", rightMargin: ");
    result.append(rightMargin);
    result.append(", clousure: ");
    result.append(clousure);
    result.append(')');
    return result.toString();
  }

} //IntervalImpl

/**
 * generated by Xtext 2.40.0
 */
package xtext.workflow.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import xtext.workflow.DevelopmentTool;
import xtext.workflow.Environment;
import xtext.workflow.Storage;
import xtext.workflow.WorkflowPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Environment</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link xtext.workflow.impl.EnvironmentImpl#getName <em>Name</em>}</li>
 *   <li>{@link xtext.workflow.impl.EnvironmentImpl#getPath <em>Path</em>}</li>
 *   <li>{@link xtext.workflow.impl.EnvironmentImpl#getStorage <em>Storage</em>}</li>
 *   <li>{@link xtext.workflow.impl.EnvironmentImpl#getContainerName <em>Container Name</em>}</li>
 *   <li>{@link xtext.workflow.impl.EnvironmentImpl#getDevelopmentTool <em>Development Tool</em>}</li>
 *   <li>{@link xtext.workflow.impl.EnvironmentImpl#getImageName <em>Image Name</em>}</li>
 *   <li>{@link xtext.workflow.impl.EnvironmentImpl#getImageTag <em>Image Tag</em>}</li>
 * </ul>
 *
 * @generated
 */
public class EnvironmentImpl extends MinimalEObjectImpl.Container implements Environment
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getPath() <em>Path</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPath()
   * @generated
   * @ordered
   */
  protected static final String PATH_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPath() <em>Path</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPath()
   * @generated
   * @ordered
   */
  protected String path = PATH_EDEFAULT;

  /**
   * The cached value of the '{@link #getStorage() <em>Storage</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStorage()
   * @generated
   * @ordered
   */
  protected EList<Storage> storage;

  /**
   * The default value of the '{@link #getContainerName() <em>Container Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContainerName()
   * @generated
   * @ordered
   */
  protected static final String CONTAINER_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getContainerName() <em>Container Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContainerName()
   * @generated
   * @ordered
   */
  protected String containerName = CONTAINER_NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getDevelopmentTool() <em>Development Tool</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDevelopmentTool()
   * @generated
   * @ordered
   */
  protected DevelopmentTool developmentTool;

  /**
   * The default value of the '{@link #getImageName() <em>Image Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getImageName()
   * @generated
   * @ordered
   */
  protected static final String IMAGE_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getImageName() <em>Image Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getImageName()
   * @generated
   * @ordered
   */
  protected String imageName = IMAGE_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getImageTag() <em>Image Tag</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getImageTag()
   * @generated
   * @ordered
   */
  protected static final String IMAGE_TAG_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getImageTag() <em>Image Tag</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getImageTag()
   * @generated
   * @ordered
   */
  protected String imageTag = IMAGE_TAG_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EnvironmentImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return WorkflowPackage.Literals.ENVIRONMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowPackage.ENVIRONMENT__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getPath()
  {
    return path;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPath(String newPath)
  {
    String oldPath = path;
    path = newPath;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowPackage.ENVIRONMENT__PATH, oldPath, path));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Storage> getStorage()
  {
    if (storage == null)
    {
      storage = new EObjectContainmentEList<Storage>(Storage.class, this, WorkflowPackage.ENVIRONMENT__STORAGE);
    }
    return storage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getContainerName()
  {
    return containerName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setContainerName(String newContainerName)
  {
    String oldContainerName = containerName;
    containerName = newContainerName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowPackage.ENVIRONMENT__CONTAINER_NAME, oldContainerName, containerName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DevelopmentTool getDevelopmentTool()
  {
    return developmentTool;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDevelopmentTool(DevelopmentTool newDevelopmentTool, NotificationChain msgs)
  {
    DevelopmentTool oldDevelopmentTool = developmentTool;
    developmentTool = newDevelopmentTool;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, WorkflowPackage.ENVIRONMENT__DEVELOPMENT_TOOL, oldDevelopmentTool, newDevelopmentTool);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDevelopmentTool(DevelopmentTool newDevelopmentTool)
  {
    if (newDevelopmentTool != developmentTool)
    {
      NotificationChain msgs = null;
      if (developmentTool != null)
        msgs = ((InternalEObject)developmentTool).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - WorkflowPackage.ENVIRONMENT__DEVELOPMENT_TOOL, null, msgs);
      if (newDevelopmentTool != null)
        msgs = ((InternalEObject)newDevelopmentTool).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - WorkflowPackage.ENVIRONMENT__DEVELOPMENT_TOOL, null, msgs);
      msgs = basicSetDevelopmentTool(newDevelopmentTool, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowPackage.ENVIRONMENT__DEVELOPMENT_TOOL, newDevelopmentTool, newDevelopmentTool));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getImageName()
  {
    return imageName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setImageName(String newImageName)
  {
    String oldImageName = imageName;
    imageName = newImageName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowPackage.ENVIRONMENT__IMAGE_NAME, oldImageName, imageName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getImageTag()
  {
    return imageTag;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setImageTag(String newImageTag)
  {
    String oldImageTag = imageTag;
    imageTag = newImageTag;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowPackage.ENVIRONMENT__IMAGE_TAG, oldImageTag, imageTag));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case WorkflowPackage.ENVIRONMENT__STORAGE:
        return ((InternalEList<?>)getStorage()).basicRemove(otherEnd, msgs);
      case WorkflowPackage.ENVIRONMENT__DEVELOPMENT_TOOL:
        return basicSetDevelopmentTool(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case WorkflowPackage.ENVIRONMENT__NAME:
        return getName();
      case WorkflowPackage.ENVIRONMENT__PATH:
        return getPath();
      case WorkflowPackage.ENVIRONMENT__STORAGE:
        return getStorage();
      case WorkflowPackage.ENVIRONMENT__CONTAINER_NAME:
        return getContainerName();
      case WorkflowPackage.ENVIRONMENT__DEVELOPMENT_TOOL:
        return getDevelopmentTool();
      case WorkflowPackage.ENVIRONMENT__IMAGE_NAME:
        return getImageName();
      case WorkflowPackage.ENVIRONMENT__IMAGE_TAG:
        return getImageTag();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case WorkflowPackage.ENVIRONMENT__NAME:
        setName((String)newValue);
        return;
      case WorkflowPackage.ENVIRONMENT__PATH:
        setPath((String)newValue);
        return;
      case WorkflowPackage.ENVIRONMENT__STORAGE:
        getStorage().clear();
        getStorage().addAll((Collection<? extends Storage>)newValue);
        return;
      case WorkflowPackage.ENVIRONMENT__CONTAINER_NAME:
        setContainerName((String)newValue);
        return;
      case WorkflowPackage.ENVIRONMENT__DEVELOPMENT_TOOL:
        setDevelopmentTool((DevelopmentTool)newValue);
        return;
      case WorkflowPackage.ENVIRONMENT__IMAGE_NAME:
        setImageName((String)newValue);
        return;
      case WorkflowPackage.ENVIRONMENT__IMAGE_TAG:
        setImageTag((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case WorkflowPackage.ENVIRONMENT__NAME:
        setName(NAME_EDEFAULT);
        return;
      case WorkflowPackage.ENVIRONMENT__PATH:
        setPath(PATH_EDEFAULT);
        return;
      case WorkflowPackage.ENVIRONMENT__STORAGE:
        getStorage().clear();
        return;
      case WorkflowPackage.ENVIRONMENT__CONTAINER_NAME:
        setContainerName(CONTAINER_NAME_EDEFAULT);
        return;
      case WorkflowPackage.ENVIRONMENT__DEVELOPMENT_TOOL:
        setDevelopmentTool((DevelopmentTool)null);
        return;
      case WorkflowPackage.ENVIRONMENT__IMAGE_NAME:
        setImageName(IMAGE_NAME_EDEFAULT);
        return;
      case WorkflowPackage.ENVIRONMENT__IMAGE_TAG:
        setImageTag(IMAGE_TAG_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case WorkflowPackage.ENVIRONMENT__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case WorkflowPackage.ENVIRONMENT__PATH:
        return PATH_EDEFAULT == null ? path != null : !PATH_EDEFAULT.equals(path);
      case WorkflowPackage.ENVIRONMENT__STORAGE:
        return storage != null && !storage.isEmpty();
      case WorkflowPackage.ENVIRONMENT__CONTAINER_NAME:
        return CONTAINER_NAME_EDEFAULT == null ? containerName != null : !CONTAINER_NAME_EDEFAULT.equals(containerName);
      case WorkflowPackage.ENVIRONMENT__DEVELOPMENT_TOOL:
        return developmentTool != null;
      case WorkflowPackage.ENVIRONMENT__IMAGE_NAME:
        return IMAGE_NAME_EDEFAULT == null ? imageName != null : !IMAGE_NAME_EDEFAULT.equals(imageName);
      case WorkflowPackage.ENVIRONMENT__IMAGE_TAG:
        return IMAGE_TAG_EDEFAULT == null ? imageTag != null : !IMAGE_TAG_EDEFAULT.equals(imageTag);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", path: ");
    result.append(path);
    result.append(", containerName: ");
    result.append(containerName);
    result.append(", imageName: ");
    result.append(imageName);
    result.append(", imageTag: ");
    result.append(imageTag);
    result.append(')');
    return result.toString();
  }

} //EnvironmentImpl

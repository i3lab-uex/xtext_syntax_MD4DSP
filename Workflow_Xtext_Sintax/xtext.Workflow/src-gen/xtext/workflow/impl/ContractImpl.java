/**
 * generated by Xtext 2.39.0
 */
package xtext.workflow.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import xtext.workflow.Contract;
import xtext.workflow.WorkflowPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Contract</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link xtext.workflow.impl.ContractImpl#getName <em>Name</em>}</li>
 *   <li>{@link xtext.workflow.impl.ContractImpl#getContractDefinition <em>Contract Definition</em>}</li>
 *   <li>{@link xtext.workflow.impl.ContractImpl#getContract <em>Contract</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ContractImpl extends MinimalEObjectImpl.Container implements Contract
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getContractDefinition() <em>Contract Definition</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContractDefinition()
   * @generated
   * @ordered
   */
  protected static final String CONTRACT_DEFINITION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getContractDefinition() <em>Contract Definition</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContractDefinition()
   * @generated
   * @ordered
   */
  protected String contractDefinition = CONTRACT_DEFINITION_EDEFAULT;

  /**
   * The default value of the '{@link #getContract() <em>Contract</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContract()
   * @generated
   * @ordered
   */
  protected static final String CONTRACT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getContract() <em>Contract</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContract()
   * @generated
   * @ordered
   */
  protected String contract = CONTRACT_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ContractImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return WorkflowPackage.Literals.CONTRACT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowPackage.CONTRACT__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getContractDefinition()
  {
    return contractDefinition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setContractDefinition(String newContractDefinition)
  {
    String oldContractDefinition = contractDefinition;
    contractDefinition = newContractDefinition;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowPackage.CONTRACT__CONTRACT_DEFINITION, oldContractDefinition, contractDefinition));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getContract()
  {
    return contract;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setContract(String newContract)
  {
    String oldContract = contract;
    contract = newContract;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowPackage.CONTRACT__CONTRACT, oldContract, contract));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case WorkflowPackage.CONTRACT__NAME:
        return getName();
      case WorkflowPackage.CONTRACT__CONTRACT_DEFINITION:
        return getContractDefinition();
      case WorkflowPackage.CONTRACT__CONTRACT:
        return getContract();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case WorkflowPackage.CONTRACT__NAME:
        setName((String)newValue);
        return;
      case WorkflowPackage.CONTRACT__CONTRACT_DEFINITION:
        setContractDefinition((String)newValue);
        return;
      case WorkflowPackage.CONTRACT__CONTRACT:
        setContract((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case WorkflowPackage.CONTRACT__NAME:
        setName(NAME_EDEFAULT);
        return;
      case WorkflowPackage.CONTRACT__CONTRACT_DEFINITION:
        setContractDefinition(CONTRACT_DEFINITION_EDEFAULT);
        return;
      case WorkflowPackage.CONTRACT__CONTRACT:
        setContract(CONTRACT_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case WorkflowPackage.CONTRACT__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case WorkflowPackage.CONTRACT__CONTRACT_DEFINITION:
        return CONTRACT_DEFINITION_EDEFAULT == null ? contractDefinition != null : !CONTRACT_DEFINITION_EDEFAULT.equals(contractDefinition);
      case WorkflowPackage.CONTRACT__CONTRACT:
        return CONTRACT_EDEFAULT == null ? contract != null : !CONTRACT_EDEFAULT.equals(contract);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", contractDefinition: ");
    result.append(contractDefinition);
    result.append(", contract: ");
    result.append(contract);
    result.append(')');
    return result.toString();
  }

} //ContractImpl

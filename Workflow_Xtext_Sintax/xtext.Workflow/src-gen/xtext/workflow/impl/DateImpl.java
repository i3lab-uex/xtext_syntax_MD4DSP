/**
 * generated by Xtext 2.39.0
 */
package xtext.workflow.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import xtext.workflow.Date;
import xtext.workflow.IntervalDate;
import xtext.workflow.WorkflowPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Date</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link xtext.workflow.impl.DateImpl#getDateDef <em>Date Def</em>}</li>
 *   <li>{@link xtext.workflow.impl.DateImpl#getFormat <em>Format</em>}</li>
 *   <li>{@link xtext.workflow.impl.DateImpl#getIntervaldate <em>Intervaldate</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DateImpl extends DataFieldImpl implements Date
{
  /**
   * The default value of the '{@link #getDateDef() <em>Date Def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDateDef()
   * @generated
   * @ordered
   */
  protected static final String DATE_DEF_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDateDef() <em>Date Def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDateDef()
   * @generated
   * @ordered
   */
  protected String dateDef = DATE_DEF_EDEFAULT;

  /**
   * The default value of the '{@link #getFormat() <em>Format</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFormat()
   * @generated
   * @ordered
   */
  protected static final String FORMAT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFormat() <em>Format</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFormat()
   * @generated
   * @ordered
   */
  protected String format = FORMAT_EDEFAULT;

  /**
   * The cached value of the '{@link #getIntervaldate() <em>Intervaldate</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIntervaldate()
   * @generated
   * @ordered
   */
  protected EList<IntervalDate> intervaldate;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DateImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return WorkflowPackage.Literals.DATE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDateDef()
  {
    return dateDef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDateDef(String newDateDef)
  {
    String oldDateDef = dateDef;
    dateDef = newDateDef;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowPackage.DATE__DATE_DEF, oldDateDef, dateDef));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getFormat()
  {
    return format;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFormat(String newFormat)
  {
    String oldFormat = format;
    format = newFormat;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowPackage.DATE__FORMAT, oldFormat, format));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<IntervalDate> getIntervaldate()
  {
    if (intervaldate == null)
    {
      intervaldate = new EObjectContainmentEList<IntervalDate>(IntervalDate.class, this, WorkflowPackage.DATE__INTERVALDATE);
    }
    return intervaldate;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case WorkflowPackage.DATE__INTERVALDATE:
        return ((InternalEList<?>)getIntervaldate()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case WorkflowPackage.DATE__DATE_DEF:
        return getDateDef();
      case WorkflowPackage.DATE__FORMAT:
        return getFormat();
      case WorkflowPackage.DATE__INTERVALDATE:
        return getIntervaldate();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case WorkflowPackage.DATE__DATE_DEF:
        setDateDef((String)newValue);
        return;
      case WorkflowPackage.DATE__FORMAT:
        setFormat((String)newValue);
        return;
      case WorkflowPackage.DATE__INTERVALDATE:
        getIntervaldate().clear();
        getIntervaldate().addAll((Collection<? extends IntervalDate>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case WorkflowPackage.DATE__DATE_DEF:
        setDateDef(DATE_DEF_EDEFAULT);
        return;
      case WorkflowPackage.DATE__FORMAT:
        setFormat(FORMAT_EDEFAULT);
        return;
      case WorkflowPackage.DATE__INTERVALDATE:
        getIntervaldate().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case WorkflowPackage.DATE__DATE_DEF:
        return DATE_DEF_EDEFAULT == null ? dateDef != null : !DATE_DEF_EDEFAULT.equals(dateDef);
      case WorkflowPackage.DATE__FORMAT:
        return FORMAT_EDEFAULT == null ? format != null : !FORMAT_EDEFAULT.equals(format);
      case WorkflowPackage.DATE__INTERVALDATE:
        return intervaldate != null && !intervaldate.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (dateDef: ");
    result.append(dateDef);
    result.append(", format: ");
    result.append(format);
    result.append(')');
    return result.toString();
  }

} //DateImpl

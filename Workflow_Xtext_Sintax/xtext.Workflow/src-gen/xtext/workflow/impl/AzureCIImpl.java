/**
 * generated by Xtext 2.40.0
 */
package xtext.workflow.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import xtext.workflow.AzureCI;
import xtext.workflow.WorkflowPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Azure CI</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link xtext.workflow.impl.AzureCIImpl#getAcrName <em>Acr Name</em>}</li>
 *   <li>{@link xtext.workflow.impl.AzureCIImpl#getKeyVaultName <em>Key Vault Name</em>}</li>
 *   <li>{@link xtext.workflow.impl.AzureCIImpl#getSecretName <em>Secret Name</em>}</li>
 *   <li>{@link xtext.workflow.impl.AzureCIImpl#getBlobName <em>Blob Name</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AzureCIImpl extends EnvironmentImpl implements AzureCI
{
  /**
   * The default value of the '{@link #getAcrName() <em>Acr Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAcrName()
   * @generated
   * @ordered
   */
  protected static final String ACR_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAcrName() <em>Acr Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAcrName()
   * @generated
   * @ordered
   */
  protected String acrName = ACR_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getKeyVaultName() <em>Key Vault Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getKeyVaultName()
   * @generated
   * @ordered
   */
  protected static final String KEY_VAULT_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getKeyVaultName() <em>Key Vault Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getKeyVaultName()
   * @generated
   * @ordered
   */
  protected String keyVaultName = KEY_VAULT_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getSecretName() <em>Secret Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSecretName()
   * @generated
   * @ordered
   */
  protected static final String SECRET_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSecretName() <em>Secret Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSecretName()
   * @generated
   * @ordered
   */
  protected String secretName = SECRET_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getBlobName() <em>Blob Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBlobName()
   * @generated
   * @ordered
   */
  protected static final String BLOB_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getBlobName() <em>Blob Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBlobName()
   * @generated
   * @ordered
   */
  protected String blobName = BLOB_NAME_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AzureCIImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return WorkflowPackage.Literals.AZURE_CI;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getAcrName()
  {
    return acrName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAcrName(String newAcrName)
  {
    String oldAcrName = acrName;
    acrName = newAcrName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowPackage.AZURE_CI__ACR_NAME, oldAcrName, acrName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getKeyVaultName()
  {
    return keyVaultName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setKeyVaultName(String newKeyVaultName)
  {
    String oldKeyVaultName = keyVaultName;
    keyVaultName = newKeyVaultName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowPackage.AZURE_CI__KEY_VAULT_NAME, oldKeyVaultName, keyVaultName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getSecretName()
  {
    return secretName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSecretName(String newSecretName)
  {
    String oldSecretName = secretName;
    secretName = newSecretName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowPackage.AZURE_CI__SECRET_NAME, oldSecretName, secretName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getBlobName()
  {
    return blobName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBlobName(String newBlobName)
  {
    String oldBlobName = blobName;
    blobName = newBlobName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowPackage.AZURE_CI__BLOB_NAME, oldBlobName, blobName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case WorkflowPackage.AZURE_CI__ACR_NAME:
        return getAcrName();
      case WorkflowPackage.AZURE_CI__KEY_VAULT_NAME:
        return getKeyVaultName();
      case WorkflowPackage.AZURE_CI__SECRET_NAME:
        return getSecretName();
      case WorkflowPackage.AZURE_CI__BLOB_NAME:
        return getBlobName();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case WorkflowPackage.AZURE_CI__ACR_NAME:
        setAcrName((String)newValue);
        return;
      case WorkflowPackage.AZURE_CI__KEY_VAULT_NAME:
        setKeyVaultName((String)newValue);
        return;
      case WorkflowPackage.AZURE_CI__SECRET_NAME:
        setSecretName((String)newValue);
        return;
      case WorkflowPackage.AZURE_CI__BLOB_NAME:
        setBlobName((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case WorkflowPackage.AZURE_CI__ACR_NAME:
        setAcrName(ACR_NAME_EDEFAULT);
        return;
      case WorkflowPackage.AZURE_CI__KEY_VAULT_NAME:
        setKeyVaultName(KEY_VAULT_NAME_EDEFAULT);
        return;
      case WorkflowPackage.AZURE_CI__SECRET_NAME:
        setSecretName(SECRET_NAME_EDEFAULT);
        return;
      case WorkflowPackage.AZURE_CI__BLOB_NAME:
        setBlobName(BLOB_NAME_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case WorkflowPackage.AZURE_CI__ACR_NAME:
        return ACR_NAME_EDEFAULT == null ? acrName != null : !ACR_NAME_EDEFAULT.equals(acrName);
      case WorkflowPackage.AZURE_CI__KEY_VAULT_NAME:
        return KEY_VAULT_NAME_EDEFAULT == null ? keyVaultName != null : !KEY_VAULT_NAME_EDEFAULT.equals(keyVaultName);
      case WorkflowPackage.AZURE_CI__SECRET_NAME:
        return SECRET_NAME_EDEFAULT == null ? secretName != null : !SECRET_NAME_EDEFAULT.equals(secretName);
      case WorkflowPackage.AZURE_CI__BLOB_NAME:
        return BLOB_NAME_EDEFAULT == null ? blobName != null : !BLOB_NAME_EDEFAULT.equals(blobName);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (acrName: ");
    result.append(acrName);
    result.append(", keyVaultName: ");
    result.append(keyVaultName);
    result.append(", secretName: ");
    result.append(secretName);
    result.append(", blobName: ");
    result.append(blobName);
    result.append(')');
    return result.toString();
  }

} //AzureCIImpl

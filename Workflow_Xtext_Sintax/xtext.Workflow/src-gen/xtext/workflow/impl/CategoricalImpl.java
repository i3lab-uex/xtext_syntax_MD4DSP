/**
 * generated by Xtext 2.40.0
 */
package xtext.workflow.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import xtext.workflow.Categorical;
import xtext.workflow.WorkflowPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Categorical</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link xtext.workflow.impl.CategoricalImpl#getCategoricalDef <em>Categorical Def</em>}</li>
 *   <li>{@link xtext.workflow.impl.CategoricalImpl#isOrdinal <em>Ordinal</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CategoricalImpl extends DataFieldImpl implements Categorical
{
  /**
   * The default value of the '{@link #getCategoricalDef() <em>Categorical Def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCategoricalDef()
   * @generated
   * @ordered
   */
  protected static final String CATEGORICAL_DEF_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCategoricalDef() <em>Categorical Def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCategoricalDef()
   * @generated
   * @ordered
   */
  protected String categoricalDef = CATEGORICAL_DEF_EDEFAULT;

  /**
   * The default value of the '{@link #isOrdinal() <em>Ordinal</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isOrdinal()
   * @generated
   * @ordered
   */
  protected static final boolean ORDINAL_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isOrdinal() <em>Ordinal</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isOrdinal()
   * @generated
   * @ordered
   */
  protected boolean ordinal = ORDINAL_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CategoricalImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return WorkflowPackage.Literals.CATEGORICAL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCategoricalDef()
  {
    return categoricalDef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCategoricalDef(String newCategoricalDef)
  {
    String oldCategoricalDef = categoricalDef;
    categoricalDef = newCategoricalDef;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowPackage.CATEGORICAL__CATEGORICAL_DEF, oldCategoricalDef, categoricalDef));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isOrdinal()
  {
    return ordinal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOrdinal(boolean newOrdinal)
  {
    boolean oldOrdinal = ordinal;
    ordinal = newOrdinal;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowPackage.CATEGORICAL__ORDINAL, oldOrdinal, ordinal));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case WorkflowPackage.CATEGORICAL__CATEGORICAL_DEF:
        return getCategoricalDef();
      case WorkflowPackage.CATEGORICAL__ORDINAL:
        return isOrdinal();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case WorkflowPackage.CATEGORICAL__CATEGORICAL_DEF:
        setCategoricalDef((String)newValue);
        return;
      case WorkflowPackage.CATEGORICAL__ORDINAL:
        setOrdinal((Boolean)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case WorkflowPackage.CATEGORICAL__CATEGORICAL_DEF:
        setCategoricalDef(CATEGORICAL_DEF_EDEFAULT);
        return;
      case WorkflowPackage.CATEGORICAL__ORDINAL:
        setOrdinal(ORDINAL_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case WorkflowPackage.CATEGORICAL__CATEGORICAL_DEF:
        return CATEGORICAL_DEF_EDEFAULT == null ? categoricalDef != null : !CATEGORICAL_DEF_EDEFAULT.equals(categoricalDef);
      case WorkflowPackage.CATEGORICAL__ORDINAL:
        return ordinal != ORDINAL_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (categoricalDef: ");
    result.append(categoricalDef);
    result.append(", ordinal: ");
    result.append(ordinal);
    result.append(')');
    return result.toString();
  }

} //CategoricalImpl

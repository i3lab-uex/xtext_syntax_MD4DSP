/**
 * generated by Xtext 2.39.0
 */
package xtext.workflow.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import xtext.workflow.CastType;
import xtext.workflow.DataType;
import xtext.workflow.WorkflowPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Cast Type</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link xtext.workflow.impl.CastTypeImpl#getImp_name <em>Imp name</em>}</li>
 *   <li>{@link xtext.workflow.impl.CastTypeImpl#getCastTypeDef <em>Cast Type Def</em>}</li>
 *   <li>{@link xtext.workflow.impl.CastTypeImpl#getType <em>Type</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CastTypeImpl extends ParameterImpl implements CastType
{
  /**
   * The default value of the '{@link #getImp_name() <em>Imp name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getImp_name()
   * @generated
   * @ordered
   */
  protected static final String IMP_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getImp_name() <em>Imp name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getImp_name()
   * @generated
   * @ordered
   */
  protected String imp_name = IMP_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getCastTypeDef() <em>Cast Type Def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCastTypeDef()
   * @generated
   * @ordered
   */
  protected static final String CAST_TYPE_DEF_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCastTypeDef() <em>Cast Type Def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCastTypeDef()
   * @generated
   * @ordered
   */
  protected String castTypeDef = CAST_TYPE_DEF_EDEFAULT;

  /**
   * The default value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected static final DataType TYPE_EDEFAULT = DataType.STRING;

  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected DataType type = TYPE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CastTypeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return WorkflowPackage.Literals.CAST_TYPE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getImp_name()
  {
    return imp_name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setImp_name(String newImp_name)
  {
    String oldImp_name = imp_name;
    imp_name = newImp_name;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowPackage.CAST_TYPE__IMP_NAME, oldImp_name, imp_name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCastTypeDef()
  {
    return castTypeDef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCastTypeDef(String newCastTypeDef)
  {
    String oldCastTypeDef = castTypeDef;
    castTypeDef = newCastTypeDef;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowPackage.CAST_TYPE__CAST_TYPE_DEF, oldCastTypeDef, castTypeDef));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DataType getType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setType(DataType newType)
  {
    DataType oldType = type;
    type = newType == null ? TYPE_EDEFAULT : newType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowPackage.CAST_TYPE__TYPE, oldType, type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case WorkflowPackage.CAST_TYPE__IMP_NAME:
        return getImp_name();
      case WorkflowPackage.CAST_TYPE__CAST_TYPE_DEF:
        return getCastTypeDef();
      case WorkflowPackage.CAST_TYPE__TYPE:
        return getType();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case WorkflowPackage.CAST_TYPE__IMP_NAME:
        setImp_name((String)newValue);
        return;
      case WorkflowPackage.CAST_TYPE__CAST_TYPE_DEF:
        setCastTypeDef((String)newValue);
        return;
      case WorkflowPackage.CAST_TYPE__TYPE:
        setType((DataType)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case WorkflowPackage.CAST_TYPE__IMP_NAME:
        setImp_name(IMP_NAME_EDEFAULT);
        return;
      case WorkflowPackage.CAST_TYPE__CAST_TYPE_DEF:
        setCastTypeDef(CAST_TYPE_DEF_EDEFAULT);
        return;
      case WorkflowPackage.CAST_TYPE__TYPE:
        setType(TYPE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case WorkflowPackage.CAST_TYPE__IMP_NAME:
        return IMP_NAME_EDEFAULT == null ? imp_name != null : !IMP_NAME_EDEFAULT.equals(imp_name);
      case WorkflowPackage.CAST_TYPE__CAST_TYPE_DEF:
        return CAST_TYPE_DEF_EDEFAULT == null ? castTypeDef != null : !CAST_TYPE_DEF_EDEFAULT.equals(castTypeDef);
      case WorkflowPackage.CAST_TYPE__TYPE:
        return type != TYPE_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (imp_name: ");
    result.append(imp_name);
    result.append(", castTypeDef: ");
    result.append(castTypeDef);
    result.append(", type: ");
    result.append(type);
    result.append(')');
    return result.toString();
  }

} //CastTypeImpl

/**
 * generated by Xtext 2.40.0
 */
package xtext.workflow.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import xtext.workflow.AmazonECS;
import xtext.workflow.AmazonS3;
import xtext.workflow.Argument;
import xtext.workflow.Authentication;
import xtext.workflow.AzureBlob;
import xtext.workflow.AzureCI;
import xtext.workflow.CastType;
import xtext.workflow.Categorical;
import xtext.workflow.ClosureType;
import xtext.workflow.Continuous;
import xtext.workflow.Contract;
import xtext.workflow.Credentials;
import xtext.workflow.DataDictionary;
import xtext.workflow.DataField;
import xtext.workflow.DataProcessing;
import xtext.workflow.DataType;
import xtext.workflow.Database;
import xtext.workflow.Date;
import xtext.workflow.DateRange;
import xtext.workflow.DerivedField;
import xtext.workflow.DerivedType;
import xtext.workflow.DerivedValue;
import xtext.workflow.DevelopmentTool;
import xtext.workflow.DiscretizeBin;
import xtext.workflow.Environment;
import xtext.workflow.Field;
import xtext.workflow.FieldRange;
import xtext.workflow.File;
import xtext.workflow.FileType;
import xtext.workflow.FilterType;
import xtext.workflow.FilterValue;
import xtext.workflow.FixValue;
import xtext.workflow.Folder;
import xtext.workflow.ImputeType;
import xtext.workflow.Interval;
import xtext.workflow.IntervalDate;
import xtext.workflow.Join;
import xtext.workflow.LibDataType;
import xtext.workflow.Link;
import xtext.workflow.Local;
import xtext.workflow.LocalFolder;
import xtext.workflow.Map;
import xtext.workflow.MapOperation;
import xtext.workflow.MatchingValue;
import xtext.workflow.MathOp;
import xtext.workflow.MathOperator;
import xtext.workflow.NumOp;
import xtext.workflow.OAuth2;
import xtext.workflow.Operand;
import xtext.workflow.Operation;
import xtext.workflow.Operator;
import xtext.workflow.PMMLModel;
import xtext.workflow.Parameter;
import xtext.workflow.Primitive;
import xtext.workflow.ProcessingStep;
import xtext.workflow.Range;
import xtext.workflow.Source;
import xtext.workflow.SpecialValue;
import xtext.workflow.SpecialValues;
import xtext.workflow.Storage;
import xtext.workflow.Table;
import xtext.workflow.Test;
import xtext.workflow.ValueField;
import xtext.workflow.Workflow;
import xtext.workflow.WorkflowFactory;
import xtext.workflow.WorkflowPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class WorkflowPackageImpl extends EPackageImpl implements WorkflowPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass workflowEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass processingStepEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dataProcessingEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass pmmlModelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass testEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass linkEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass argumentEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass parameterEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass mapEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass primitiveEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass derivedFieldEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass filterValueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass discretizeBinEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fieldRangeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass mathOpEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass joinEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass operandEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fieldEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fixValueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass matchingValueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass rangeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dateRangeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass specialValuesEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass imputeTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass derivedValueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass numOpEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass castTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dataDictionaryEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dataFieldEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass categoricalEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass continuousEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dateEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass intervalEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass intervalDateEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass valueFieldEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass contractEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass environmentEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass localEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass azureCIEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass amazonECSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass developmentToolEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass storageEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass databaseEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass authenticationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass credentialsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass sslEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass oAuth2EClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass awsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass sourceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fileEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tableEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass folderEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass localFolderEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass amazonS3EClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass azureBlobEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum libDataTypeEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum dataTypeEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum closureTypeEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum operationEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum derivedTypeEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum specialValueEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum operatorEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum filterTypeEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum mapOperationEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum mathOperatorEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum toolEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum dbtypeEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum fileTypeEEnum = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see xtext.workflow.WorkflowPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private WorkflowPackageImpl()
  {
    super(eNS_URI, WorkflowFactory.eINSTANCE);
  }
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link WorkflowPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static WorkflowPackage init()
  {
    if (isInited) return (WorkflowPackage)EPackage.Registry.INSTANCE.getEPackage(WorkflowPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredWorkflowPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    WorkflowPackageImpl theWorkflowPackage = registeredWorkflowPackage instanceof WorkflowPackageImpl ? (WorkflowPackageImpl)registeredWorkflowPackage : new WorkflowPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theWorkflowPackage.createPackageContents();

    // Initialize created meta-data
    theWorkflowPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theWorkflowPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(WorkflowPackage.eNS_URI, theWorkflowPackage);
    return theWorkflowPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getWorkflow()
  {
    return workflowEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getWorkflow_Name()
  {
    return (EAttribute)workflowEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getWorkflow_Environment()
  {
    return (EReference)workflowEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getWorkflow_Dataprocessing()
  {
    return (EReference)workflowEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getWorkflow_Link()
  {
    return (EReference)workflowEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getProcessingStep()
  {
    return processingStepEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getProcessingStep_Name()
  {
    return (EAttribute)processingStepEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getProcessingStep_DataProcessingDefinition()
  {
    return (EAttribute)processingStepEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getProcessingStep_Origin_function()
  {
    return (EAttribute)processingStepEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getProcessingStep_InputPort()
  {
    return (EReference)processingStepEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getProcessingStep_OutputPort()
  {
    return (EReference)processingStepEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getProcessingStep_In()
  {
    return (EReference)processingStepEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getProcessingStep_Out()
  {
    return (EReference)processingStepEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDataProcessing()
  {
    return dataProcessingEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDataProcessing_Parameter()
  {
    return (EReference)dataProcessingEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDataProcessing_Contract()
  {
    return (EReference)dataProcessingEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDataProcessing_Initial_accumulated_processing()
  {
    return (EReference)dataProcessingEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPMMLModel()
  {
    return pmmlModelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPMMLModel_FilePath()
  {
    return (EAttribute)pmmlModelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPMMLModel_OnlyPredictions()
  {
    return (EAttribute)pmmlModelEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPMMLModel_Test()
  {
    return (EReference)pmmlModelEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTest()
  {
    return testEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getTest_Path()
  {
    return (EAttribute)testEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getTest_TrainSize()
  {
    return (EAttribute)testEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getTest_TestSize()
  {
    return (EAttribute)testEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLink()
  {
    return linkEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLink_Name()
  {
    return (EAttribute)linkEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLink_Source()
  {
    return (EReference)linkEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLink_Target()
  {
    return (EReference)linkEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getArgument()
  {
    return argumentEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getArgument_Name()
  {
    return (EAttribute)argumentEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getParameter()
  {
    return parameterEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMap()
  {
    return mapEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMap_Name()
  {
    return (EAttribute)mapEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMap_MapDefinition()
  {
    return (EAttribute)mapEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMap_InValue()
  {
    return (EAttribute)mapEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMap_Outvalue()
  {
    return (EAttribute)mapEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMap_MapOperation()
  {
    return (EAttribute)mapEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPrimitive()
  {
    return primitiveEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPrimitive_Name()
  {
    return (EAttribute)primitiveEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPrimitive_PrimitiveDef()
  {
    return (EAttribute)primitiveEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPrimitive_Value()
  {
    return (EAttribute)primitiveEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPrimitive_DataType()
  {
    return (EAttribute)primitiveEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDerivedField()
  {
    return derivedFieldEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDerivedField_Name()
  {
    return (EAttribute)derivedFieldEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDerivedField_DerivedFieldDef()
  {
    return (EAttribute)derivedFieldEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDerivedField_Der_dataField()
  {
    return (EReference)derivedFieldEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFilterValue()
  {
    return filterValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFilterValue_Name()
  {
    return (EAttribute)filterValueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFilterValue_FilterValueDef()
  {
    return (EAttribute)filterValueEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFilterValue_Primitive()
  {
    return (EReference)filterValueEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFilterValue_Matchingvalue()
  {
    return (EReference)filterValueEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFilterValue_FilterType()
  {
    return (EAttribute)filterValueEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDiscretizeBin()
  {
    return discretizeBinEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDiscretizeBin_Name()
  {
    return (EAttribute)discretizeBinEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDiscretizeBin_DiscretizeBinDef()
  {
    return (EAttribute)discretizeBinEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDiscretizeBin_BinValue()
  {
    return (EAttribute)discretizeBinEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDiscretizeBin_Interval()
  {
    return (EReference)discretizeBinEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFieldRange()
  {
    return fieldRangeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFieldRange_Name()
  {
    return (EAttribute)fieldRangeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFieldRange_FieldDef()
  {
    return (EAttribute)fieldRangeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFieldRange_DataField()
  {
    return (EReference)fieldRangeEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFieldRange_Operator()
  {
    return (EAttribute)fieldRangeEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMathOp()
  {
    return mathOpEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMathOp_Name()
  {
    return (EAttribute)mathOpEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMathOp_MathOpDef()
  {
    return (EAttribute)mathOpEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMathOp_Operator()
  {
    return (EAttribute)mathOpEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getMathOp_Operand()
  {
    return (EReference)mathOpEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getJoin()
  {
    return joinEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getJoin_Name()
  {
    return (EAttribute)joinEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getJoin_JoinDef()
  {
    return (EAttribute)joinEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getJoin_Operand()
  {
    return (EReference)joinEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getOperand()
  {
    return operandEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getOperand_Name()
  {
    return (EAttribute)operandEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getField()
  {
    return fieldEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getField_FieldDef()
  {
    return (EAttribute)fieldEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getField_Datafield()
  {
    return (EReference)fieldEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFixValue()
  {
    return fixValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFixValue_FixValueDef()
  {
    return (EAttribute)fixValueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFixValue_Value()
  {
    return (EReference)fixValueEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMatchingValue()
  {
    return matchingValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMatchingValue_Name()
  {
    return (EAttribute)matchingValueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRange()
  {
    return rangeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRange_RangeDef()
  {
    return (EAttribute)rangeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRange_Min()
  {
    return (EAttribute)rangeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRange_Max()
  {
    return (EAttribute)rangeEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRange_Clousure()
  {
    return (EAttribute)rangeEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRange_MinInfinity()
  {
    return (EAttribute)rangeEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRange_MaxInfinity()
  {
    return (EAttribute)rangeEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDateRange()
  {
    return dateRangeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDateRange_RangeDef()
  {
    return (EAttribute)dateRangeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDateRange_Min()
  {
    return (EAttribute)dateRangeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDateRange_Max()
  {
    return (EAttribute)dateRangeEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDateRange_Clousure()
  {
    return (EAttribute)dateRangeEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSpecialValues()
  {
    return specialValuesEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSpecialValues_SpecialValuesDef()
  {
    return (EAttribute)specialValuesEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSpecialValues_SpecialType()
  {
    return (EAttribute)specialValuesEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getImputeType()
  {
    return imputeTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDerivedValue()
  {
    return derivedValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDerivedValue_Imp_name()
  {
    return (EAttribute)derivedValueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDerivedValue_DerivedValueDef()
  {
    return (EAttribute)derivedValueEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDerivedValue_Type()
  {
    return (EAttribute)derivedValueEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDerivedValue_ImputeValue()
  {
    return (EAttribute)derivedValueEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getNumOp()
  {
    return numOpEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getNumOp_Imp_name()
  {
    return (EAttribute)numOpEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getNumOp_NumOpDef()
  {
    return (EAttribute)numOpEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getNumOp_Operation()
  {
    return (EAttribute)numOpEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getNumOp_ImputeValue()
  {
    return (EAttribute)numOpEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCastType()
  {
    return castTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCastType_Imp_name()
  {
    return (EAttribute)castTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCastType_CastTypeDef()
  {
    return (EAttribute)castTypeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCastType_Type()
  {
    return (EAttribute)castTypeEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDataDictionary()
  {
    return dataDictionaryEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDataDictionary_DataDictionaryDefinition()
  {
    return (EAttribute)dataDictionaryEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDataDictionary_FileName()
  {
    return (EAttribute)dataDictionaryEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDataDictionary_Datafield()
  {
    return (EReference)dataDictionaryEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDataField()
  {
    return dataFieldEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDataField_Id()
  {
    return (EAttribute)dataFieldEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDataField_DataType()
  {
    return (EAttribute)dataFieldEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDataField_Target()
  {
    return (EAttribute)dataFieldEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDataField_DisplayName()
  {
    return (EAttribute)dataFieldEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDataField_ValidValues()
  {
    return (EReference)dataFieldEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDataField_InvalidValues()
  {
    return (EReference)dataFieldEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDataField_MissingValues()
  {
    return (EReference)dataFieldEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCategorical()
  {
    return categoricalEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCategorical_CategoricalDef()
  {
    return (EAttribute)categoricalEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCategorical_Ordinal()
  {
    return (EAttribute)categoricalEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getContinuous()
  {
    return continuousEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getContinuous_ContinuousDef()
  {
    return (EAttribute)continuousEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getContinuous_NumDecimals()
  {
    return (EAttribute)continuousEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getContinuous_Interval()
  {
    return (EReference)continuousEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDate()
  {
    return dateEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDate_DateDef()
  {
    return (EAttribute)dateEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDate_Format()
  {
    return (EAttribute)dateEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDate_Intervaldate()
  {
    return (EReference)dateEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getInterval()
  {
    return intervalEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getInterval_LeftMargin()
  {
    return (EAttribute)intervalEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getInterval_RightMargin()
  {
    return (EAttribute)intervalEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getInterval_Clousure()
  {
    return (EAttribute)intervalEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getIntervalDate()
  {
    return intervalDateEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getIntervalDate_LeftMargin()
  {
    return (EAttribute)intervalDateEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getIntervalDate_RightMargin()
  {
    return (EAttribute)intervalDateEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getIntervalDate_Clousure()
  {
    return (EAttribute)intervalDateEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getValueField()
  {
    return valueFieldEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getValueField_Value()
  {
    return (EAttribute)valueFieldEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getValueField_Count()
  {
    return (EAttribute)valueFieldEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getContract()
  {
    return contractEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getContract_Name()
  {
    return (EAttribute)contractEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getContract_ContractDefinition()
  {
    return (EAttribute)contractEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getContract_Contract()
  {
    return (EAttribute)contractEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEnvironment()
  {
    return environmentEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEnvironment_Name()
  {
    return (EAttribute)environmentEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEnvironment_Path()
  {
    return (EAttribute)environmentEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEnvironment_Storage()
  {
    return (EReference)environmentEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEnvironment_ContainerName()
  {
    return (EAttribute)environmentEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEnvironment_DevelopmentTool()
  {
    return (EReference)environmentEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEnvironment_ImageName()
  {
    return (EAttribute)environmentEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEnvironment_ImageTag()
  {
    return (EAttribute)environmentEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLocal()
  {
    return localEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAzureCI()
  {
    return azureCIEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAzureCI_AcrName()
  {
    return (EAttribute)azureCIEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAzureCI_KeyVaultName()
  {
    return (EAttribute)azureCIEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAzureCI_SecretName()
  {
    return (EAttribute)azureCIEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAzureCI_BlobName()
  {
    return (EAttribute)azureCIEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAmazonECS()
  {
    return amazonECSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAmazonECS_SecretId()
  {
    return (EAttribute)amazonECSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAmazonECS_Region()
  {
    return (EAttribute)amazonECSEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAmazonECS_Key()
  {
    return (EAttribute)amazonECSEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDevelopmentTool()
  {
    return developmentToolEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDevelopmentTool_Version()
  {
    return (EAttribute)developmentToolEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDevelopmentTool_Tool()
  {
    return (EAttribute)developmentToolEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getStorage()
  {
    return storageEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getStorage_StorageName()
  {
    return (EAttribute)storageEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDatabase()
  {
    return databaseEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDatabase_Host()
  {
    return (EAttribute)databaseEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDatabase_Port()
  {
    return (EAttribute)databaseEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDatabase_Type()
  {
    return (EAttribute)databaseEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDatabase_Auth()
  {
    return (EReference)databaseEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDatabase_DbName()
  {
    return (EAttribute)databaseEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDatabase_Table()
  {
    return (EReference)databaseEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAuthentication()
  {
    return authenticationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCredentials()
  {
    return credentialsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCredentials_Username()
  {
    return (EAttribute)credentialsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCredentials_Passwd()
  {
    return (EAttribute)credentialsEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSSL()
  {
    return sslEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSSL_Path_sslcert()
  {
    return (EAttribute)sslEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSSL_Path_sslkey()
  {
    return (EAttribute)sslEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSSL_Path_sslrootcert()
  {
    return (EAttribute)sslEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getOAuth2()
  {
    return oAuth2EClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getOAuth2_ClientId()
  {
    return (EAttribute)oAuth2EClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getOAuth2_ClientSecret()
  {
    return (EAttribute)oAuth2EClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getOAuth2_TokenUrl()
  {
    return (EAttribute)oAuth2EClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getOAuth2_AccessToken()
  {
    return (EAttribute)oAuth2EClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getOAuth2_Scope()
  {
    return (EAttribute)oAuth2EClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAWS()
  {
    return awsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAWS_Region()
  {
    return (EAttribute)awsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAWS_AccessKey()
  {
    return (EAttribute)awsEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAWS_EndpointURL()
  {
    return (EAttribute)awsEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAWS_SecretId()
  {
    return (EAttribute)awsEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSource()
  {
    return sourceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSource_DataDictionary()
  {
    return (EReference)sourceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFile()
  {
    return fileEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFile_Type()
  {
    return (EAttribute)fileEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFile_Csv_sep()
  {
    return (EAttribute)fileEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFile_Hdf5_key()
  {
    return (EAttribute)fileEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFile_Csv_thousandsSep()
  {
    return (EAttribute)fileEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFile_Csv_decimalSep()
  {
    return (EAttribute)fileEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTable()
  {
    return tableEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFolder()
  {
    return folderEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLocalFolder()
  {
    return localFolderEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLocalFolder_FolderPath()
  {
    return (EAttribute)localFolderEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLocalFolder_File()
  {
    return (EReference)localFolderEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAmazonS3()
  {
    return amazonS3EClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAmazonS3_FolderPath()
  {
    return (EAttribute)amazonS3EClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAmazonS3_File()
  {
    return (EReference)amazonS3EClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAmazonS3_Bucket()
  {
    return (EAttribute)amazonS3EClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAmazonS3_Region()
  {
    return (EAttribute)amazonS3EClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAmazonS3_SecretId()
  {
    return (EAttribute)amazonS3EClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAzureBlob()
  {
    return azureBlobEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAzureBlob_FolderPath()
  {
    return (EAttribute)azureBlobEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAzureBlob_File()
  {
    return (EReference)azureBlobEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAzureBlob_Container()
  {
    return (EAttribute)azureBlobEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAzureBlob_KeyVaultName()
  {
    return (EAttribute)azureBlobEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAzureBlob_SecretName()
  {
    return (EAttribute)azureBlobEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getLibDataType()
  {
    return libDataTypeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getDataType()
  {
    return dataTypeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getClosureType()
  {
    return closureTypeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getOperation()
  {
    return operationEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getDerivedType()
  {
    return derivedTypeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getSpecialValue()
  {
    return specialValueEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getOperator()
  {
    return operatorEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getFilterType()
  {
    return filterTypeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getMapOperation()
  {
    return mapOperationEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getMathOperator()
  {
    return mathOperatorEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getTOOL()
  {
    return toolEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getDBTYPE()
  {
    return dbtypeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getFileType()
  {
    return fileTypeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public WorkflowFactory getWorkflowFactory()
  {
    return (WorkflowFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    workflowEClass = createEClass(WORKFLOW);
    createEAttribute(workflowEClass, WORKFLOW__NAME);
    createEReference(workflowEClass, WORKFLOW__ENVIRONMENT);
    createEReference(workflowEClass, WORKFLOW__DATAPROCESSING);
    createEReference(workflowEClass, WORKFLOW__LINK);

    processingStepEClass = createEClass(PROCESSING_STEP);
    createEAttribute(processingStepEClass, PROCESSING_STEP__NAME);
    createEAttribute(processingStepEClass, PROCESSING_STEP__DATA_PROCESSING_DEFINITION);
    createEAttribute(processingStepEClass, PROCESSING_STEP__ORIGIN_FUNCTION);
    createEReference(processingStepEClass, PROCESSING_STEP__INPUT_PORT);
    createEReference(processingStepEClass, PROCESSING_STEP__OUTPUT_PORT);
    createEReference(processingStepEClass, PROCESSING_STEP__IN);
    createEReference(processingStepEClass, PROCESSING_STEP__OUT);

    dataProcessingEClass = createEClass(DATA_PROCESSING);
    createEReference(dataProcessingEClass, DATA_PROCESSING__PARAMETER);
    createEReference(dataProcessingEClass, DATA_PROCESSING__CONTRACT);
    createEReference(dataProcessingEClass, DATA_PROCESSING__INITIAL_ACCUMULATED_PROCESSING);

    pmmlModelEClass = createEClass(PMML_MODEL);
    createEAttribute(pmmlModelEClass, PMML_MODEL__FILE_PATH);
    createEAttribute(pmmlModelEClass, PMML_MODEL__ONLY_PREDICTIONS);
    createEReference(pmmlModelEClass, PMML_MODEL__TEST);

    testEClass = createEClass(TEST);
    createEAttribute(testEClass, TEST__PATH);
    createEAttribute(testEClass, TEST__TRAIN_SIZE);
    createEAttribute(testEClass, TEST__TEST_SIZE);

    linkEClass = createEClass(LINK);
    createEAttribute(linkEClass, LINK__NAME);
    createEReference(linkEClass, LINK__SOURCE);
    createEReference(linkEClass, LINK__TARGET);

    argumentEClass = createEClass(ARGUMENT);
    createEAttribute(argumentEClass, ARGUMENT__NAME);

    parameterEClass = createEClass(PARAMETER);

    mapEClass = createEClass(MAP);
    createEAttribute(mapEClass, MAP__NAME);
    createEAttribute(mapEClass, MAP__MAP_DEFINITION);
    createEAttribute(mapEClass, MAP__IN_VALUE);
    createEAttribute(mapEClass, MAP__OUTVALUE);
    createEAttribute(mapEClass, MAP__MAP_OPERATION);

    primitiveEClass = createEClass(PRIMITIVE);
    createEAttribute(primitiveEClass, PRIMITIVE__NAME);
    createEAttribute(primitiveEClass, PRIMITIVE__PRIMITIVE_DEF);
    createEAttribute(primitiveEClass, PRIMITIVE__VALUE);
    createEAttribute(primitiveEClass, PRIMITIVE__DATA_TYPE);

    derivedFieldEClass = createEClass(DERIVED_FIELD);
    createEAttribute(derivedFieldEClass, DERIVED_FIELD__NAME);
    createEAttribute(derivedFieldEClass, DERIVED_FIELD__DERIVED_FIELD_DEF);
    createEReference(derivedFieldEClass, DERIVED_FIELD__DER_DATA_FIELD);

    filterValueEClass = createEClass(FILTER_VALUE);
    createEAttribute(filterValueEClass, FILTER_VALUE__NAME);
    createEAttribute(filterValueEClass, FILTER_VALUE__FILTER_VALUE_DEF);
    createEReference(filterValueEClass, FILTER_VALUE__PRIMITIVE);
    createEReference(filterValueEClass, FILTER_VALUE__MATCHINGVALUE);
    createEAttribute(filterValueEClass, FILTER_VALUE__FILTER_TYPE);

    discretizeBinEClass = createEClass(DISCRETIZE_BIN);
    createEAttribute(discretizeBinEClass, DISCRETIZE_BIN__NAME);
    createEAttribute(discretizeBinEClass, DISCRETIZE_BIN__DISCRETIZE_BIN_DEF);
    createEAttribute(discretizeBinEClass, DISCRETIZE_BIN__BIN_VALUE);
    createEReference(discretizeBinEClass, DISCRETIZE_BIN__INTERVAL);

    fieldRangeEClass = createEClass(FIELD_RANGE);
    createEAttribute(fieldRangeEClass, FIELD_RANGE__NAME);
    createEAttribute(fieldRangeEClass, FIELD_RANGE__FIELD_DEF);
    createEReference(fieldRangeEClass, FIELD_RANGE__DATA_FIELD);
    createEAttribute(fieldRangeEClass, FIELD_RANGE__OPERATOR);

    mathOpEClass = createEClass(MATH_OP);
    createEAttribute(mathOpEClass, MATH_OP__NAME);
    createEAttribute(mathOpEClass, MATH_OP__MATH_OP_DEF);
    createEAttribute(mathOpEClass, MATH_OP__OPERATOR);
    createEReference(mathOpEClass, MATH_OP__OPERAND);

    joinEClass = createEClass(JOIN);
    createEAttribute(joinEClass, JOIN__NAME);
    createEAttribute(joinEClass, JOIN__JOIN_DEF);
    createEReference(joinEClass, JOIN__OPERAND);

    operandEClass = createEClass(OPERAND);
    createEAttribute(operandEClass, OPERAND__NAME);

    fieldEClass = createEClass(FIELD);
    createEAttribute(fieldEClass, FIELD__FIELD_DEF);
    createEReference(fieldEClass, FIELD__DATAFIELD);

    fixValueEClass = createEClass(FIX_VALUE);
    createEAttribute(fixValueEClass, FIX_VALUE__FIX_VALUE_DEF);
    createEReference(fixValueEClass, FIX_VALUE__VALUE);

    matchingValueEClass = createEClass(MATCHING_VALUE);
    createEAttribute(matchingValueEClass, MATCHING_VALUE__NAME);

    rangeEClass = createEClass(RANGE);
    createEAttribute(rangeEClass, RANGE__RANGE_DEF);
    createEAttribute(rangeEClass, RANGE__MIN);
    createEAttribute(rangeEClass, RANGE__MAX);
    createEAttribute(rangeEClass, RANGE__CLOUSURE);
    createEAttribute(rangeEClass, RANGE__MIN_INFINITY);
    createEAttribute(rangeEClass, RANGE__MAX_INFINITY);

    dateRangeEClass = createEClass(DATE_RANGE);
    createEAttribute(dateRangeEClass, DATE_RANGE__RANGE_DEF);
    createEAttribute(dateRangeEClass, DATE_RANGE__MIN);
    createEAttribute(dateRangeEClass, DATE_RANGE__MAX);
    createEAttribute(dateRangeEClass, DATE_RANGE__CLOUSURE);

    specialValuesEClass = createEClass(SPECIAL_VALUES);
    createEAttribute(specialValuesEClass, SPECIAL_VALUES__SPECIAL_VALUES_DEF);
    createEAttribute(specialValuesEClass, SPECIAL_VALUES__SPECIAL_TYPE);

    imputeTypeEClass = createEClass(IMPUTE_TYPE);

    derivedValueEClass = createEClass(DERIVED_VALUE);
    createEAttribute(derivedValueEClass, DERIVED_VALUE__IMP_NAME);
    createEAttribute(derivedValueEClass, DERIVED_VALUE__DERIVED_VALUE_DEF);
    createEAttribute(derivedValueEClass, DERIVED_VALUE__TYPE);
    createEAttribute(derivedValueEClass, DERIVED_VALUE__IMPUTE_VALUE);

    numOpEClass = createEClass(NUM_OP);
    createEAttribute(numOpEClass, NUM_OP__IMP_NAME);
    createEAttribute(numOpEClass, NUM_OP__NUM_OP_DEF);
    createEAttribute(numOpEClass, NUM_OP__OPERATION);
    createEAttribute(numOpEClass, NUM_OP__IMPUTE_VALUE);

    castTypeEClass = createEClass(CAST_TYPE);
    createEAttribute(castTypeEClass, CAST_TYPE__IMP_NAME);
    createEAttribute(castTypeEClass, CAST_TYPE__CAST_TYPE_DEF);
    createEAttribute(castTypeEClass, CAST_TYPE__TYPE);

    dataDictionaryEClass = createEClass(DATA_DICTIONARY);
    createEAttribute(dataDictionaryEClass, DATA_DICTIONARY__DATA_DICTIONARY_DEFINITION);
    createEAttribute(dataDictionaryEClass, DATA_DICTIONARY__FILE_NAME);
    createEReference(dataDictionaryEClass, DATA_DICTIONARY__DATAFIELD);

    dataFieldEClass = createEClass(DATA_FIELD);
    createEAttribute(dataFieldEClass, DATA_FIELD__ID);
    createEAttribute(dataFieldEClass, DATA_FIELD__DATA_TYPE);
    createEAttribute(dataFieldEClass, DATA_FIELD__TARGET);
    createEAttribute(dataFieldEClass, DATA_FIELD__DISPLAY_NAME);
    createEReference(dataFieldEClass, DATA_FIELD__VALID_VALUES);
    createEReference(dataFieldEClass, DATA_FIELD__INVALID_VALUES);
    createEReference(dataFieldEClass, DATA_FIELD__MISSING_VALUES);

    categoricalEClass = createEClass(CATEGORICAL);
    createEAttribute(categoricalEClass, CATEGORICAL__CATEGORICAL_DEF);
    createEAttribute(categoricalEClass, CATEGORICAL__ORDINAL);

    continuousEClass = createEClass(CONTINUOUS);
    createEAttribute(continuousEClass, CONTINUOUS__CONTINUOUS_DEF);
    createEAttribute(continuousEClass, CONTINUOUS__NUM_DECIMALS);
    createEReference(continuousEClass, CONTINUOUS__INTERVAL);

    dateEClass = createEClass(DATE);
    createEAttribute(dateEClass, DATE__DATE_DEF);
    createEAttribute(dateEClass, DATE__FORMAT);
    createEReference(dateEClass, DATE__INTERVALDATE);

    intervalEClass = createEClass(INTERVAL);
    createEAttribute(intervalEClass, INTERVAL__LEFT_MARGIN);
    createEAttribute(intervalEClass, INTERVAL__RIGHT_MARGIN);
    createEAttribute(intervalEClass, INTERVAL__CLOUSURE);

    intervalDateEClass = createEClass(INTERVAL_DATE);
    createEAttribute(intervalDateEClass, INTERVAL_DATE__LEFT_MARGIN);
    createEAttribute(intervalDateEClass, INTERVAL_DATE__RIGHT_MARGIN);
    createEAttribute(intervalDateEClass, INTERVAL_DATE__CLOUSURE);

    valueFieldEClass = createEClass(VALUE_FIELD);
    createEAttribute(valueFieldEClass, VALUE_FIELD__VALUE);
    createEAttribute(valueFieldEClass, VALUE_FIELD__COUNT);

    contractEClass = createEClass(CONTRACT);
    createEAttribute(contractEClass, CONTRACT__NAME);
    createEAttribute(contractEClass, CONTRACT__CONTRACT_DEFINITION);
    createEAttribute(contractEClass, CONTRACT__CONTRACT);

    environmentEClass = createEClass(ENVIRONMENT);
    createEAttribute(environmentEClass, ENVIRONMENT__NAME);
    createEAttribute(environmentEClass, ENVIRONMENT__PATH);
    createEReference(environmentEClass, ENVIRONMENT__STORAGE);
    createEAttribute(environmentEClass, ENVIRONMENT__CONTAINER_NAME);
    createEReference(environmentEClass, ENVIRONMENT__DEVELOPMENT_TOOL);
    createEAttribute(environmentEClass, ENVIRONMENT__IMAGE_NAME);
    createEAttribute(environmentEClass, ENVIRONMENT__IMAGE_TAG);

    localEClass = createEClass(LOCAL);

    azureCIEClass = createEClass(AZURE_CI);
    createEAttribute(azureCIEClass, AZURE_CI__ACR_NAME);
    createEAttribute(azureCIEClass, AZURE_CI__KEY_VAULT_NAME);
    createEAttribute(azureCIEClass, AZURE_CI__SECRET_NAME);
    createEAttribute(azureCIEClass, AZURE_CI__BLOB_NAME);

    amazonECSEClass = createEClass(AMAZON_ECS);
    createEAttribute(amazonECSEClass, AMAZON_ECS__SECRET_ID);
    createEAttribute(amazonECSEClass, AMAZON_ECS__REGION);
    createEAttribute(amazonECSEClass, AMAZON_ECS__KEY);

    developmentToolEClass = createEClass(DEVELOPMENT_TOOL);
    createEAttribute(developmentToolEClass, DEVELOPMENT_TOOL__VERSION);
    createEAttribute(developmentToolEClass, DEVELOPMENT_TOOL__TOOL);

    storageEClass = createEClass(STORAGE);
    createEAttribute(storageEClass, STORAGE__STORAGE_NAME);

    databaseEClass = createEClass(DATABASE);
    createEAttribute(databaseEClass, DATABASE__HOST);
    createEAttribute(databaseEClass, DATABASE__PORT);
    createEAttribute(databaseEClass, DATABASE__TYPE);
    createEReference(databaseEClass, DATABASE__AUTH);
    createEAttribute(databaseEClass, DATABASE__DB_NAME);
    createEReference(databaseEClass, DATABASE__TABLE);

    authenticationEClass = createEClass(AUTHENTICATION);

    credentialsEClass = createEClass(CREDENTIALS);
    createEAttribute(credentialsEClass, CREDENTIALS__USERNAME);
    createEAttribute(credentialsEClass, CREDENTIALS__PASSWD);

    sslEClass = createEClass(SSL);
    createEAttribute(sslEClass, SSL__PATH_SSLCERT);
    createEAttribute(sslEClass, SSL__PATH_SSLKEY);
    createEAttribute(sslEClass, SSL__PATH_SSLROOTCERT);

    oAuth2EClass = createEClass(OAUTH2);
    createEAttribute(oAuth2EClass, OAUTH2__CLIENT_ID);
    createEAttribute(oAuth2EClass, OAUTH2__CLIENT_SECRET);
    createEAttribute(oAuth2EClass, OAUTH2__TOKEN_URL);
    createEAttribute(oAuth2EClass, OAUTH2__ACCESS_TOKEN);
    createEAttribute(oAuth2EClass, OAUTH2__SCOPE);

    awsEClass = createEClass(AWS);
    createEAttribute(awsEClass, AWS__REGION);
    createEAttribute(awsEClass, AWS__ACCESS_KEY);
    createEAttribute(awsEClass, AWS__ENDPOINT_URL);
    createEAttribute(awsEClass, AWS__SECRET_ID);

    sourceEClass = createEClass(SOURCE);
    createEReference(sourceEClass, SOURCE__DATA_DICTIONARY);

    fileEClass = createEClass(FILE);
    createEAttribute(fileEClass, FILE__TYPE);
    createEAttribute(fileEClass, FILE__CSV_SEP);
    createEAttribute(fileEClass, FILE__HDF5_KEY);
    createEAttribute(fileEClass, FILE__CSV_THOUSANDS_SEP);
    createEAttribute(fileEClass, FILE__CSV_DECIMAL_SEP);

    tableEClass = createEClass(TABLE);

    folderEClass = createEClass(FOLDER);

    localFolderEClass = createEClass(LOCAL_FOLDER);
    createEAttribute(localFolderEClass, LOCAL_FOLDER__FOLDER_PATH);
    createEReference(localFolderEClass, LOCAL_FOLDER__FILE);

    amazonS3EClass = createEClass(AMAZON_S3);
    createEAttribute(amazonS3EClass, AMAZON_S3__FOLDER_PATH);
    createEReference(amazonS3EClass, AMAZON_S3__FILE);
    createEAttribute(amazonS3EClass, AMAZON_S3__BUCKET);
    createEAttribute(amazonS3EClass, AMAZON_S3__REGION);
    createEAttribute(amazonS3EClass, AMAZON_S3__SECRET_ID);

    azureBlobEClass = createEClass(AZURE_BLOB);
    createEAttribute(azureBlobEClass, AZURE_BLOB__FOLDER_PATH);
    createEReference(azureBlobEClass, AZURE_BLOB__FILE);
    createEAttribute(azureBlobEClass, AZURE_BLOB__CONTAINER);
    createEAttribute(azureBlobEClass, AZURE_BLOB__KEY_VAULT_NAME);
    createEAttribute(azureBlobEClass, AZURE_BLOB__SECRET_NAME);

    // Create enums
    libDataTypeEEnum = createEEnum(LIB_DATA_TYPE);
    dataTypeEEnum = createEEnum(DATA_TYPE);
    closureTypeEEnum = createEEnum(CLOSURE_TYPE);
    operationEEnum = createEEnum(OPERATION);
    derivedTypeEEnum = createEEnum(DERIVED_TYPE);
    specialValueEEnum = createEEnum(SPECIAL_VALUE);
    operatorEEnum = createEEnum(OPERATOR);
    filterTypeEEnum = createEEnum(FILTER_TYPE);
    mapOperationEEnum = createEEnum(MAP_OPERATION);
    mathOperatorEEnum = createEEnum(MATH_OPERATOR);
    toolEEnum = createEEnum(TOOL);
    dbtypeEEnum = createEEnum(DBTYPE);
    fileTypeEEnum = createEEnum(FILE_TYPE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    dataProcessingEClass.getESuperTypes().add(this.getProcessingStep());
    pmmlModelEClass.getESuperTypes().add(this.getProcessingStep());
    mapEClass.getESuperTypes().add(this.getParameter());
    primitiveEClass.getESuperTypes().add(this.getParameter());
    derivedFieldEClass.getESuperTypes().add(this.getParameter());
    filterValueEClass.getESuperTypes().add(this.getParameter());
    discretizeBinEClass.getESuperTypes().add(this.getParameter());
    fieldRangeEClass.getESuperTypes().add(this.getParameter());
    mathOpEClass.getESuperTypes().add(this.getParameter());
    joinEClass.getESuperTypes().add(this.getParameter());
    fieldEClass.getESuperTypes().add(this.getOperand());
    fixValueEClass.getESuperTypes().add(this.getOperand());
    fixValueEClass.getESuperTypes().add(this.getImputeType());
    rangeEClass.getESuperTypes().add(this.getMatchingValue());
    dateRangeEClass.getESuperTypes().add(this.getMatchingValue());
    specialValuesEClass.getESuperTypes().add(this.getMatchingValue());
    imputeTypeEClass.getESuperTypes().add(this.getParameter());
    derivedValueEClass.getESuperTypes().add(this.getImputeType());
    numOpEClass.getESuperTypes().add(this.getImputeType());
    castTypeEClass.getESuperTypes().add(this.getParameter());
    dataDictionaryEClass.getESuperTypes().add(this.getArgument());
    dataFieldEClass.getESuperTypes().add(this.getArgument());
    categoricalEClass.getESuperTypes().add(this.getDataField());
    continuousEClass.getESuperTypes().add(this.getDataField());
    dateEClass.getESuperTypes().add(this.getDataField());
    localEClass.getESuperTypes().add(this.getEnvironment());
    azureCIEClass.getESuperTypes().add(this.getEnvironment());
    amazonECSEClass.getESuperTypes().add(this.getEnvironment());
    databaseEClass.getESuperTypes().add(this.getStorage());
    credentialsEClass.getESuperTypes().add(this.getAuthentication());
    sslEClass.getESuperTypes().add(this.getAuthentication());
    oAuth2EClass.getESuperTypes().add(this.getAuthentication());
    awsEClass.getESuperTypes().add(this.getAuthentication());
    fileEClass.getESuperTypes().add(this.getSource());
    tableEClass.getESuperTypes().add(this.getSource());
    localFolderEClass.getESuperTypes().add(this.getStorage());
    localFolderEClass.getESuperTypes().add(this.getFolder());
    amazonS3EClass.getESuperTypes().add(this.getStorage());
    amazonS3EClass.getESuperTypes().add(this.getFolder());
    azureBlobEClass.getESuperTypes().add(this.getStorage());
    azureBlobEClass.getESuperTypes().add(this.getFolder());

    // Initialize classes and features; add operations and parameters
    initEClass(workflowEClass, Workflow.class, "Workflow", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getWorkflow_Name(), ecorePackage.getEString(), "name", null, 0, 1, Workflow.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getWorkflow_Environment(), this.getEnvironment(), null, "environment", null, 0, 1, Workflow.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getWorkflow_Dataprocessing(), this.getProcessingStep(), null, "dataprocessing", null, 0, -1, Workflow.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getWorkflow_Link(), this.getLink(), null, "link", null, 0, -1, Workflow.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(processingStepEClass, ProcessingStep.class, "ProcessingStep", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getProcessingStep_Name(), ecorePackage.getEString(), "name", null, 0, 1, ProcessingStep.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getProcessingStep_DataProcessingDefinition(), ecorePackage.getEString(), "dataProcessingDefinition", null, 0, 1, ProcessingStep.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getProcessingStep_Origin_function(), ecorePackage.getEString(), "origin_function", null, 0, 1, ProcessingStep.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getProcessingStep_InputPort(), this.getDataDictionary(), null, "inputPort", null, 0, -1, ProcessingStep.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getProcessingStep_OutputPort(), this.getDataDictionary(), null, "outputPort", null, 0, -1, ProcessingStep.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getProcessingStep_In(), this.getArgument(), null, "in", null, 0, -1, ProcessingStep.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getProcessingStep_Out(), this.getArgument(), null, "out", null, 0, -1, ProcessingStep.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dataProcessingEClass, DataProcessing.class, "DataProcessing", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDataProcessing_Parameter(), this.getParameter(), null, "parameter", null, 0, -1, DataProcessing.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDataProcessing_Contract(), this.getContract(), null, "contract", null, 0, -1, DataProcessing.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDataProcessing_Initial_accumulated_processing(), this.getDataProcessing(), null, "initial_accumulated_processing", null, 0, 1, DataProcessing.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(pmmlModelEClass, PMMLModel.class, "PMMLModel", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPMMLModel_FilePath(), ecorePackage.getEString(), "filePath", null, 0, 1, PMMLModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPMMLModel_OnlyPredictions(), ecorePackage.getEBoolean(), "onlyPredictions", null, 0, 1, PMMLModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPMMLModel_Test(), this.getTest(), null, "test", null, 0, 1, PMMLModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(testEClass, Test.class, "Test", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTest_Path(), ecorePackage.getEString(), "path", null, 0, 1, Test.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getTest_TrainSize(), ecorePackage.getEFloat(), "trainSize", null, 0, 1, Test.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getTest_TestSize(), ecorePackage.getEFloat(), "testSize", null, 0, 1, Test.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(linkEClass, Link.class, "Link", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLink_Name(), ecorePackage.getEString(), "name", null, 0, 1, Link.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLink_Source(), this.getProcessingStep(), null, "source", null, 0, 1, Link.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLink_Target(), this.getProcessingStep(), null, "target", null, 0, 1, Link.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(argumentEClass, Argument.class, "Argument", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getArgument_Name(), ecorePackage.getEString(), "name", null, 0, 1, Argument.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(parameterEClass, Parameter.class, "Parameter", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(mapEClass, Map.class, "Map", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMap_Name(), ecorePackage.getEString(), "name", null, 0, 1, Map.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getMap_MapDefinition(), ecorePackage.getEString(), "mapDefinition", null, 0, 1, Map.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getMap_InValue(), ecorePackage.getEString(), "inValue", null, 0, 1, Map.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getMap_Outvalue(), ecorePackage.getEString(), "outvalue", null, 0, 1, Map.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getMap_MapOperation(), this.getMapOperation(), "mapOperation", null, 0, 1, Map.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(primitiveEClass, Primitive.class, "Primitive", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPrimitive_Name(), ecorePackage.getEString(), "name", null, 0, 1, Primitive.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPrimitive_PrimitiveDef(), ecorePackage.getEString(), "primitiveDef", null, 0, 1, Primitive.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPrimitive_Value(), ecorePackage.getEString(), "value", null, 0, 1, Primitive.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPrimitive_DataType(), this.getLibDataType(), "dataType", null, 0, 1, Primitive.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(derivedFieldEClass, DerivedField.class, "DerivedField", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDerivedField_Name(), ecorePackage.getEString(), "name", null, 0, 1, DerivedField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDerivedField_DerivedFieldDef(), ecorePackage.getEString(), "derivedFieldDef", null, 0, 1, DerivedField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDerivedField_Der_dataField(), this.getDataField(), null, "der_dataField", null, 0, 1, DerivedField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(filterValueEClass, FilterValue.class, "FilterValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFilterValue_Name(), ecorePackage.getEString(), "name", null, 0, 1, FilterValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFilterValue_FilterValueDef(), ecorePackage.getEString(), "filterValueDef", null, 0, 1, FilterValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFilterValue_Primitive(), this.getPrimitive(), null, "primitive", null, 0, -1, FilterValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFilterValue_Matchingvalue(), this.getMatchingValue(), null, "matchingvalue", null, 0, -1, FilterValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFilterValue_FilterType(), this.getFilterType(), "filterType", null, 0, 1, FilterValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(discretizeBinEClass, DiscretizeBin.class, "DiscretizeBin", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDiscretizeBin_Name(), ecorePackage.getEString(), "name", null, 0, 1, DiscretizeBin.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDiscretizeBin_DiscretizeBinDef(), ecorePackage.getEString(), "discretizeBinDef", null, 0, 1, DiscretizeBin.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDiscretizeBin_BinValue(), ecorePackage.getEString(), "binValue", null, 0, 1, DiscretizeBin.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDiscretizeBin_Interval(), this.getInterval(), null, "interval", null, 0, -1, DiscretizeBin.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fieldRangeEClass, FieldRange.class, "FieldRange", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFieldRange_Name(), ecorePackage.getEString(), "name", null, 0, 1, FieldRange.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFieldRange_FieldDef(), ecorePackage.getEString(), "fieldDef", null, 0, 1, FieldRange.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFieldRange_DataField(), this.getDataField(), null, "dataField", null, 0, -1, FieldRange.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFieldRange_Operator(), this.getOperator(), "operator", null, 0, 1, FieldRange.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(mathOpEClass, MathOp.class, "MathOp", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMathOp_Name(), ecorePackage.getEString(), "name", null, 0, 1, MathOp.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getMathOp_MathOpDef(), ecorePackage.getEString(), "mathOpDef", null, 0, 1, MathOp.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getMathOp_Operator(), this.getMathOperator(), "operator", null, 0, 1, MathOp.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMathOp_Operand(), this.getOperand(), null, "operand", null, 0, -1, MathOp.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(joinEClass, Join.class, "Join", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getJoin_Name(), ecorePackage.getEString(), "name", null, 0, 1, Join.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getJoin_JoinDef(), ecorePackage.getEString(), "joinDef", null, 0, 1, Join.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getJoin_Operand(), this.getOperand(), null, "operand", null, 0, -1, Join.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(operandEClass, Operand.class, "Operand", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getOperand_Name(), ecorePackage.getEString(), "name", null, 0, 1, Operand.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fieldEClass, Field.class, "Field", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getField_FieldDef(), ecorePackage.getEString(), "fieldDef", null, 0, 1, Field.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getField_Datafield(), this.getDataField(), null, "datafield", null, 0, 1, Field.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fixValueEClass, FixValue.class, "FixValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFixValue_FixValueDef(), ecorePackage.getEString(), "fixValueDef", null, 0, 1, FixValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFixValue_Value(), this.getPrimitive(), null, "value", null, 0, 1, FixValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(matchingValueEClass, MatchingValue.class, "MatchingValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMatchingValue_Name(), ecorePackage.getEString(), "name", null, 0, 1, MatchingValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(rangeEClass, Range.class, "Range", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRange_RangeDef(), ecorePackage.getEString(), "rangeDef", null, 0, 1, Range.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRange_Min(), ecorePackage.getEFloat(), "min", null, 0, 1, Range.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRange_Max(), ecorePackage.getEFloat(), "max", null, 0, 1, Range.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRange_Clousure(), this.getClosureType(), "clousure", null, 0, 1, Range.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRange_MinInfinity(), ecorePackage.getEBoolean(), "minInfinity", null, 0, 1, Range.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRange_MaxInfinity(), ecorePackage.getEBoolean(), "maxInfinity", null, 0, 1, Range.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dateRangeEClass, DateRange.class, "DateRange", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDateRange_RangeDef(), ecorePackage.getEString(), "rangeDef", null, 0, 1, DateRange.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDateRange_Min(), ecorePackage.getEString(), "min", null, 0, 1, DateRange.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDateRange_Max(), ecorePackage.getEString(), "max", null, 0, 1, DateRange.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDateRange_Clousure(), this.getClosureType(), "clousure", null, 0, 1, DateRange.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(specialValuesEClass, SpecialValues.class, "SpecialValues", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSpecialValues_SpecialValuesDef(), ecorePackage.getEString(), "specialValuesDef", null, 0, 1, SpecialValues.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSpecialValues_SpecialType(), this.getSpecialValue(), "specialType", null, 0, 1, SpecialValues.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(imputeTypeEClass, ImputeType.class, "ImputeType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(derivedValueEClass, DerivedValue.class, "DerivedValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDerivedValue_Imp_name(), ecorePackage.getEString(), "imp_name", null, 0, 1, DerivedValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDerivedValue_DerivedValueDef(), ecorePackage.getEString(), "derivedValueDef", null, 0, 1, DerivedValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDerivedValue_Type(), this.getDerivedType(), "type", null, 0, 1, DerivedValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDerivedValue_ImputeValue(), this.getSpecialValue(), "imputeValue", null, 0, 1, DerivedValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(numOpEClass, NumOp.class, "NumOp", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getNumOp_Imp_name(), ecorePackage.getEString(), "imp_name", null, 0, 1, NumOp.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getNumOp_NumOpDef(), ecorePackage.getEString(), "numOpDef", null, 0, 1, NumOp.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getNumOp_Operation(), this.getOperation(), "operation", null, 0, 1, NumOp.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getNumOp_ImputeValue(), this.getSpecialValue(), "imputeValue", null, 0, 1, NumOp.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(castTypeEClass, CastType.class, "CastType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCastType_Imp_name(), ecorePackage.getEString(), "imp_name", null, 0, 1, CastType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCastType_CastTypeDef(), ecorePackage.getEString(), "castTypeDef", null, 0, 1, CastType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCastType_Type(), this.getDataType(), "type", null, 0, 1, CastType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dataDictionaryEClass, DataDictionary.class, "DataDictionary", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDataDictionary_DataDictionaryDefinition(), ecorePackage.getEString(), "dataDictionaryDefinition", null, 0, 1, DataDictionary.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDataDictionary_FileName(), ecorePackage.getEString(), "fileName", null, 0, 1, DataDictionary.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDataDictionary_Datafield(), this.getDataField(), null, "datafield", null, 0, -1, DataDictionary.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dataFieldEClass, DataField.class, "DataField", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDataField_Id(), ecorePackage.getEBoolean(), "id", null, 0, 1, DataField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDataField_DataType(), this.getDataType(), "dataType", null, 0, 1, DataField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDataField_Target(), ecorePackage.getEBoolean(), "target", null, 0, 1, DataField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDataField_DisplayName(), ecorePackage.getEString(), "displayName", null, 0, 1, DataField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDataField_ValidValues(), this.getValueField(), null, "validValues", null, 0, -1, DataField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDataField_InvalidValues(), this.getValueField(), null, "invalidValues", null, 0, -1, DataField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDataField_MissingValues(), this.getValueField(), null, "missingValues", null, 0, -1, DataField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(categoricalEClass, Categorical.class, "Categorical", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCategorical_CategoricalDef(), ecorePackage.getEString(), "categoricalDef", null, 0, 1, Categorical.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCategorical_Ordinal(), ecorePackage.getEBoolean(), "ordinal", null, 0, 1, Categorical.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(continuousEClass, Continuous.class, "Continuous", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getContinuous_ContinuousDef(), ecorePackage.getEString(), "continuousDef", null, 0, 1, Continuous.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getContinuous_NumDecimals(), ecorePackage.getEInt(), "numDecimals", null, 0, 1, Continuous.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getContinuous_Interval(), this.getInterval(), null, "interval", null, 0, -1, Continuous.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dateEClass, Date.class, "Date", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDate_DateDef(), ecorePackage.getEString(), "dateDef", null, 0, 1, Date.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDate_Format(), ecorePackage.getEString(), "format", null, 0, 1, Date.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDate_Intervaldate(), this.getIntervalDate(), null, "intervaldate", null, 0, -1, Date.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(intervalEClass, Interval.class, "Interval", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getInterval_LeftMargin(), ecorePackage.getEFloat(), "leftMargin", null, 0, 1, Interval.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getInterval_RightMargin(), ecorePackage.getEFloat(), "rightMargin", null, 0, 1, Interval.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getInterval_Clousure(), this.getClosureType(), "clousure", null, 0, 1, Interval.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(intervalDateEClass, IntervalDate.class, "IntervalDate", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getIntervalDate_LeftMargin(), ecorePackage.getEString(), "leftMargin", null, 0, 1, IntervalDate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getIntervalDate_RightMargin(), ecorePackage.getEString(), "rightMargin", null, 0, 1, IntervalDate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getIntervalDate_Clousure(), this.getClosureType(), "clousure", null, 0, 1, IntervalDate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(valueFieldEClass, ValueField.class, "ValueField", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getValueField_Value(), ecorePackage.getEString(), "value", null, 0, 1, ValueField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getValueField_Count(), ecorePackage.getEInt(), "count", null, 0, 1, ValueField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(contractEClass, Contract.class, "Contract", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getContract_Name(), ecorePackage.getEString(), "name", null, 0, 1, Contract.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getContract_ContractDefinition(), ecorePackage.getEString(), "contractDefinition", null, 0, 1, Contract.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getContract_Contract(), ecorePackage.getEString(), "contract", null, 0, 1, Contract.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(environmentEClass, Environment.class, "Environment", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEnvironment_Name(), ecorePackage.getEString(), "name", null, 0, 1, Environment.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEnvironment_Path(), ecorePackage.getEString(), "path", null, 0, 1, Environment.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEnvironment_Storage(), this.getStorage(), null, "storage", null, 0, -1, Environment.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEnvironment_ContainerName(), ecorePackage.getEString(), "containerName", null, 0, 1, Environment.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEnvironment_DevelopmentTool(), this.getDevelopmentTool(), null, "developmentTool", null, 0, 1, Environment.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEnvironment_ImageName(), ecorePackage.getEString(), "imageName", null, 0, 1, Environment.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEnvironment_ImageTag(), ecorePackage.getEString(), "imageTag", null, 0, 1, Environment.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(localEClass, Local.class, "Local", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(azureCIEClass, AzureCI.class, "AzureCI", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAzureCI_AcrName(), ecorePackage.getEString(), "acrName", null, 0, 1, AzureCI.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAzureCI_KeyVaultName(), ecorePackage.getEString(), "keyVaultName", null, 0, 1, AzureCI.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAzureCI_SecretName(), ecorePackage.getEString(), "secretName", null, 0, 1, AzureCI.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAzureCI_BlobName(), ecorePackage.getEString(), "blobName", null, 0, 1, AzureCI.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(amazonECSEClass, AmazonECS.class, "AmazonECS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAmazonECS_SecretId(), ecorePackage.getEString(), "secretId", null, 0, 1, AmazonECS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAmazonECS_Region(), ecorePackage.getEString(), "region", null, 0, 1, AmazonECS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAmazonECS_Key(), ecorePackage.getEString(), "key", null, 0, 1, AmazonECS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(developmentToolEClass, DevelopmentTool.class, "DevelopmentTool", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDevelopmentTool_Version(), ecorePackage.getEString(), "version", null, 0, 1, DevelopmentTool.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDevelopmentTool_Tool(), this.getTOOL(), "tool", null, 0, 1, DevelopmentTool.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(storageEClass, Storage.class, "Storage", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getStorage_StorageName(), ecorePackage.getEString(), "storageName", null, 0, 1, Storage.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(databaseEClass, Database.class, "Database", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDatabase_Host(), ecorePackage.getEString(), "host", null, 0, 1, Database.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDatabase_Port(), ecorePackage.getEString(), "port", null, 0, 1, Database.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDatabase_Type(), this.getDBTYPE(), "type", null, 0, 1, Database.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDatabase_Auth(), this.getAuthentication(), null, "auth", null, 0, 1, Database.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDatabase_DbName(), ecorePackage.getEString(), "dbName", null, 0, 1, Database.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDatabase_Table(), this.getTable(), null, "table", null, 0, -1, Database.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(authenticationEClass, Authentication.class, "Authentication", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(credentialsEClass, Credentials.class, "Credentials", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCredentials_Username(), ecorePackage.getEString(), "username", null, 0, 1, Credentials.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCredentials_Passwd(), ecorePackage.getEString(), "passwd", null, 0, 1, Credentials.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(sslEClass, xtext.workflow.SSL.class, "SSL", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSSL_Path_sslcert(), ecorePackage.getEString(), "path_sslcert", null, 0, 1, xtext.workflow.SSL.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSSL_Path_sslkey(), ecorePackage.getEString(), "path_sslkey", null, 0, 1, xtext.workflow.SSL.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSSL_Path_sslrootcert(), ecorePackage.getEString(), "path_sslrootcert", null, 0, 1, xtext.workflow.SSL.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(oAuth2EClass, OAuth2.class, "OAuth2", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getOAuth2_ClientId(), ecorePackage.getEString(), "clientId", null, 0, 1, OAuth2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getOAuth2_ClientSecret(), ecorePackage.getEString(), "clientSecret", null, 0, 1, OAuth2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getOAuth2_TokenUrl(), ecorePackage.getEString(), "tokenUrl", null, 0, 1, OAuth2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getOAuth2_AccessToken(), ecorePackage.getEString(), "accessToken", null, 0, 1, OAuth2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getOAuth2_Scope(), ecorePackage.getEString(), "scope", null, 0, 1, OAuth2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(awsEClass, xtext.workflow.AWS.class, "AWS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAWS_Region(), ecorePackage.getEString(), "region", null, 0, 1, xtext.workflow.AWS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAWS_AccessKey(), ecorePackage.getEString(), "accessKey", null, 0, 1, xtext.workflow.AWS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAWS_EndpointURL(), ecorePackage.getEString(), "endpointURL", null, 0, 1, xtext.workflow.AWS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAWS_SecretId(), ecorePackage.getEString(), "secretId", null, 0, 1, xtext.workflow.AWS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(sourceEClass, Source.class, "Source", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSource_DataDictionary(), this.getDataDictionary(), null, "dataDictionary", null, 0, 1, Source.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fileEClass, File.class, "File", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFile_Type(), this.getFileType(), "type", null, 0, 1, File.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFile_Csv_sep(), ecorePackage.getEString(), "csv_sep", null, 0, 1, File.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFile_Hdf5_key(), ecorePackage.getEString(), "hdf5_key", null, 0, 1, File.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFile_Csv_thousandsSep(), ecorePackage.getEString(), "csv_thousandsSep", null, 0, 1, File.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFile_Csv_decimalSep(), ecorePackage.getEString(), "csv_decimalSep", null, 0, 1, File.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(tableEClass, Table.class, "Table", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(folderEClass, Folder.class, "Folder", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(localFolderEClass, LocalFolder.class, "LocalFolder", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLocalFolder_FolderPath(), ecorePackage.getEString(), "folderPath", null, 0, 1, LocalFolder.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLocalFolder_File(), this.getFile(), null, "file", null, 0, -1, LocalFolder.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(amazonS3EClass, AmazonS3.class, "AmazonS3", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAmazonS3_FolderPath(), ecorePackage.getEString(), "folderPath", null, 0, 1, AmazonS3.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAmazonS3_File(), this.getFile(), null, "file", null, 0, -1, AmazonS3.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAmazonS3_Bucket(), ecorePackage.getEString(), "bucket", null, 0, 1, AmazonS3.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAmazonS3_Region(), ecorePackage.getEString(), "region", null, 0, 1, AmazonS3.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAmazonS3_SecretId(), ecorePackage.getEString(), "secretId", null, 0, 1, AmazonS3.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(azureBlobEClass, AzureBlob.class, "AzureBlob", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAzureBlob_FolderPath(), ecorePackage.getEString(), "folderPath", null, 0, 1, AzureBlob.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAzureBlob_File(), this.getFile(), null, "file", null, 0, -1, AzureBlob.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAzureBlob_Container(), ecorePackage.getEString(), "container", null, 0, 1, AzureBlob.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAzureBlob_KeyVaultName(), ecorePackage.getEString(), "keyVaultName", null, 0, 1, AzureBlob.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAzureBlob_SecretName(), ecorePackage.getEString(), "secretName", null, 0, 1, AzureBlob.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Initialize enums and add enum literals
    initEEnum(libDataTypeEEnum, LibDataType.class, "LibDataType");
    addEEnumLiteral(libDataTypeEEnum, LibDataType.STRING);
    addEEnumLiteral(libDataTypeEEnum, LibDataType.TIME);
    addEEnumLiteral(libDataTypeEEnum, LibDataType.INTEGER);
    addEEnumLiteral(libDataTypeEEnum, LibDataType.DATE_TIME);
    addEEnumLiteral(libDataTypeEEnum, LibDataType.BOOLEAN);
    addEEnumLiteral(libDataTypeEEnum, LibDataType.DOUBLE);
    addEEnumLiteral(libDataTypeEEnum, LibDataType.FLOAT);
    addEEnumLiteral(libDataTypeEEnum, LibDataType.DATE);

    initEEnum(dataTypeEEnum, DataType.class, "DataType");
    addEEnumLiteral(dataTypeEEnum, DataType.STRING);
    addEEnumLiteral(dataTypeEEnum, DataType.TIME);
    addEEnumLiteral(dataTypeEEnum, DataType.INTEGER);
    addEEnumLiteral(dataTypeEEnum, DataType.DATE_TIME);
    addEEnumLiteral(dataTypeEEnum, DataType.BOOLEAN);
    addEEnumLiteral(dataTypeEEnum, DataType.DOUBLE);
    addEEnumLiteral(dataTypeEEnum, DataType.FLOAT);
    addEEnumLiteral(dataTypeEEnum, DataType.DATE);

    initEEnum(closureTypeEEnum, ClosureType.class, "ClosureType");
    addEEnumLiteral(closureTypeEEnum, ClosureType.OPEN_OPEN);
    addEEnumLiteral(closureTypeEEnum, ClosureType.OPEN_CLOSED);
    addEEnumLiteral(closureTypeEEnum, ClosureType.CLOSED_OPEN);
    addEEnumLiteral(closureTypeEEnum, ClosureType.CLOSED_CLOSED);

    initEEnum(operationEEnum, Operation.class, "Operation");
    addEEnumLiteral(operationEEnum, Operation.INTERPOLATION);
    addEEnumLiteral(operationEEnum, Operation.MEAN);
    addEEnumLiteral(operationEEnum, Operation.MEDIAN);
    addEEnumLiteral(operationEEnum, Operation.CLOSEST);

    initEEnum(derivedTypeEEnum, DerivedType.class, "DerivedType");
    addEEnumLiteral(derivedTypeEEnum, DerivedType.MOST_FREQUENT);
    addEEnumLiteral(derivedTypeEEnum, DerivedType.PREVIOUS);
    addEEnumLiteral(derivedTypeEEnum, DerivedType.NEXT);

    initEEnum(specialValueEEnum, SpecialValue.class, "SpecialValue");
    addEEnumLiteral(specialValueEEnum, SpecialValue.MISSING);
    addEEnumLiteral(specialValueEEnum, SpecialValue.INVALID);
    addEEnumLiteral(specialValueEEnum, SpecialValue.OUTLIER);

    initEEnum(operatorEEnum, Operator.class, "Operator");
    addEEnumLiteral(operatorEEnum, Operator.BELONG);
    addEEnumLiteral(operatorEEnum, Operator.NOTBELONG);

    initEEnum(filterTypeEEnum, FilterType.class, "FilterType");
    addEEnumLiteral(filterTypeEEnum, FilterType.EXCLUDE);
    addEEnumLiteral(filterTypeEEnum, FilterType.INCLUDE);

    initEEnum(mapOperationEEnum, MapOperation.class, "MapOperation");
    addEEnumLiteral(mapOperationEEnum, MapOperation.VALUE_MAPPING);
    addEEnumLiteral(mapOperationEEnum, MapOperation.SUBSTRING);

    initEEnum(mathOperatorEEnum, MathOperator.class, "MathOperator");
    addEEnumLiteral(mathOperatorEEnum, MathOperator.SUM);
    addEEnumLiteral(mathOperatorEEnum, MathOperator.SUBSTRACT);
    addEEnumLiteral(mathOperatorEEnum, MathOperator.MULTIPLY);
    addEEnumLiteral(mathOperatorEEnum, MathOperator.DIVIDE);

    initEEnum(toolEEnum, xtext.workflow.TOOL.class, "TOOL");
    addEEnumLiteral(toolEEnum, xtext.workflow.TOOL.PYTHON);
    addEEnumLiteral(toolEEnum, xtext.workflow.TOOL.R);
    addEEnumLiteral(toolEEnum, xtext.workflow.TOOL.KNIME);

    initEEnum(dbtypeEEnum, xtext.workflow.DBTYPE.class, "DBTYPE");
    addEEnumLiteral(dbtypeEEnum, xtext.workflow.DBTYPE.MYSQL);
    addEEnumLiteral(dbtypeEEnum, xtext.workflow.DBTYPE.POSTGRESQL);
    addEEnumLiteral(dbtypeEEnum, xtext.workflow.DBTYPE.SQLSERVER);
    addEEnumLiteral(dbtypeEEnum, xtext.workflow.DBTYPE.ORACLE);
    addEEnumLiteral(dbtypeEEnum, xtext.workflow.DBTYPE.MONGODB);
    addEEnumLiteral(dbtypeEEnum, xtext.workflow.DBTYPE.DYNAMODB);

    initEEnum(fileTypeEEnum, FileType.class, "FileType");
    addEEnumLiteral(fileTypeEEnum, FileType.CSV);
    addEEnumLiteral(fileTypeEEnum, FileType.EXCEL);
    addEEnumLiteral(fileTypeEEnum, FileType.JSON);
    addEEnumLiteral(fileTypeEEnum, FileType.PARQUET);
    addEEnumLiteral(fileTypeEEnum, FileType.FEATHER);
    addEEnumLiteral(fileTypeEEnum, FileType.HDF5);

    // Create resource
    createResource(eNS_URI);
  }

} //WorkflowPackageImpl

/**
 * generated by Xtext 2.40.0
 */
package xtext.workflow.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import xtext.workflow.AmazonECS;
import xtext.workflow.WorkflowPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Amazon ECS</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link xtext.workflow.impl.AmazonECSImpl#getSecretId <em>Secret Id</em>}</li>
 *   <li>{@link xtext.workflow.impl.AmazonECSImpl#getRegion <em>Region</em>}</li>
 *   <li>{@link xtext.workflow.impl.AmazonECSImpl#getKey <em>Key</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AmazonECSImpl extends EnvironmentImpl implements AmazonECS
{
  /**
   * The default value of the '{@link #getSecretId() <em>Secret Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSecretId()
   * @generated
   * @ordered
   */
  protected static final String SECRET_ID_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSecretId() <em>Secret Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSecretId()
   * @generated
   * @ordered
   */
  protected String secretId = SECRET_ID_EDEFAULT;

  /**
   * The default value of the '{@link #getRegion() <em>Region</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRegion()
   * @generated
   * @ordered
   */
  protected static final String REGION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getRegion() <em>Region</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRegion()
   * @generated
   * @ordered
   */
  protected String region = REGION_EDEFAULT;

  /**
   * The default value of the '{@link #getKey() <em>Key</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getKey()
   * @generated
   * @ordered
   */
  protected static final String KEY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getKey() <em>Key</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getKey()
   * @generated
   * @ordered
   */
  protected String key = KEY_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AmazonECSImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return WorkflowPackage.Literals.AMAZON_ECS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getSecretId()
  {
    return secretId;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSecretId(String newSecretId)
  {
    String oldSecretId = secretId;
    secretId = newSecretId;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowPackage.AMAZON_ECS__SECRET_ID, oldSecretId, secretId));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getRegion()
  {
    return region;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRegion(String newRegion)
  {
    String oldRegion = region;
    region = newRegion;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowPackage.AMAZON_ECS__REGION, oldRegion, region));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getKey()
  {
    return key;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setKey(String newKey)
  {
    String oldKey = key;
    key = newKey;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowPackage.AMAZON_ECS__KEY, oldKey, key));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case WorkflowPackage.AMAZON_ECS__SECRET_ID:
        return getSecretId();
      case WorkflowPackage.AMAZON_ECS__REGION:
        return getRegion();
      case WorkflowPackage.AMAZON_ECS__KEY:
        return getKey();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case WorkflowPackage.AMAZON_ECS__SECRET_ID:
        setSecretId((String)newValue);
        return;
      case WorkflowPackage.AMAZON_ECS__REGION:
        setRegion((String)newValue);
        return;
      case WorkflowPackage.AMAZON_ECS__KEY:
        setKey((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case WorkflowPackage.AMAZON_ECS__SECRET_ID:
        setSecretId(SECRET_ID_EDEFAULT);
        return;
      case WorkflowPackage.AMAZON_ECS__REGION:
        setRegion(REGION_EDEFAULT);
        return;
      case WorkflowPackage.AMAZON_ECS__KEY:
        setKey(KEY_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case WorkflowPackage.AMAZON_ECS__SECRET_ID:
        return SECRET_ID_EDEFAULT == null ? secretId != null : !SECRET_ID_EDEFAULT.equals(secretId);
      case WorkflowPackage.AMAZON_ECS__REGION:
        return REGION_EDEFAULT == null ? region != null : !REGION_EDEFAULT.equals(region);
      case WorkflowPackage.AMAZON_ECS__KEY:
        return KEY_EDEFAULT == null ? key != null : !KEY_EDEFAULT.equals(key);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (secretId: ");
    result.append(secretId);
    result.append(", region: ");
    result.append(region);
    result.append(", key: ");
    result.append(key);
    result.append(')');
    return result.toString();
  }

} //AmazonECSImpl

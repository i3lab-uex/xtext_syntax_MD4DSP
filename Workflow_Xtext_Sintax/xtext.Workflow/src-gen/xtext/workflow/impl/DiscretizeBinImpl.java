/**
 * generated by Xtext 2.40.0
 */
package xtext.workflow.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import xtext.workflow.DiscretizeBin;
import xtext.workflow.Interval;
import xtext.workflow.WorkflowPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Discretize Bin</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link xtext.workflow.impl.DiscretizeBinImpl#getName <em>Name</em>}</li>
 *   <li>{@link xtext.workflow.impl.DiscretizeBinImpl#getDiscretizeBinDef <em>Discretize Bin Def</em>}</li>
 *   <li>{@link xtext.workflow.impl.DiscretizeBinImpl#getBinValue <em>Bin Value</em>}</li>
 *   <li>{@link xtext.workflow.impl.DiscretizeBinImpl#getInterval <em>Interval</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DiscretizeBinImpl extends ParameterImpl implements DiscretizeBin
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getDiscretizeBinDef() <em>Discretize Bin Def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDiscretizeBinDef()
   * @generated
   * @ordered
   */
  protected static final String DISCRETIZE_BIN_DEF_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDiscretizeBinDef() <em>Discretize Bin Def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDiscretizeBinDef()
   * @generated
   * @ordered
   */
  protected String discretizeBinDef = DISCRETIZE_BIN_DEF_EDEFAULT;

  /**
   * The default value of the '{@link #getBinValue() <em>Bin Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBinValue()
   * @generated
   * @ordered
   */
  protected static final String BIN_VALUE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getBinValue() <em>Bin Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBinValue()
   * @generated
   * @ordered
   */
  protected String binValue = BIN_VALUE_EDEFAULT;

  /**
   * The cached value of the '{@link #getInterval() <em>Interval</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInterval()
   * @generated
   * @ordered
   */
  protected EList<Interval> interval;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DiscretizeBinImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return WorkflowPackage.Literals.DISCRETIZE_BIN;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowPackage.DISCRETIZE_BIN__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDiscretizeBinDef()
  {
    return discretizeBinDef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDiscretizeBinDef(String newDiscretizeBinDef)
  {
    String oldDiscretizeBinDef = discretizeBinDef;
    discretizeBinDef = newDiscretizeBinDef;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowPackage.DISCRETIZE_BIN__DISCRETIZE_BIN_DEF, oldDiscretizeBinDef, discretizeBinDef));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getBinValue()
  {
    return binValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBinValue(String newBinValue)
  {
    String oldBinValue = binValue;
    binValue = newBinValue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowPackage.DISCRETIZE_BIN__BIN_VALUE, oldBinValue, binValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Interval> getInterval()
  {
    if (interval == null)
    {
      interval = new EObjectContainmentEList<Interval>(Interval.class, this, WorkflowPackage.DISCRETIZE_BIN__INTERVAL);
    }
    return interval;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case WorkflowPackage.DISCRETIZE_BIN__INTERVAL:
        return ((InternalEList<?>)getInterval()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case WorkflowPackage.DISCRETIZE_BIN__NAME:
        return getName();
      case WorkflowPackage.DISCRETIZE_BIN__DISCRETIZE_BIN_DEF:
        return getDiscretizeBinDef();
      case WorkflowPackage.DISCRETIZE_BIN__BIN_VALUE:
        return getBinValue();
      case WorkflowPackage.DISCRETIZE_BIN__INTERVAL:
        return getInterval();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case WorkflowPackage.DISCRETIZE_BIN__NAME:
        setName((String)newValue);
        return;
      case WorkflowPackage.DISCRETIZE_BIN__DISCRETIZE_BIN_DEF:
        setDiscretizeBinDef((String)newValue);
        return;
      case WorkflowPackage.DISCRETIZE_BIN__BIN_VALUE:
        setBinValue((String)newValue);
        return;
      case WorkflowPackage.DISCRETIZE_BIN__INTERVAL:
        getInterval().clear();
        getInterval().addAll((Collection<? extends Interval>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case WorkflowPackage.DISCRETIZE_BIN__NAME:
        setName(NAME_EDEFAULT);
        return;
      case WorkflowPackage.DISCRETIZE_BIN__DISCRETIZE_BIN_DEF:
        setDiscretizeBinDef(DISCRETIZE_BIN_DEF_EDEFAULT);
        return;
      case WorkflowPackage.DISCRETIZE_BIN__BIN_VALUE:
        setBinValue(BIN_VALUE_EDEFAULT);
        return;
      case WorkflowPackage.DISCRETIZE_BIN__INTERVAL:
        getInterval().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case WorkflowPackage.DISCRETIZE_BIN__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case WorkflowPackage.DISCRETIZE_BIN__DISCRETIZE_BIN_DEF:
        return DISCRETIZE_BIN_DEF_EDEFAULT == null ? discretizeBinDef != null : !DISCRETIZE_BIN_DEF_EDEFAULT.equals(discretizeBinDef);
      case WorkflowPackage.DISCRETIZE_BIN__BIN_VALUE:
        return BIN_VALUE_EDEFAULT == null ? binValue != null : !BIN_VALUE_EDEFAULT.equals(binValue);
      case WorkflowPackage.DISCRETIZE_BIN__INTERVAL:
        return interval != null && !interval.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", discretizeBinDef: ");
    result.append(discretizeBinDef);
    result.append(", binValue: ");
    result.append(binValue);
    result.append(')');
    return result.toString();
  }

} //DiscretizeBinImpl

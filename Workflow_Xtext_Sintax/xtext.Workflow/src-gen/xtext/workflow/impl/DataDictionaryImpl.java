/**
 * generated by Xtext 2.39.0
 */
package xtext.workflow.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import xtext.workflow.DataDictionary;
import xtext.workflow.DataField;
import xtext.workflow.WorkflowPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Data Dictionary</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link xtext.workflow.impl.DataDictionaryImpl#getDataDictionaryDefinition <em>Data Dictionary Definition</em>}</li>
 *   <li>{@link xtext.workflow.impl.DataDictionaryImpl#getFileName <em>File Name</em>}</li>
 *   <li>{@link xtext.workflow.impl.DataDictionaryImpl#getDatafield <em>Datafield</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DataDictionaryImpl extends ArgumentImpl implements DataDictionary
{
  /**
   * The default value of the '{@link #getDataDictionaryDefinition() <em>Data Dictionary Definition</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDataDictionaryDefinition()
   * @generated
   * @ordered
   */
  protected static final String DATA_DICTIONARY_DEFINITION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDataDictionaryDefinition() <em>Data Dictionary Definition</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDataDictionaryDefinition()
   * @generated
   * @ordered
   */
  protected String dataDictionaryDefinition = DATA_DICTIONARY_DEFINITION_EDEFAULT;

  /**
   * The default value of the '{@link #getFileName() <em>File Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFileName()
   * @generated
   * @ordered
   */
  protected static final String FILE_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFileName() <em>File Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFileName()
   * @generated
   * @ordered
   */
  protected String fileName = FILE_NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getDatafield() <em>Datafield</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDatafield()
   * @generated
   * @ordered
   */
  protected EList<DataField> datafield;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DataDictionaryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return WorkflowPackage.Literals.DATA_DICTIONARY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDataDictionaryDefinition()
  {
    return dataDictionaryDefinition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDataDictionaryDefinition(String newDataDictionaryDefinition)
  {
    String oldDataDictionaryDefinition = dataDictionaryDefinition;
    dataDictionaryDefinition = newDataDictionaryDefinition;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowPackage.DATA_DICTIONARY__DATA_DICTIONARY_DEFINITION, oldDataDictionaryDefinition, dataDictionaryDefinition));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getFileName()
  {
    return fileName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFileName(String newFileName)
  {
    String oldFileName = fileName;
    fileName = newFileName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowPackage.DATA_DICTIONARY__FILE_NAME, oldFileName, fileName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<DataField> getDatafield()
  {
    if (datafield == null)
    {
      datafield = new EObjectContainmentEList<DataField>(DataField.class, this, WorkflowPackage.DATA_DICTIONARY__DATAFIELD);
    }
    return datafield;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case WorkflowPackage.DATA_DICTIONARY__DATAFIELD:
        return ((InternalEList<?>)getDatafield()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case WorkflowPackage.DATA_DICTIONARY__DATA_DICTIONARY_DEFINITION:
        return getDataDictionaryDefinition();
      case WorkflowPackage.DATA_DICTIONARY__FILE_NAME:
        return getFileName();
      case WorkflowPackage.DATA_DICTIONARY__DATAFIELD:
        return getDatafield();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case WorkflowPackage.DATA_DICTIONARY__DATA_DICTIONARY_DEFINITION:
        setDataDictionaryDefinition((String)newValue);
        return;
      case WorkflowPackage.DATA_DICTIONARY__FILE_NAME:
        setFileName((String)newValue);
        return;
      case WorkflowPackage.DATA_DICTIONARY__DATAFIELD:
        getDatafield().clear();
        getDatafield().addAll((Collection<? extends DataField>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case WorkflowPackage.DATA_DICTIONARY__DATA_DICTIONARY_DEFINITION:
        setDataDictionaryDefinition(DATA_DICTIONARY_DEFINITION_EDEFAULT);
        return;
      case WorkflowPackage.DATA_DICTIONARY__FILE_NAME:
        setFileName(FILE_NAME_EDEFAULT);
        return;
      case WorkflowPackage.DATA_DICTIONARY__DATAFIELD:
        getDatafield().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case WorkflowPackage.DATA_DICTIONARY__DATA_DICTIONARY_DEFINITION:
        return DATA_DICTIONARY_DEFINITION_EDEFAULT == null ? dataDictionaryDefinition != null : !DATA_DICTIONARY_DEFINITION_EDEFAULT.equals(dataDictionaryDefinition);
      case WorkflowPackage.DATA_DICTIONARY__FILE_NAME:
        return FILE_NAME_EDEFAULT == null ? fileName != null : !FILE_NAME_EDEFAULT.equals(fileName);
      case WorkflowPackage.DATA_DICTIONARY__DATAFIELD:
        return datafield != null && !datafield.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (dataDictionaryDefinition: ");
    result.append(dataDictionaryDefinition);
    result.append(", fileName: ");
    result.append(fileName);
    result.append(')');
    return result.toString();
  }

} //DataDictionaryImpl

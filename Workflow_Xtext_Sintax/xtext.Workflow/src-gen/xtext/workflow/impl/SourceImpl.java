/**
 * generated by Xtext 2.39.0
 */
package xtext.workflow.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import xtext.workflow.DataDictionary;
import xtext.workflow.Source;
import xtext.workflow.WorkflowPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Source</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link xtext.workflow.impl.SourceImpl#getDataDictionary <em>Data Dictionary</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SourceImpl extends MinimalEObjectImpl.Container implements Source
{
  /**
   * The cached value of the '{@link #getDataDictionary() <em>Data Dictionary</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDataDictionary()
   * @generated
   * @ordered
   */
  protected DataDictionary dataDictionary;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SourceImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return WorkflowPackage.Literals.SOURCE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DataDictionary getDataDictionary()
  {
    if (dataDictionary != null && dataDictionary.eIsProxy())
    {
      InternalEObject oldDataDictionary = (InternalEObject)dataDictionary;
      dataDictionary = (DataDictionary)eResolveProxy(oldDataDictionary);
      if (dataDictionary != oldDataDictionary)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, WorkflowPackage.SOURCE__DATA_DICTIONARY, oldDataDictionary, dataDictionary));
      }
    }
    return dataDictionary;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DataDictionary basicGetDataDictionary()
  {
    return dataDictionary;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDataDictionary(DataDictionary newDataDictionary)
  {
    DataDictionary oldDataDictionary = dataDictionary;
    dataDictionary = newDataDictionary;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowPackage.SOURCE__DATA_DICTIONARY, oldDataDictionary, dataDictionary));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case WorkflowPackage.SOURCE__DATA_DICTIONARY:
        if (resolve) return getDataDictionary();
        return basicGetDataDictionary();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case WorkflowPackage.SOURCE__DATA_DICTIONARY:
        setDataDictionary((DataDictionary)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case WorkflowPackage.SOURCE__DATA_DICTIONARY:
        setDataDictionary((DataDictionary)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case WorkflowPackage.SOURCE__DATA_DICTIONARY:
        return dataDictionary != null;
    }
    return super.eIsSet(featureID);
  }

} //SourceImpl

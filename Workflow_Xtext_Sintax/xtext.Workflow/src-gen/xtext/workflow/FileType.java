/**
 * generated by Xtext 2.39.0
 */
package xtext.workflow;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>File Type</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @see xtext.workflow.WorkflowPackage#getFileType()
 * @model
 * @generated
 */
public enum FileType implements Enumerator
{
  /**
   * The '<em><b>CSV</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #CSV_VALUE
   * @generated
   * @ordered
   */
  CSV(0, "CSV", "CSV"),

  /**
   * The '<em><b>EXCEL</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #EXCEL_VALUE
   * @generated
   * @ordered
   */
  EXCEL(1, "EXCEL", "EXCEL"),

  /**
   * The '<em><b>JSON</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #JSON_VALUE
   * @generated
   * @ordered
   */
  JSON(2, "JSON", "JSON"),

  /**
   * The '<em><b>PARQUET</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #PARQUET_VALUE
   * @generated
   * @ordered
   */
  PARQUET(3, "PARQUET", "PARQUET"),

  /**
   * The '<em><b>FEATHER</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #FEATHER_VALUE
   * @generated
   * @ordered
   */
  FEATHER(4, "FEATHER", "FEATHER"),

  /**
   * The '<em><b>HDF5</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #HDF5_VALUE
   * @generated
   * @ordered
   */
  HDF5(5, "HDF5", "HDF5");

  /**
   * The '<em><b>CSV</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #CSV
   * @model
   * @generated
   * @ordered
   */
  public static final int CSV_VALUE = 0;

  /**
   * The '<em><b>EXCEL</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #EXCEL
   * @model
   * @generated
   * @ordered
   */
  public static final int EXCEL_VALUE = 1;

  /**
   * The '<em><b>JSON</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #JSON
   * @model
   * @generated
   * @ordered
   */
  public static final int JSON_VALUE = 2;

  /**
   * The '<em><b>PARQUET</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #PARQUET
   * @model
   * @generated
   * @ordered
   */
  public static final int PARQUET_VALUE = 3;

  /**
   * The '<em><b>FEATHER</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #FEATHER
   * @model
   * @generated
   * @ordered
   */
  public static final int FEATHER_VALUE = 4;

  /**
   * The '<em><b>HDF5</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #HDF5
   * @model
   * @generated
   * @ordered
   */
  public static final int HDF5_VALUE = 5;

  /**
   * An array of all the '<em><b>File Type</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static final FileType[] VALUES_ARRAY =
    new FileType[]
    {
      CSV,
      EXCEL,
      JSON,
      PARQUET,
      FEATHER,
      HDF5,
    };

  /**
   * A public read-only list of all the '<em><b>File Type</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final List<FileType> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

  /**
   * Returns the '<em><b>File Type</b></em>' literal with the specified literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param literal the literal.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static FileType get(String literal)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      FileType result = VALUES_ARRAY[i];
      if (result.toString().equals(literal))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>File Type</b></em>' literal with the specified name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param name the name.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static FileType getByName(String name)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      FileType result = VALUES_ARRAY[i];
      if (result.getName().equals(name))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>File Type</b></em>' literal with the specified integer value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the integer value.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static FileType get(int value)
  {
    switch (value)
    {
      case CSV_VALUE: return CSV;
      case EXCEL_VALUE: return EXCEL;
      case JSON_VALUE: return JSON;
      case PARQUET_VALUE: return PARQUET;
      case FEATHER_VALUE: return FEATHER;
      case HDF5_VALUE: return HDF5;
    }
    return null;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final int value;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String name;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String literal;

  /**
   * Only this class can construct instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private FileType(int value, String name, String literal)
  {
    this.value = value;
    this.name = name;
    this.literal = literal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLiteral()
  {
    return literal;
  }

  /**
   * Returns the literal value of the enumerator, which is its string representation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    return literal;
  }
  
} //FileType

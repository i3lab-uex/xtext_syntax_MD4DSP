/*
 * generated by Xtext 2.37.0
 */
package xtext.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class WorkflowGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class WorkflowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.Workflow");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWorkflowKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cDataprocessingKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cDataprocessingAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cDataprocessingProcessingStepParserRuleCall_5_0 = (RuleCall)cDataprocessingAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cDataprocessingAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cDataprocessingProcessingStepParserRuleCall_6_1_0 = (RuleCall)cDataprocessingAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cLinkKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cLinkAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cLinkLinkParserRuleCall_8_2_0 = (RuleCall)cLinkAssignment_8_2.eContents().get(0);
		private final Group cGroup_8_3 = (Group)cGroup_8.eContents().get(3);
		private final Keyword cCommaKeyword_8_3_0 = (Keyword)cGroup_8_3.eContents().get(0);
		private final Assignment cLinkAssignment_8_3_1 = (Assignment)cGroup_8_3.eContents().get(1);
		private final RuleCall cLinkLinkParserRuleCall_8_3_1_0 = (RuleCall)cLinkAssignment_8_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8_4 = (Keyword)cGroup_8.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Workflow returns Workflow:
		//    'Workflow'
		//    name=EString
		//    '{'
		//        'dataprocessing' '{' dataprocessing+=ProcessingStep ( "," dataprocessing+=ProcessingStep)* '}'
		//        ('link' '{' link+=Link ( "," link+=Link)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Workflow'
		//name=EString
		//'{'
		//    'dataprocessing' '{' dataprocessing+=ProcessingStep ( "," dataprocessing+=ProcessingStep)* '}'
		//    ('link' '{' link+=Link ( "," link+=Link)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Workflow'
		public Keyword getWorkflowKeyword_0() { return cWorkflowKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'dataprocessing'
		public Keyword getDataprocessingKeyword_3() { return cDataprocessingKeyword_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//dataprocessing+=ProcessingStep
		public Assignment getDataprocessingAssignment_5() { return cDataprocessingAssignment_5; }
		
		//ProcessingStep
		public RuleCall getDataprocessingProcessingStepParserRuleCall_5_0() { return cDataprocessingProcessingStepParserRuleCall_5_0; }
		
		//( "," dataprocessing+=ProcessingStep)*
		public Group getGroup_6() { return cGroup_6; }
		
		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }
		
		//dataprocessing+=ProcessingStep
		public Assignment getDataprocessingAssignment_6_1() { return cDataprocessingAssignment_6_1; }
		
		//ProcessingStep
		public RuleCall getDataprocessingProcessingStepParserRuleCall_6_1_0() { return cDataprocessingProcessingStepParserRuleCall_6_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
		
		//('link' '{' link+=Link ( "," link+=Link)* '}' )?
		public Group getGroup_8() { return cGroup_8; }
		
		//'link'
		public Keyword getLinkKeyword_8_0() { return cLinkKeyword_8_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8_1() { return cLeftCurlyBracketKeyword_8_1; }
		
		//link+=Link
		public Assignment getLinkAssignment_8_2() { return cLinkAssignment_8_2; }
		
		//Link
		public RuleCall getLinkLinkParserRuleCall_8_2_0() { return cLinkLinkParserRuleCall_8_2_0; }
		
		//( "," link+=Link)*
		public Group getGroup_8_3() { return cGroup_8_3; }
		
		//","
		public Keyword getCommaKeyword_8_3_0() { return cCommaKeyword_8_3_0; }
		
		//link+=Link
		public Assignment getLinkAssignment_8_3_1() { return cLinkAssignment_8_3_1; }
		
		//Link
		public RuleCall getLinkLinkParserRuleCall_8_3_1_0() { return cLinkLinkParserRuleCall_8_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8_4() { return cRightCurlyBracketKeyword_8_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class ProcessingStepElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.ProcessingStep");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPMMLModelParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDataProcessingParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ProcessingStep returns ProcessingStep:
		//    PMMLModel | DataProcessing;
		@Override public ParserRule getRule() { return rule; }
		
		//PMMLModel | DataProcessing
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PMMLModel
		public RuleCall getPMMLModelParserRuleCall_0() { return cPMMLModelParserRuleCall_0; }
		
		//DataProcessing
		public RuleCall getDataProcessingParserRuleCall_1() { return cDataProcessingParserRuleCall_1; }
	}
	public class DataFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.DataField");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCategoricalParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cContinuousParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cDateParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//DataField returns DataField:
		//    Categorical | Continuous | Date;
		@Override public ParserRule getRule() { return rule; }
		
		//Categorical | Continuous | Date
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Categorical
		public RuleCall getCategoricalParserRuleCall_0() { return cCategoricalParserRuleCall_0; }
		
		//Continuous
		public RuleCall getContinuousParserRuleCall_1() { return cContinuousParserRuleCall_1; }
		
		//Date
		public RuleCall getDateParserRuleCall_2() { return cDateParserRuleCall_2; }
	}
	public class ArgumentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.Argument");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDataDictionaryParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cCategoricalParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cContinuousParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cDateParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//Argument returns Argument:
		//    DataDictionary | Categorical | Continuous | Date;
		@Override public ParserRule getRule() { return rule; }
		
		//DataDictionary | Categorical | Continuous | Date
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DataDictionary
		public RuleCall getDataDictionaryParserRuleCall_0() { return cDataDictionaryParserRuleCall_0; }
		
		//Categorical
		public RuleCall getCategoricalParserRuleCall_1() { return cCategoricalParserRuleCall_1; }
		
		//Continuous
		public RuleCall getContinuousParserRuleCall_2() { return cContinuousParserRuleCall_2; }
		
		//Date
		public RuleCall getDateParserRuleCall_3() { return cDateParserRuleCall_3; }
	}
	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.Parameter");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMapParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPrimitiveParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cDerivedFieldParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cFilterValueParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cRangeParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cSpecialValuesParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cDiscretizeBinParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cCastTypeParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cDerivedValueParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cNumOpParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cFixValueParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cFieldRangeParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cMathOpParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		private final RuleCall cFieldParserRuleCall_13 = (RuleCall)cAlternatives.eContents().get(13);
		private final RuleCall cJoinParserRuleCall_14 = (RuleCall)cAlternatives.eContents().get(14);
		private final RuleCall cDateRangeParserRuleCall_15 = (RuleCall)cAlternatives.eContents().get(15);
		
		//Parameter returns Parameter:
		//    Map | Primitive | DerivedField | FilterValue | Range | SpecialValues | DiscretizeBin | CastType | DerivedValue | NumOp | FixValue | FieldRange | MathOp | Field | Join | DateRange;
		@Override public ParserRule getRule() { return rule; }
		
		//Map | Primitive | DerivedField | FilterValue | Range | SpecialValues | DiscretizeBin | CastType | DerivedValue | NumOp | FixValue | FieldRange | MathOp | Field | Join | DateRange
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Map
		public RuleCall getMapParserRuleCall_0() { return cMapParserRuleCall_0; }
		
		//Primitive
		public RuleCall getPrimitiveParserRuleCall_1() { return cPrimitiveParserRuleCall_1; }
		
		//DerivedField
		public RuleCall getDerivedFieldParserRuleCall_2() { return cDerivedFieldParserRuleCall_2; }
		
		//FilterValue
		public RuleCall getFilterValueParserRuleCall_3() { return cFilterValueParserRuleCall_3; }
		
		//Range
		public RuleCall getRangeParserRuleCall_4() { return cRangeParserRuleCall_4; }
		
		//SpecialValues
		public RuleCall getSpecialValuesParserRuleCall_5() { return cSpecialValuesParserRuleCall_5; }
		
		//DiscretizeBin
		public RuleCall getDiscretizeBinParserRuleCall_6() { return cDiscretizeBinParserRuleCall_6; }
		
		//CastType
		public RuleCall getCastTypeParserRuleCall_7() { return cCastTypeParserRuleCall_7; }
		
		//DerivedValue
		public RuleCall getDerivedValueParserRuleCall_8() { return cDerivedValueParserRuleCall_8; }
		
		//NumOp
		public RuleCall getNumOpParserRuleCall_9() { return cNumOpParserRuleCall_9; }
		
		//FixValue
		public RuleCall getFixValueParserRuleCall_10() { return cFixValueParserRuleCall_10; }
		
		//FieldRange
		public RuleCall getFieldRangeParserRuleCall_11() { return cFieldRangeParserRuleCall_11; }
		
		//MathOp
		public RuleCall getMathOpParserRuleCall_12() { return cMathOpParserRuleCall_12; }
		
		//Field
		public RuleCall getFieldParserRuleCall_13() { return cFieldParserRuleCall_13; }
		
		//Join
		public RuleCall getJoinParserRuleCall_14() { return cJoinParserRuleCall_14; }
		
		//DateRange
		public RuleCall getDateRangeParserRuleCall_15() { return cDateRangeParserRuleCall_15; }
	}
	public class MatchingValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.MatchingValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRangeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSpecialValuesParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cDateRangeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//MatchingValue returns MatchingValue:
		//    Range | SpecialValues | DateRange;
		@Override public ParserRule getRule() { return rule; }
		
		//Range | SpecialValues | DateRange
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Range
		public RuleCall getRangeParserRuleCall_0() { return cRangeParserRuleCall_0; }
		
		//SpecialValues
		public RuleCall getSpecialValuesParserRuleCall_1() { return cSpecialValuesParserRuleCall_1; }
		
		//DateRange
		public RuleCall getDateRangeParserRuleCall_2() { return cDateRangeParserRuleCall_2; }
	}
	public class OperandElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.Operand");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cFixValueParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cFieldParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Operand returns Operand:
		//    FixValue | Field;
		@Override public ParserRule getRule() { return rule; }
		
		//FixValue | Field
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//FixValue
		public RuleCall getFixValueParserRuleCall_0() { return cFixValueParserRuleCall_0; }
		
		//Field
		public RuleCall getFieldParserRuleCall_1() { return cFieldParserRuleCall_1; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class LinkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.Link");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLinkKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cSourceKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSourceAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cSourceProcessingStepCrossReference_4_0 = (CrossReference)cSourceAssignment_4.eContents().get(0);
		private final RuleCall cSourceProcessingStepEStringParserRuleCall_4_0_1 = (RuleCall)cSourceProcessingStepCrossReference_4_0.eContents().get(1);
		private final Keyword cTargetKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTargetAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cTargetProcessingStepCrossReference_6_0 = (CrossReference)cTargetAssignment_6.eContents().get(0);
		private final RuleCall cTargetProcessingStepEStringParserRuleCall_6_0_1 = (RuleCall)cTargetProcessingStepCrossReference_6_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Link returns Link:
		//    'Link'
		//    name=EString
		//    '{'
		//        'source' source=[ProcessingStep|EString]
		//        'target' target=[ProcessingStep|EString]
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Link'
		//name=EString
		//'{'
		//    'source' source=[ProcessingStep|EString]
		//    'target' target=[ProcessingStep|EString]
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Link'
		public Keyword getLinkKeyword_0() { return cLinkKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'source'
		public Keyword getSourceKeyword_3() { return cSourceKeyword_3; }
		
		//source=[ProcessingStep|EString]
		public Assignment getSourceAssignment_4() { return cSourceAssignment_4; }
		
		//[ProcessingStep|EString]
		public CrossReference getSourceProcessingStepCrossReference_4_0() { return cSourceProcessingStepCrossReference_4_0; }
		
		//EString
		public RuleCall getSourceProcessingStepEStringParserRuleCall_4_0_1() { return cSourceProcessingStepEStringParserRuleCall_4_0_1; }
		
		//'target'
		public Keyword getTargetKeyword_5() { return cTargetKeyword_5; }
		
		//target=[ProcessingStep|EString]
		public Assignment getTargetAssignment_6() { return cTargetAssignment_6; }
		
		//[ProcessingStep|EString]
		public CrossReference getTargetProcessingStepCrossReference_6_0() { return cTargetProcessingStepCrossReference_6_0; }
		
		//EString
		public RuleCall getTargetProcessingStepEStringParserRuleCall_6_0_1() { return cTargetProcessingStepEStringParserRuleCall_6_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class DataDictionaryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.DataDictionary");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDataDictionaryAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDataDictionaryKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cFileNameKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cFileNameAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cFileNameEStringParserRuleCall_4_1_0 = (RuleCall)cFileNameAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cInKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cInAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cInDataDictionaryCrossReference_5_1_0 = (CrossReference)cInAssignment_5_1.eContents().get(0);
		private final RuleCall cInDataDictionaryEStringParserRuleCall_5_1_0_1 = (RuleCall)cInDataDictionaryCrossReference_5_1_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cOutKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cOutAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cOutDataDictionaryCrossReference_6_1_0 = (CrossReference)cOutAssignment_6_1.eContents().get(0);
		private final RuleCall cOutDataDictionaryEStringParserRuleCall_6_1_0_1 = (RuleCall)cOutDataDictionaryCrossReference_6_1_0.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cDatafieldKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cDatafieldAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cDatafieldDataFieldParserRuleCall_7_2_0 = (RuleCall)cDatafieldAssignment_7_2.eContents().get(0);
		private final Group cGroup_7_3 = (Group)cGroup_7.eContents().get(3);
		private final Keyword cCommaKeyword_7_3_0 = (Keyword)cGroup_7_3.eContents().get(0);
		private final Assignment cDatafieldAssignment_7_3_1 = (Assignment)cGroup_7_3.eContents().get(1);
		private final RuleCall cDatafieldDataFieldParserRuleCall_7_3_1_0 = (RuleCall)cDatafieldAssignment_7_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_4 = (Keyword)cGroup_7.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//DataDictionary returns DataDictionary:
		//    {DataDictionary}
		//    'DataDictionary'
		//    name=EString
		//    '{'
		//        ('fileName' fileName=EString)?
		//        ('in' in=[DataDictionary|EString])?
		//        ('out' out=[DataDictionary|EString])?
		//        ('datafield' '{' datafield+=DataField ( "," datafield+=DataField)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{DataDictionary}
		//'DataDictionary'
		//name=EString
		//'{'
		//    ('fileName' fileName=EString)?
		//    ('in' in=[DataDictionary|EString])?
		//    ('out' out=[DataDictionary|EString])?
		//    ('datafield' '{' datafield+=DataField ( "," datafield+=DataField)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{DataDictionary}
		public Action getDataDictionaryAction_0() { return cDataDictionaryAction_0; }
		
		//'DataDictionary'
		public Keyword getDataDictionaryKeyword_1() { return cDataDictionaryKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('fileName' fileName=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'fileName'
		public Keyword getFileNameKeyword_4_0() { return cFileNameKeyword_4_0; }
		
		//fileName=EString
		public Assignment getFileNameAssignment_4_1() { return cFileNameAssignment_4_1; }
		
		//EString
		public RuleCall getFileNameEStringParserRuleCall_4_1_0() { return cFileNameEStringParserRuleCall_4_1_0; }
		
		//('in' in=[DataDictionary|EString])?
		public Group getGroup_5() { return cGroup_5; }
		
		//'in'
		public Keyword getInKeyword_5_0() { return cInKeyword_5_0; }
		
		//in=[DataDictionary|EString]
		public Assignment getInAssignment_5_1() { return cInAssignment_5_1; }
		
		//[DataDictionary|EString]
		public CrossReference getInDataDictionaryCrossReference_5_1_0() { return cInDataDictionaryCrossReference_5_1_0; }
		
		//EString
		public RuleCall getInDataDictionaryEStringParserRuleCall_5_1_0_1() { return cInDataDictionaryEStringParserRuleCall_5_1_0_1; }
		
		//('out' out=[DataDictionary|EString])?
		public Group getGroup_6() { return cGroup_6; }
		
		//'out'
		public Keyword getOutKeyword_6_0() { return cOutKeyword_6_0; }
		
		//out=[DataDictionary|EString]
		public Assignment getOutAssignment_6_1() { return cOutAssignment_6_1; }
		
		//[DataDictionary|EString]
		public CrossReference getOutDataDictionaryCrossReference_6_1_0() { return cOutDataDictionaryCrossReference_6_1_0; }
		
		//EString
		public RuleCall getOutDataDictionaryEStringParserRuleCall_6_1_0_1() { return cOutDataDictionaryEStringParserRuleCall_6_1_0_1; }
		
		//('datafield' '{' datafield+=DataField ( "," datafield+=DataField)* '}' )?
		public Group getGroup_7() { return cGroup_7; }
		
		//'datafield'
		public Keyword getDatafieldKeyword_7_0() { return cDatafieldKeyword_7_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7_1() { return cLeftCurlyBracketKeyword_7_1; }
		
		//datafield+=DataField
		public Assignment getDatafieldAssignment_7_2() { return cDatafieldAssignment_7_2; }
		
		//DataField
		public RuleCall getDatafieldDataFieldParserRuleCall_7_2_0() { return cDatafieldDataFieldParserRuleCall_7_2_0; }
		
		//( "," datafield+=DataField)*
		public Group getGroup_7_3() { return cGroup_7_3; }
		
		//","
		public Keyword getCommaKeyword_7_3_0() { return cCommaKeyword_7_3_0; }
		
		//datafield+=DataField
		public Assignment getDatafieldAssignment_7_3_1() { return cDatafieldAssignment_7_3_1; }
		
		//DataField
		public RuleCall getDatafieldDataFieldParserRuleCall_7_3_1_0() { return cDatafieldDataFieldParserRuleCall_7_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7_4() { return cRightCurlyBracketKeyword_7_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class PMMLModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.PMMLModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOnlyPredictionsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cOnlyPredictionsOnlyPredictionsKeyword_0_0 = (Keyword)cOnlyPredictionsAssignment_0.eContents().get(0);
		private final Keyword cPMMLModelKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cOrigin_functionKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cOrigin_functionAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cOrigin_functionEStringParserRuleCall_4_1_0 = (RuleCall)cOrigin_functionAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cFilePathKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cFilePathAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cFilePathEStringParserRuleCall_5_1_0 = (RuleCall)cFilePathAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cOutgoingKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cOutgoingAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cOutgoingLinkCrossReference_6_1_0 = (CrossReference)cOutgoingAssignment_6_1.eContents().get(0);
		private final RuleCall cOutgoingLinkEStringParserRuleCall_6_1_0_1 = (RuleCall)cOutgoingLinkCrossReference_6_1_0.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cIncomingKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cIncomingAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final CrossReference cIncomingLinkCrossReference_7_1_0 = (CrossReference)cIncomingAssignment_7_1.eContents().get(0);
		private final RuleCall cIncomingLinkEStringParserRuleCall_7_1_0_1 = (RuleCall)cIncomingLinkCrossReference_7_1_0.eContents().get(1);
		private final Keyword cInKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cLeftParenthesisKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cInAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final CrossReference cInArgumentCrossReference_10_0 = (CrossReference)cInAssignment_10.eContents().get(0);
		private final RuleCall cInArgumentEStringParserRuleCall_10_0_1 = (RuleCall)cInArgumentCrossReference_10_0.eContents().get(1);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cCommaKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cInAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final CrossReference cInArgumentCrossReference_11_1_0 = (CrossReference)cInAssignment_11_1.eContents().get(0);
		private final RuleCall cInArgumentEStringParserRuleCall_11_1_0_1 = (RuleCall)cInArgumentCrossReference_11_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cOutKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Keyword cLeftParenthesisKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Assignment cOutAssignment_15 = (Assignment)cGroup.eContents().get(15);
		private final CrossReference cOutArgumentCrossReference_15_0 = (CrossReference)cOutAssignment_15.eContents().get(0);
		private final RuleCall cOutArgumentEStringParserRuleCall_15_0_1 = (RuleCall)cOutArgumentCrossReference_15_0.eContents().get(1);
		private final Group cGroup_16 = (Group)cGroup.eContents().get(16);
		private final Keyword cCommaKeyword_16_0 = (Keyword)cGroup_16.eContents().get(0);
		private final Assignment cOutAssignment_16_1 = (Assignment)cGroup_16.eContents().get(1);
		private final CrossReference cOutArgumentCrossReference_16_1_0 = (CrossReference)cOutAssignment_16_1.eContents().get(0);
		private final RuleCall cOutArgumentEStringParserRuleCall_16_1_0_1 = (RuleCall)cOutArgumentCrossReference_16_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_17 = (Keyword)cGroup.eContents().get(17);
		private final Keyword cInputPortKeyword_18 = (Keyword)cGroup.eContents().get(18);
		private final Keyword cLeftCurlyBracketKeyword_19 = (Keyword)cGroup.eContents().get(19);
		private final Assignment cInputPortAssignment_20 = (Assignment)cGroup.eContents().get(20);
		private final RuleCall cInputPortDataDictionaryParserRuleCall_20_0 = (RuleCall)cInputPortAssignment_20.eContents().get(0);
		private final Group cGroup_21 = (Group)cGroup.eContents().get(21);
		private final Keyword cCommaKeyword_21_0 = (Keyword)cGroup_21.eContents().get(0);
		private final Assignment cInputPortAssignment_21_1 = (Assignment)cGroup_21.eContents().get(1);
		private final RuleCall cInputPortDataDictionaryParserRuleCall_21_1_0 = (RuleCall)cInputPortAssignment_21_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_22 = (Keyword)cGroup.eContents().get(22);
		private final Keyword cOutputPortKeyword_23 = (Keyword)cGroup.eContents().get(23);
		private final Keyword cLeftCurlyBracketKeyword_24 = (Keyword)cGroup.eContents().get(24);
		private final Assignment cOutputPortAssignment_25 = (Assignment)cGroup.eContents().get(25);
		private final RuleCall cOutputPortDataDictionaryParserRuleCall_25_0 = (RuleCall)cOutputPortAssignment_25.eContents().get(0);
		private final Group cGroup_26 = (Group)cGroup.eContents().get(26);
		private final Keyword cCommaKeyword_26_0 = (Keyword)cGroup_26.eContents().get(0);
		private final Assignment cOutputPortAssignment_26_1 = (Assignment)cGroup_26.eContents().get(1);
		private final RuleCall cOutputPortDataDictionaryParserRuleCall_26_1_0 = (RuleCall)cOutputPortAssignment_26_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_27 = (Keyword)cGroup.eContents().get(27);
		private final Group cGroup_28 = (Group)cGroup.eContents().get(28);
		private final Keyword cTestKeyword_28_0 = (Keyword)cGroup_28.eContents().get(0);
		private final Assignment cTestAssignment_28_1 = (Assignment)cGroup_28.eContents().get(1);
		private final RuleCall cTestTestParserRuleCall_28_1_0 = (RuleCall)cTestAssignment_28_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_29 = (Keyword)cGroup.eContents().get(29);
		
		//PMMLModel returns PMMLModel:
		//    (onlyPredictions?='onlyPredictions')?
		//    'PMMLModel'
		//    name=EString
		//    '{'
		//        ('origin_function' origin_function=EString)?
		//        ('filePath' filePath=EString)?
		//        ('outgoing' outgoing=[Link|EString])?
		//        ('incoming' incoming=[Link|EString])?
		//        'in' '(' in+=[Argument|EString] ( "," in+=[Argument|EString])* ')'
		//        'out' '(' out+=[Argument|EString] ( "," out+=[Argument|EString])* ')'
		//        'inputPort' '{' inputPort+=DataDictionary ( "," inputPort+=DataDictionary)* '}'
		//        'outputPort' '{' outputPort+=DataDictionary ( "," outputPort+=DataDictionary)* '}'
		//        ('test' test=Test)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//(onlyPredictions?='onlyPredictions')?
		//'PMMLModel'
		//name=EString
		//'{'
		//    ('origin_function' origin_function=EString)?
		//    ('filePath' filePath=EString)?
		//    ('outgoing' outgoing=[Link|EString])?
		//    ('incoming' incoming=[Link|EString])?
		//    'in' '(' in+=[Argument|EString] ( "," in+=[Argument|EString])* ')'
		//    'out' '(' out+=[Argument|EString] ( "," out+=[Argument|EString])* ')'
		//    'inputPort' '{' inputPort+=DataDictionary ( "," inputPort+=DataDictionary)* '}'
		//    'outputPort' '{' outputPort+=DataDictionary ( "," outputPort+=DataDictionary)* '}'
		//    ('test' test=Test)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//(onlyPredictions?='onlyPredictions')?
		public Assignment getOnlyPredictionsAssignment_0() { return cOnlyPredictionsAssignment_0; }
		
		//'onlyPredictions'
		public Keyword getOnlyPredictionsOnlyPredictionsKeyword_0_0() { return cOnlyPredictionsOnlyPredictionsKeyword_0_0; }
		
		//'PMMLModel'
		public Keyword getPMMLModelKeyword_1() { return cPMMLModelKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('origin_function' origin_function=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'origin_function'
		public Keyword getOrigin_functionKeyword_4_0() { return cOrigin_functionKeyword_4_0; }
		
		//origin_function=EString
		public Assignment getOrigin_functionAssignment_4_1() { return cOrigin_functionAssignment_4_1; }
		
		//EString
		public RuleCall getOrigin_functionEStringParserRuleCall_4_1_0() { return cOrigin_functionEStringParserRuleCall_4_1_0; }
		
		//('filePath' filePath=EString)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'filePath'
		public Keyword getFilePathKeyword_5_0() { return cFilePathKeyword_5_0; }
		
		//filePath=EString
		public Assignment getFilePathAssignment_5_1() { return cFilePathAssignment_5_1; }
		
		//EString
		public RuleCall getFilePathEStringParserRuleCall_5_1_0() { return cFilePathEStringParserRuleCall_5_1_0; }
		
		//('outgoing' outgoing=[Link|EString])?
		public Group getGroup_6() { return cGroup_6; }
		
		//'outgoing'
		public Keyword getOutgoingKeyword_6_0() { return cOutgoingKeyword_6_0; }
		
		//outgoing=[Link|EString]
		public Assignment getOutgoingAssignment_6_1() { return cOutgoingAssignment_6_1; }
		
		//[Link|EString]
		public CrossReference getOutgoingLinkCrossReference_6_1_0() { return cOutgoingLinkCrossReference_6_1_0; }
		
		//EString
		public RuleCall getOutgoingLinkEStringParserRuleCall_6_1_0_1() { return cOutgoingLinkEStringParserRuleCall_6_1_0_1; }
		
		//('incoming' incoming=[Link|EString])?
		public Group getGroup_7() { return cGroup_7; }
		
		//'incoming'
		public Keyword getIncomingKeyword_7_0() { return cIncomingKeyword_7_0; }
		
		//incoming=[Link|EString]
		public Assignment getIncomingAssignment_7_1() { return cIncomingAssignment_7_1; }
		
		//[Link|EString]
		public CrossReference getIncomingLinkCrossReference_7_1_0() { return cIncomingLinkCrossReference_7_1_0; }
		
		//EString
		public RuleCall getIncomingLinkEStringParserRuleCall_7_1_0_1() { return cIncomingLinkEStringParserRuleCall_7_1_0_1; }
		
		//'in'
		public Keyword getInKeyword_8() { return cInKeyword_8; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_9() { return cLeftParenthesisKeyword_9; }
		
		//in+=[Argument|EString]
		public Assignment getInAssignment_10() { return cInAssignment_10; }
		
		//[Argument|EString]
		public CrossReference getInArgumentCrossReference_10_0() { return cInArgumentCrossReference_10_0; }
		
		//EString
		public RuleCall getInArgumentEStringParserRuleCall_10_0_1() { return cInArgumentEStringParserRuleCall_10_0_1; }
		
		//( "," in+=[Argument|EString])*
		public Group getGroup_11() { return cGroup_11; }
		
		//","
		public Keyword getCommaKeyword_11_0() { return cCommaKeyword_11_0; }
		
		//in+=[Argument|EString]
		public Assignment getInAssignment_11_1() { return cInAssignment_11_1; }
		
		//[Argument|EString]
		public CrossReference getInArgumentCrossReference_11_1_0() { return cInArgumentCrossReference_11_1_0; }
		
		//EString
		public RuleCall getInArgumentEStringParserRuleCall_11_1_0_1() { return cInArgumentEStringParserRuleCall_11_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_12() { return cRightParenthesisKeyword_12; }
		
		//'out'
		public Keyword getOutKeyword_13() { return cOutKeyword_13; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_14() { return cLeftParenthesisKeyword_14; }
		
		//out+=[Argument|EString]
		public Assignment getOutAssignment_15() { return cOutAssignment_15; }
		
		//[Argument|EString]
		public CrossReference getOutArgumentCrossReference_15_0() { return cOutArgumentCrossReference_15_0; }
		
		//EString
		public RuleCall getOutArgumentEStringParserRuleCall_15_0_1() { return cOutArgumentEStringParserRuleCall_15_0_1; }
		
		//( "," out+=[Argument|EString])*
		public Group getGroup_16() { return cGroup_16; }
		
		//","
		public Keyword getCommaKeyword_16_0() { return cCommaKeyword_16_0; }
		
		//out+=[Argument|EString]
		public Assignment getOutAssignment_16_1() { return cOutAssignment_16_1; }
		
		//[Argument|EString]
		public CrossReference getOutArgumentCrossReference_16_1_0() { return cOutArgumentCrossReference_16_1_0; }
		
		//EString
		public RuleCall getOutArgumentEStringParserRuleCall_16_1_0_1() { return cOutArgumentEStringParserRuleCall_16_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_17() { return cRightParenthesisKeyword_17; }
		
		//'inputPort'
		public Keyword getInputPortKeyword_18() { return cInputPortKeyword_18; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_19() { return cLeftCurlyBracketKeyword_19; }
		
		//inputPort+=DataDictionary
		public Assignment getInputPortAssignment_20() { return cInputPortAssignment_20; }
		
		//DataDictionary
		public RuleCall getInputPortDataDictionaryParserRuleCall_20_0() { return cInputPortDataDictionaryParserRuleCall_20_0; }
		
		//( "," inputPort+=DataDictionary)*
		public Group getGroup_21() { return cGroup_21; }
		
		//","
		public Keyword getCommaKeyword_21_0() { return cCommaKeyword_21_0; }
		
		//inputPort+=DataDictionary
		public Assignment getInputPortAssignment_21_1() { return cInputPortAssignment_21_1; }
		
		//DataDictionary
		public RuleCall getInputPortDataDictionaryParserRuleCall_21_1_0() { return cInputPortDataDictionaryParserRuleCall_21_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_22() { return cRightCurlyBracketKeyword_22; }
		
		//'outputPort'
		public Keyword getOutputPortKeyword_23() { return cOutputPortKeyword_23; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_24() { return cLeftCurlyBracketKeyword_24; }
		
		//outputPort+=DataDictionary
		public Assignment getOutputPortAssignment_25() { return cOutputPortAssignment_25; }
		
		//DataDictionary
		public RuleCall getOutputPortDataDictionaryParserRuleCall_25_0() { return cOutputPortDataDictionaryParserRuleCall_25_0; }
		
		//( "," outputPort+=DataDictionary)*
		public Group getGroup_26() { return cGroup_26; }
		
		//","
		public Keyword getCommaKeyword_26_0() { return cCommaKeyword_26_0; }
		
		//outputPort+=DataDictionary
		public Assignment getOutputPortAssignment_26_1() { return cOutputPortAssignment_26_1; }
		
		//DataDictionary
		public RuleCall getOutputPortDataDictionaryParserRuleCall_26_1_0() { return cOutputPortDataDictionaryParserRuleCall_26_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_27() { return cRightCurlyBracketKeyword_27; }
		
		//('test' test=Test)?
		public Group getGroup_28() { return cGroup_28; }
		
		//'test'
		public Keyword getTestKeyword_28_0() { return cTestKeyword_28_0; }
		
		//test=Test
		public Assignment getTestAssignment_28_1() { return cTestAssignment_28_1; }
		
		//Test
		public RuleCall getTestTestParserRuleCall_28_1_0() { return cTestTestParserRuleCall_28_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_29() { return cRightCurlyBracketKeyword_29; }
	}
	public class DataProcessingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.DataProcessing");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDataProcessingKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cOrigin_functionKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cOrigin_functionAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cOrigin_functionEStringParserRuleCall_3_1_0 = (RuleCall)cOrigin_functionAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cOutgoingKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cOutgoingAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cOutgoingLinkCrossReference_4_1_0 = (CrossReference)cOutgoingAssignment_4_1.eContents().get(0);
		private final RuleCall cOutgoingLinkEStringParserRuleCall_4_1_0_1 = (RuleCall)cOutgoingLinkCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cIncomingKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cIncomingAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cIncomingLinkCrossReference_5_1_0 = (CrossReference)cIncomingAssignment_5_1.eContents().get(0);
		private final RuleCall cIncomingLinkEStringParserRuleCall_5_1_0_1 = (RuleCall)cIncomingLinkCrossReference_5_1_0.eContents().get(1);
		private final Keyword cInKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cLeftParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cInAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cInArgumentCrossReference_8_0 = (CrossReference)cInAssignment_8.eContents().get(0);
		private final RuleCall cInArgumentEStringParserRuleCall_8_0_1 = (RuleCall)cInArgumentCrossReference_8_0.eContents().get(1);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cCommaKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cInAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final CrossReference cInArgumentCrossReference_9_1_0 = (CrossReference)cInAssignment_9_1.eContents().get(0);
		private final RuleCall cInArgumentEStringParserRuleCall_9_1_0_1 = (RuleCall)cInArgumentCrossReference_9_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cOutKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cLeftParenthesisKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cOutAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final CrossReference cOutArgumentCrossReference_13_0 = (CrossReference)cOutAssignment_13.eContents().get(0);
		private final RuleCall cOutArgumentEStringParserRuleCall_13_0_1 = (RuleCall)cOutArgumentCrossReference_13_0.eContents().get(1);
		private final Group cGroup_14 = (Group)cGroup.eContents().get(14);
		private final Keyword cCommaKeyword_14_0 = (Keyword)cGroup_14.eContents().get(0);
		private final Assignment cOutAssignment_14_1 = (Assignment)cGroup_14.eContents().get(1);
		private final CrossReference cOutArgumentCrossReference_14_1_0 = (CrossReference)cOutAssignment_14_1.eContents().get(0);
		private final RuleCall cOutArgumentEStringParserRuleCall_14_1_0_1 = (RuleCall)cOutArgumentCrossReference_14_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Group cGroup_16 = (Group)cGroup.eContents().get(16);
		private final Keyword cInitial_accumulated_processingKeyword_16_0 = (Keyword)cGroup_16.eContents().get(0);
		private final Assignment cInitial_accumulated_processingAssignment_16_1 = (Assignment)cGroup_16.eContents().get(1);
		private final CrossReference cInitial_accumulated_processingDataProcessingCrossReference_16_1_0 = (CrossReference)cInitial_accumulated_processingAssignment_16_1.eContents().get(0);
		private final RuleCall cInitial_accumulated_processingDataProcessingEStringParserRuleCall_16_1_0_1 = (RuleCall)cInitial_accumulated_processingDataProcessingCrossReference_16_1_0.eContents().get(1);
		private final Keyword cInputPortKeyword_17 = (Keyword)cGroup.eContents().get(17);
		private final Keyword cLeftCurlyBracketKeyword_18 = (Keyword)cGroup.eContents().get(18);
		private final Assignment cInputPortAssignment_19 = (Assignment)cGroup.eContents().get(19);
		private final RuleCall cInputPortDataDictionaryParserRuleCall_19_0 = (RuleCall)cInputPortAssignment_19.eContents().get(0);
		private final Group cGroup_20 = (Group)cGroup.eContents().get(20);
		private final Keyword cCommaKeyword_20_0 = (Keyword)cGroup_20.eContents().get(0);
		private final Assignment cInputPortAssignment_20_1 = (Assignment)cGroup_20.eContents().get(1);
		private final RuleCall cInputPortDataDictionaryParserRuleCall_20_1_0 = (RuleCall)cInputPortAssignment_20_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_21 = (Keyword)cGroup.eContents().get(21);
		private final Keyword cOutputPortKeyword_22 = (Keyword)cGroup.eContents().get(22);
		private final Keyword cLeftCurlyBracketKeyword_23 = (Keyword)cGroup.eContents().get(23);
		private final Assignment cOutputPortAssignment_24 = (Assignment)cGroup.eContents().get(24);
		private final RuleCall cOutputPortDataDictionaryParserRuleCall_24_0 = (RuleCall)cOutputPortAssignment_24.eContents().get(0);
		private final Group cGroup_25 = (Group)cGroup.eContents().get(25);
		private final Keyword cCommaKeyword_25_0 = (Keyword)cGroup_25.eContents().get(0);
		private final Assignment cOutputPortAssignment_25_1 = (Assignment)cGroup_25.eContents().get(1);
		private final RuleCall cOutputPortDataDictionaryParserRuleCall_25_1_0 = (RuleCall)cOutputPortAssignment_25_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_26 = (Keyword)cGroup.eContents().get(26);
		private final Group cGroup_27 = (Group)cGroup.eContents().get(27);
		private final Keyword cParameterKeyword_27_0 = (Keyword)cGroup_27.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_27_1 = (Keyword)cGroup_27.eContents().get(1);
		private final Assignment cParameterAssignment_27_2 = (Assignment)cGroup_27.eContents().get(2);
		private final RuleCall cParameterParameterParserRuleCall_27_2_0 = (RuleCall)cParameterAssignment_27_2.eContents().get(0);
		private final Group cGroup_27_3 = (Group)cGroup_27.eContents().get(3);
		private final Keyword cCommaKeyword_27_3_0 = (Keyword)cGroup_27_3.eContents().get(0);
		private final Assignment cParameterAssignment_27_3_1 = (Assignment)cGroup_27_3.eContents().get(1);
		private final RuleCall cParameterParameterParserRuleCall_27_3_1_0 = (RuleCall)cParameterAssignment_27_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_27_4 = (Keyword)cGroup_27.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_28 = (Keyword)cGroup.eContents().get(28);
		
		//DataProcessing returns DataProcessing:
		//    'DataProcessing'
		//    name=EString
		//    '{'
		//        ('origin_function' origin_function=EString)?
		//        ('outgoing' outgoing=[Link|EString])?
		//        ('incoming' incoming=[Link|EString])?
		//        'in' '(' in+=[Argument|EString] ( "," in+=[Argument|EString])* ')'
		//        'out' '(' out+=[Argument|EString] ( "," out+=[Argument|EString])* ')'
		//        ('initial_accumulated_processing' initial_accumulated_processing=[DataProcessing|EString])?
		//        'inputPort' '{' inputPort+=DataDictionary ( "," inputPort+=DataDictionary)* '}'
		//        'outputPort' '{' outputPort+=DataDictionary ( "," outputPort+=DataDictionary)* '}'
		//        ('parameter' '{' parameter+=Parameter ( "," parameter+=Parameter)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'DataProcessing'
		//name=EString
		//'{'
		//    ('origin_function' origin_function=EString)?
		//    ('outgoing' outgoing=[Link|EString])?
		//    ('incoming' incoming=[Link|EString])?
		//    'in' '(' in+=[Argument|EString] ( "," in+=[Argument|EString])* ')'
		//    'out' '(' out+=[Argument|EString] ( "," out+=[Argument|EString])* ')'
		//    ('initial_accumulated_processing' initial_accumulated_processing=[DataProcessing|EString])?
		//    'inputPort' '{' inputPort+=DataDictionary ( "," inputPort+=DataDictionary)* '}'
		//    'outputPort' '{' outputPort+=DataDictionary ( "," outputPort+=DataDictionary)* '}'
		//    ('parameter' '{' parameter+=Parameter ( "," parameter+=Parameter)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'DataProcessing'
		public Keyword getDataProcessingKeyword_0() { return cDataProcessingKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('origin_function' origin_function=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'origin_function'
		public Keyword getOrigin_functionKeyword_3_0() { return cOrigin_functionKeyword_3_0; }
		
		//origin_function=EString
		public Assignment getOrigin_functionAssignment_3_1() { return cOrigin_functionAssignment_3_1; }
		
		//EString
		public RuleCall getOrigin_functionEStringParserRuleCall_3_1_0() { return cOrigin_functionEStringParserRuleCall_3_1_0; }
		
		//('outgoing' outgoing=[Link|EString])?
		public Group getGroup_4() { return cGroup_4; }
		
		//'outgoing'
		public Keyword getOutgoingKeyword_4_0() { return cOutgoingKeyword_4_0; }
		
		//outgoing=[Link|EString]
		public Assignment getOutgoingAssignment_4_1() { return cOutgoingAssignment_4_1; }
		
		//[Link|EString]
		public CrossReference getOutgoingLinkCrossReference_4_1_0() { return cOutgoingLinkCrossReference_4_1_0; }
		
		//EString
		public RuleCall getOutgoingLinkEStringParserRuleCall_4_1_0_1() { return cOutgoingLinkEStringParserRuleCall_4_1_0_1; }
		
		//('incoming' incoming=[Link|EString])?
		public Group getGroup_5() { return cGroup_5; }
		
		//'incoming'
		public Keyword getIncomingKeyword_5_0() { return cIncomingKeyword_5_0; }
		
		//incoming=[Link|EString]
		public Assignment getIncomingAssignment_5_1() { return cIncomingAssignment_5_1; }
		
		//[Link|EString]
		public CrossReference getIncomingLinkCrossReference_5_1_0() { return cIncomingLinkCrossReference_5_1_0; }
		
		//EString
		public RuleCall getIncomingLinkEStringParserRuleCall_5_1_0_1() { return cIncomingLinkEStringParserRuleCall_5_1_0_1; }
		
		//'in'
		public Keyword getInKeyword_6() { return cInKeyword_6; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_7() { return cLeftParenthesisKeyword_7; }
		
		//in+=[Argument|EString]
		public Assignment getInAssignment_8() { return cInAssignment_8; }
		
		//[Argument|EString]
		public CrossReference getInArgumentCrossReference_8_0() { return cInArgumentCrossReference_8_0; }
		
		//EString
		public RuleCall getInArgumentEStringParserRuleCall_8_0_1() { return cInArgumentEStringParserRuleCall_8_0_1; }
		
		//( "," in+=[Argument|EString])*
		public Group getGroup_9() { return cGroup_9; }
		
		//","
		public Keyword getCommaKeyword_9_0() { return cCommaKeyword_9_0; }
		
		//in+=[Argument|EString]
		public Assignment getInAssignment_9_1() { return cInAssignment_9_1; }
		
		//[Argument|EString]
		public CrossReference getInArgumentCrossReference_9_1_0() { return cInArgumentCrossReference_9_1_0; }
		
		//EString
		public RuleCall getInArgumentEStringParserRuleCall_9_1_0_1() { return cInArgumentEStringParserRuleCall_9_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_10() { return cRightParenthesisKeyword_10; }
		
		//'out'
		public Keyword getOutKeyword_11() { return cOutKeyword_11; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_12() { return cLeftParenthesisKeyword_12; }
		
		//out+=[Argument|EString]
		public Assignment getOutAssignment_13() { return cOutAssignment_13; }
		
		//[Argument|EString]
		public CrossReference getOutArgumentCrossReference_13_0() { return cOutArgumentCrossReference_13_0; }
		
		//EString
		public RuleCall getOutArgumentEStringParserRuleCall_13_0_1() { return cOutArgumentEStringParserRuleCall_13_0_1; }
		
		//( "," out+=[Argument|EString])*
		public Group getGroup_14() { return cGroup_14; }
		
		//","
		public Keyword getCommaKeyword_14_0() { return cCommaKeyword_14_0; }
		
		//out+=[Argument|EString]
		public Assignment getOutAssignment_14_1() { return cOutAssignment_14_1; }
		
		//[Argument|EString]
		public CrossReference getOutArgumentCrossReference_14_1_0() { return cOutArgumentCrossReference_14_1_0; }
		
		//EString
		public RuleCall getOutArgumentEStringParserRuleCall_14_1_0_1() { return cOutArgumentEStringParserRuleCall_14_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_15() { return cRightParenthesisKeyword_15; }
		
		//('initial_accumulated_processing' initial_accumulated_processing=[DataProcessing|EString])?
		public Group getGroup_16() { return cGroup_16; }
		
		//'initial_accumulated_processing'
		public Keyword getInitial_accumulated_processingKeyword_16_0() { return cInitial_accumulated_processingKeyword_16_0; }
		
		//initial_accumulated_processing=[DataProcessing|EString]
		public Assignment getInitial_accumulated_processingAssignment_16_1() { return cInitial_accumulated_processingAssignment_16_1; }
		
		//[DataProcessing|EString]
		public CrossReference getInitial_accumulated_processingDataProcessingCrossReference_16_1_0() { return cInitial_accumulated_processingDataProcessingCrossReference_16_1_0; }
		
		//EString
		public RuleCall getInitial_accumulated_processingDataProcessingEStringParserRuleCall_16_1_0_1() { return cInitial_accumulated_processingDataProcessingEStringParserRuleCall_16_1_0_1; }
		
		//'inputPort'
		public Keyword getInputPortKeyword_17() { return cInputPortKeyword_17; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_18() { return cLeftCurlyBracketKeyword_18; }
		
		//inputPort+=DataDictionary
		public Assignment getInputPortAssignment_19() { return cInputPortAssignment_19; }
		
		//DataDictionary
		public RuleCall getInputPortDataDictionaryParserRuleCall_19_0() { return cInputPortDataDictionaryParserRuleCall_19_0; }
		
		//( "," inputPort+=DataDictionary)*
		public Group getGroup_20() { return cGroup_20; }
		
		//","
		public Keyword getCommaKeyword_20_0() { return cCommaKeyword_20_0; }
		
		//inputPort+=DataDictionary
		public Assignment getInputPortAssignment_20_1() { return cInputPortAssignment_20_1; }
		
		//DataDictionary
		public RuleCall getInputPortDataDictionaryParserRuleCall_20_1_0() { return cInputPortDataDictionaryParserRuleCall_20_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_21() { return cRightCurlyBracketKeyword_21; }
		
		//'outputPort'
		public Keyword getOutputPortKeyword_22() { return cOutputPortKeyword_22; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_23() { return cLeftCurlyBracketKeyword_23; }
		
		//outputPort+=DataDictionary
		public Assignment getOutputPortAssignment_24() { return cOutputPortAssignment_24; }
		
		//DataDictionary
		public RuleCall getOutputPortDataDictionaryParserRuleCall_24_0() { return cOutputPortDataDictionaryParserRuleCall_24_0; }
		
		//( "," outputPort+=DataDictionary)*
		public Group getGroup_25() { return cGroup_25; }
		
		//","
		public Keyword getCommaKeyword_25_0() { return cCommaKeyword_25_0; }
		
		//outputPort+=DataDictionary
		public Assignment getOutputPortAssignment_25_1() { return cOutputPortAssignment_25_1; }
		
		//DataDictionary
		public RuleCall getOutputPortDataDictionaryParserRuleCall_25_1_0() { return cOutputPortDataDictionaryParserRuleCall_25_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_26() { return cRightCurlyBracketKeyword_26; }
		
		//('parameter' '{' parameter+=Parameter ( "," parameter+=Parameter)* '}' )?
		public Group getGroup_27() { return cGroup_27; }
		
		//'parameter'
		public Keyword getParameterKeyword_27_0() { return cParameterKeyword_27_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_27_1() { return cLeftCurlyBracketKeyword_27_1; }
		
		//parameter+=Parameter
		public Assignment getParameterAssignment_27_2() { return cParameterAssignment_27_2; }
		
		//Parameter
		public RuleCall getParameterParameterParserRuleCall_27_2_0() { return cParameterParameterParserRuleCall_27_2_0; }
		
		//( "," parameter+=Parameter)*
		public Group getGroup_27_3() { return cGroup_27_3; }
		
		//","
		public Keyword getCommaKeyword_27_3_0() { return cCommaKeyword_27_3_0; }
		
		//parameter+=Parameter
		public Assignment getParameterAssignment_27_3_1() { return cParameterAssignment_27_3_1; }
		
		//Parameter
		public RuleCall getParameterParameterParserRuleCall_27_3_1_0() { return cParameterParameterParserRuleCall_27_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_27_4() { return cRightCurlyBracketKeyword_27_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_28() { return cRightCurlyBracketKeyword_28; }
	}
	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean returns ecore::EBoolean:
		//    'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class ValueFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.ValueField");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cValueFieldAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cValueFieldKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cValueKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cValueAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cValueEStringParserRuleCall_3_1_0 = (RuleCall)cValueAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCountKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cCountAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cCountEIntParserRuleCall_4_1_0 = (RuleCall)cCountAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ValueField returns ValueField:
		//    {ValueField}
		//    'ValueField'
		//    '{'
		//        ('value' value=EString)?
		//        ('count' count=EInt)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{ValueField}
		//'ValueField'
		//'{'
		//    ('value' value=EString)?
		//    ('count' count=EInt)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{ValueField}
		public Action getValueFieldAction_0() { return cValueFieldAction_0; }
		
		//'ValueField'
		public Keyword getValueFieldKeyword_1() { return cValueFieldKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('value' value=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'value'
		public Keyword getValueKeyword_3_0() { return cValueKeyword_3_0; }
		
		//value=EString
		public Assignment getValueAssignment_3_1() { return cValueAssignment_3_1; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_3_1_0() { return cValueEStringParserRuleCall_3_1_0; }
		
		//('count' count=EInt)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'count'
		public Keyword getCountKeyword_4_0() { return cCountKeyword_4_0; }
		
		//count=EInt
		public Assignment getCountAssignment_4_1() { return cCountAssignment_4_1; }
		
		//EInt
		public RuleCall getCountEIntParserRuleCall_4_1_0() { return cCountEIntParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class CategoricalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.Categorical");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCategoricalAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cIdAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cIdIdKeyword_1_0 = (Keyword)cIdAssignment_1.eContents().get(0);
		private final Assignment cTargetAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cTargetTargetKeyword_2_0 = (Keyword)cTargetAssignment_2.eContents().get(0);
		private final Assignment cOrdinalAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cOrdinalOrdinalKeyword_3_0 = (Keyword)cOrdinalAssignment_3.eContents().get(0);
		private final Keyword cCategoricalKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNameEStringParserRuleCall_5_0 = (RuleCall)cNameAssignment_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cDataTypeKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cDataTypeAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cDataTypeDataTypeEnumRuleCall_7_1_0 = (RuleCall)cDataTypeAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cDisplayNameKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cDisplayNameAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cDisplayNameEStringParserRuleCall_8_1_0 = (RuleCall)cDisplayNameAssignment_8_1.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cInKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cInAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final CrossReference cInDataFieldCrossReference_9_2_0 = (CrossReference)cInAssignment_9_2.eContents().get(0);
		private final RuleCall cInDataFieldEStringParserRuleCall_9_2_0_1 = (RuleCall)cInDataFieldCrossReference_9_2_0.eContents().get(1);
		private final Group cGroup_9_3 = (Group)cGroup_9.eContents().get(3);
		private final Keyword cCommaKeyword_9_3_0 = (Keyword)cGroup_9_3.eContents().get(0);
		private final Assignment cInAssignment_9_3_1 = (Assignment)cGroup_9_3.eContents().get(1);
		private final CrossReference cInDataFieldCrossReference_9_3_1_0 = (CrossReference)cInAssignment_9_3_1.eContents().get(0);
		private final RuleCall cInDataFieldEStringParserRuleCall_9_3_1_0_1 = (RuleCall)cInDataFieldCrossReference_9_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_9_4 = (Keyword)cGroup_9.eContents().get(4);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cOutKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cOutAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final CrossReference cOutDataFieldCrossReference_10_1_0 = (CrossReference)cOutAssignment_10_1.eContents().get(0);
		private final RuleCall cOutDataFieldEStringParserRuleCall_10_1_0_1 = (RuleCall)cOutDataFieldCrossReference_10_1_0.eContents().get(1);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cValidValuesKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Assignment cValidValuesAssignment_11_2 = (Assignment)cGroup_11.eContents().get(2);
		private final RuleCall cValidValuesValueFieldParserRuleCall_11_2_0 = (RuleCall)cValidValuesAssignment_11_2.eContents().get(0);
		private final Group cGroup_11_3 = (Group)cGroup_11.eContents().get(3);
		private final Keyword cCommaKeyword_11_3_0 = (Keyword)cGroup_11_3.eContents().get(0);
		private final Assignment cValidValuesAssignment_11_3_1 = (Assignment)cGroup_11_3.eContents().get(1);
		private final RuleCall cValidValuesValueFieldParserRuleCall_11_3_1_0 = (RuleCall)cValidValuesAssignment_11_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11_4 = (Keyword)cGroup_11.eContents().get(4);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cInvalidValuesKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_12_1 = (Keyword)cGroup_12.eContents().get(1);
		private final Assignment cInvalidValuesAssignment_12_2 = (Assignment)cGroup_12.eContents().get(2);
		private final RuleCall cInvalidValuesValueFieldParserRuleCall_12_2_0 = (RuleCall)cInvalidValuesAssignment_12_2.eContents().get(0);
		private final Group cGroup_12_3 = (Group)cGroup_12.eContents().get(3);
		private final Keyword cCommaKeyword_12_3_0 = (Keyword)cGroup_12_3.eContents().get(0);
		private final Assignment cInvalidValuesAssignment_12_3_1 = (Assignment)cGroup_12_3.eContents().get(1);
		private final RuleCall cInvalidValuesValueFieldParserRuleCall_12_3_1_0 = (RuleCall)cInvalidValuesAssignment_12_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12_4 = (Keyword)cGroup_12.eContents().get(4);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cMissingValuesKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_13_1 = (Keyword)cGroup_13.eContents().get(1);
		private final Assignment cMissingValuesAssignment_13_2 = (Assignment)cGroup_13.eContents().get(2);
		private final RuleCall cMissingValuesValueFieldParserRuleCall_13_2_0 = (RuleCall)cMissingValuesAssignment_13_2.eContents().get(0);
		private final Group cGroup_13_3 = (Group)cGroup_13.eContents().get(3);
		private final Keyword cCommaKeyword_13_3_0 = (Keyword)cGroup_13_3.eContents().get(0);
		private final Assignment cMissingValuesAssignment_13_3_1 = (Assignment)cGroup_13_3.eContents().get(1);
		private final RuleCall cMissingValuesValueFieldParserRuleCall_13_3_1_0 = (RuleCall)cMissingValuesAssignment_13_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_13_4 = (Keyword)cGroup_13.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		
		//Categorical returns Categorical:
		//    {Categorical}
		//    (id?='id')?
		//    (target?='target')?
		//    (ordinal?='ordinal')?
		//    'Categorical'
		//    name=EString
		//    '{'
		//        ('dataType' dataType=DataType)?
		//        ('displayName' displayName=EString)?
		//        ('in' '(' in+=[DataField|EString] ( "," in+=[DataField|EString])* ')' )?
		//        ('out' out=[DataField|EString])?
		//        ('validValues' '{' validValues+=ValueField ( "," validValues+=ValueField)* '}' )?
		//        ('invalidValues' '{' invalidValues+=ValueField ( "," invalidValues+=ValueField)* '}' )?
		//        ('missingValues' '{' missingValues+=ValueField ( "," missingValues+=ValueField)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Categorical}
		//(id?='id')?
		//(target?='target')?
		//(ordinal?='ordinal')?
		//'Categorical'
		//name=EString
		//'{'
		//    ('dataType' dataType=DataType)?
		//    ('displayName' displayName=EString)?
		//    ('in' '(' in+=[DataField|EString] ( "," in+=[DataField|EString])* ')' )?
		//    ('out' out=[DataField|EString])?
		//    ('validValues' '{' validValues+=ValueField ( "," validValues+=ValueField)* '}' )?
		//    ('invalidValues' '{' invalidValues+=ValueField ( "," invalidValues+=ValueField)* '}' )?
		//    ('missingValues' '{' missingValues+=ValueField ( "," missingValues+=ValueField)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Categorical}
		public Action getCategoricalAction_0() { return cCategoricalAction_0; }
		
		//(id?='id')?
		public Assignment getIdAssignment_1() { return cIdAssignment_1; }
		
		//'id'
		public Keyword getIdIdKeyword_1_0() { return cIdIdKeyword_1_0; }
		
		//(target?='target')?
		public Assignment getTargetAssignment_2() { return cTargetAssignment_2; }
		
		//'target'
		public Keyword getTargetTargetKeyword_2_0() { return cTargetTargetKeyword_2_0; }
		
		//(ordinal?='ordinal')?
		public Assignment getOrdinalAssignment_3() { return cOrdinalAssignment_3; }
		
		//'ordinal'
		public Keyword getOrdinalOrdinalKeyword_3_0() { return cOrdinalOrdinalKeyword_3_0; }
		
		//'Categorical'
		public Keyword getCategoricalKeyword_4() { return cCategoricalKeyword_4; }
		
		//name=EString
		public Assignment getNameAssignment_5() { return cNameAssignment_5; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_5_0() { return cNameEStringParserRuleCall_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }
		
		//('dataType' dataType=DataType)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'dataType'
		public Keyword getDataTypeKeyword_7_0() { return cDataTypeKeyword_7_0; }
		
		//dataType=DataType
		public Assignment getDataTypeAssignment_7_1() { return cDataTypeAssignment_7_1; }
		
		//DataType
		public RuleCall getDataTypeDataTypeEnumRuleCall_7_1_0() { return cDataTypeDataTypeEnumRuleCall_7_1_0; }
		
		//('displayName' displayName=EString)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'displayName'
		public Keyword getDisplayNameKeyword_8_0() { return cDisplayNameKeyword_8_0; }
		
		//displayName=EString
		public Assignment getDisplayNameAssignment_8_1() { return cDisplayNameAssignment_8_1; }
		
		//EString
		public RuleCall getDisplayNameEStringParserRuleCall_8_1_0() { return cDisplayNameEStringParserRuleCall_8_1_0; }
		
		//('in' '(' in+=[DataField|EString] ( "," in+=[DataField|EString])* ')' )?
		public Group getGroup_9() { return cGroup_9; }
		
		//'in'
		public Keyword getInKeyword_9_0() { return cInKeyword_9_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_9_1() { return cLeftParenthesisKeyword_9_1; }
		
		//in+=[DataField|EString]
		public Assignment getInAssignment_9_2() { return cInAssignment_9_2; }
		
		//[DataField|EString]
		public CrossReference getInDataFieldCrossReference_9_2_0() { return cInDataFieldCrossReference_9_2_0; }
		
		//EString
		public RuleCall getInDataFieldEStringParserRuleCall_9_2_0_1() { return cInDataFieldEStringParserRuleCall_9_2_0_1; }
		
		//( "," in+=[DataField|EString])*
		public Group getGroup_9_3() { return cGroup_9_3; }
		
		//","
		public Keyword getCommaKeyword_9_3_0() { return cCommaKeyword_9_3_0; }
		
		//in+=[DataField|EString]
		public Assignment getInAssignment_9_3_1() { return cInAssignment_9_3_1; }
		
		//[DataField|EString]
		public CrossReference getInDataFieldCrossReference_9_3_1_0() { return cInDataFieldCrossReference_9_3_1_0; }
		
		//EString
		public RuleCall getInDataFieldEStringParserRuleCall_9_3_1_0_1() { return cInDataFieldEStringParserRuleCall_9_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_9_4() { return cRightParenthesisKeyword_9_4; }
		
		//('out' out=[DataField|EString])?
		public Group getGroup_10() { return cGroup_10; }
		
		//'out'
		public Keyword getOutKeyword_10_0() { return cOutKeyword_10_0; }
		
		//out=[DataField|EString]
		public Assignment getOutAssignment_10_1() { return cOutAssignment_10_1; }
		
		//[DataField|EString]
		public CrossReference getOutDataFieldCrossReference_10_1_0() { return cOutDataFieldCrossReference_10_1_0; }
		
		//EString
		public RuleCall getOutDataFieldEStringParserRuleCall_10_1_0_1() { return cOutDataFieldEStringParserRuleCall_10_1_0_1; }
		
		//('validValues' '{' validValues+=ValueField ( "," validValues+=ValueField)* '}' )?
		public Group getGroup_11() { return cGroup_11; }
		
		//'validValues'
		public Keyword getValidValuesKeyword_11_0() { return cValidValuesKeyword_11_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_11_1() { return cLeftCurlyBracketKeyword_11_1; }
		
		//validValues+=ValueField
		public Assignment getValidValuesAssignment_11_2() { return cValidValuesAssignment_11_2; }
		
		//ValueField
		public RuleCall getValidValuesValueFieldParserRuleCall_11_2_0() { return cValidValuesValueFieldParserRuleCall_11_2_0; }
		
		//( "," validValues+=ValueField)*
		public Group getGroup_11_3() { return cGroup_11_3; }
		
		//","
		public Keyword getCommaKeyword_11_3_0() { return cCommaKeyword_11_3_0; }
		
		//validValues+=ValueField
		public Assignment getValidValuesAssignment_11_3_1() { return cValidValuesAssignment_11_3_1; }
		
		//ValueField
		public RuleCall getValidValuesValueFieldParserRuleCall_11_3_1_0() { return cValidValuesValueFieldParserRuleCall_11_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11_4() { return cRightCurlyBracketKeyword_11_4; }
		
		//('invalidValues' '{' invalidValues+=ValueField ( "," invalidValues+=ValueField)* '}' )?
		public Group getGroup_12() { return cGroup_12; }
		
		//'invalidValues'
		public Keyword getInvalidValuesKeyword_12_0() { return cInvalidValuesKeyword_12_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_12_1() { return cLeftCurlyBracketKeyword_12_1; }
		
		//invalidValues+=ValueField
		public Assignment getInvalidValuesAssignment_12_2() { return cInvalidValuesAssignment_12_2; }
		
		//ValueField
		public RuleCall getInvalidValuesValueFieldParserRuleCall_12_2_0() { return cInvalidValuesValueFieldParserRuleCall_12_2_0; }
		
		//( "," invalidValues+=ValueField)*
		public Group getGroup_12_3() { return cGroup_12_3; }
		
		//","
		public Keyword getCommaKeyword_12_3_0() { return cCommaKeyword_12_3_0; }
		
		//invalidValues+=ValueField
		public Assignment getInvalidValuesAssignment_12_3_1() { return cInvalidValuesAssignment_12_3_1; }
		
		//ValueField
		public RuleCall getInvalidValuesValueFieldParserRuleCall_12_3_1_0() { return cInvalidValuesValueFieldParserRuleCall_12_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12_4() { return cRightCurlyBracketKeyword_12_4; }
		
		//('missingValues' '{' missingValues+=ValueField ( "," missingValues+=ValueField)* '}' )?
		public Group getGroup_13() { return cGroup_13; }
		
		//'missingValues'
		public Keyword getMissingValuesKeyword_13_0() { return cMissingValuesKeyword_13_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_13_1() { return cLeftCurlyBracketKeyword_13_1; }
		
		//missingValues+=ValueField
		public Assignment getMissingValuesAssignment_13_2() { return cMissingValuesAssignment_13_2; }
		
		//ValueField
		public RuleCall getMissingValuesValueFieldParserRuleCall_13_2_0() { return cMissingValuesValueFieldParserRuleCall_13_2_0; }
		
		//( "," missingValues+=ValueField)*
		public Group getGroup_13_3() { return cGroup_13_3; }
		
		//","
		public Keyword getCommaKeyword_13_3_0() { return cCommaKeyword_13_3_0; }
		
		//missingValues+=ValueField
		public Assignment getMissingValuesAssignment_13_3_1() { return cMissingValuesAssignment_13_3_1; }
		
		//ValueField
		public RuleCall getMissingValuesValueFieldParserRuleCall_13_3_1_0() { return cMissingValuesValueFieldParserRuleCall_13_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_13_4() { return cRightCurlyBracketKeyword_13_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_14() { return cRightCurlyBracketKeyword_14; }
	}
	public class ContinuousElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.Continuous");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIdAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIdIdKeyword_0_0 = (Keyword)cIdAssignment_0.eContents().get(0);
		private final Assignment cTargetAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cTargetTargetKeyword_1_0 = (Keyword)cTargetAssignment_1.eContents().get(0);
		private final Keyword cContinuousKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cDataTypeKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cDataTypeAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cDataTypeDataTypeEnumRuleCall_5_1_0 = (RuleCall)cDataTypeAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cDisplayNameKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cDisplayNameAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cDisplayNameEStringParserRuleCall_6_1_0 = (RuleCall)cDisplayNameAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cNumDecimalsKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cNumDecimalsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cNumDecimalsEIntegerObjectParserRuleCall_7_1_0 = (RuleCall)cNumDecimalsAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cInKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cInAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final CrossReference cInDataFieldCrossReference_8_2_0 = (CrossReference)cInAssignment_8_2.eContents().get(0);
		private final RuleCall cInDataFieldEStringParserRuleCall_8_2_0_1 = (RuleCall)cInDataFieldCrossReference_8_2_0.eContents().get(1);
		private final Group cGroup_8_3 = (Group)cGroup_8.eContents().get(3);
		private final Keyword cCommaKeyword_8_3_0 = (Keyword)cGroup_8_3.eContents().get(0);
		private final Assignment cInAssignment_8_3_1 = (Assignment)cGroup_8_3.eContents().get(1);
		private final CrossReference cInDataFieldCrossReference_8_3_1_0 = (CrossReference)cInAssignment_8_3_1.eContents().get(0);
		private final RuleCall cInDataFieldEStringParserRuleCall_8_3_1_0_1 = (RuleCall)cInDataFieldCrossReference_8_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_8_4 = (Keyword)cGroup_8.eContents().get(4);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cOutKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cOutAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final CrossReference cOutDataFieldCrossReference_9_1_0 = (CrossReference)cOutAssignment_9_1.eContents().get(0);
		private final RuleCall cOutDataFieldEStringParserRuleCall_9_1_0_1 = (RuleCall)cOutDataFieldCrossReference_9_1_0.eContents().get(1);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cValidValuesKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Assignment cValidValuesAssignment_10_2 = (Assignment)cGroup_10.eContents().get(2);
		private final RuleCall cValidValuesValueFieldParserRuleCall_10_2_0 = (RuleCall)cValidValuesAssignment_10_2.eContents().get(0);
		private final Group cGroup_10_3 = (Group)cGroup_10.eContents().get(3);
		private final Keyword cCommaKeyword_10_3_0 = (Keyword)cGroup_10_3.eContents().get(0);
		private final Assignment cValidValuesAssignment_10_3_1 = (Assignment)cGroup_10_3.eContents().get(1);
		private final RuleCall cValidValuesValueFieldParserRuleCall_10_3_1_0 = (RuleCall)cValidValuesAssignment_10_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10_4 = (Keyword)cGroup_10.eContents().get(4);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cInvalidValuesKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Assignment cInvalidValuesAssignment_11_2 = (Assignment)cGroup_11.eContents().get(2);
		private final RuleCall cInvalidValuesValueFieldParserRuleCall_11_2_0 = (RuleCall)cInvalidValuesAssignment_11_2.eContents().get(0);
		private final Group cGroup_11_3 = (Group)cGroup_11.eContents().get(3);
		private final Keyword cCommaKeyword_11_3_0 = (Keyword)cGroup_11_3.eContents().get(0);
		private final Assignment cInvalidValuesAssignment_11_3_1 = (Assignment)cGroup_11_3.eContents().get(1);
		private final RuleCall cInvalidValuesValueFieldParserRuleCall_11_3_1_0 = (RuleCall)cInvalidValuesAssignment_11_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11_4 = (Keyword)cGroup_11.eContents().get(4);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cMissingValuesKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_12_1 = (Keyword)cGroup_12.eContents().get(1);
		private final Assignment cMissingValuesAssignment_12_2 = (Assignment)cGroup_12.eContents().get(2);
		private final RuleCall cMissingValuesValueFieldParserRuleCall_12_2_0 = (RuleCall)cMissingValuesAssignment_12_2.eContents().get(0);
		private final Group cGroup_12_3 = (Group)cGroup_12.eContents().get(3);
		private final Keyword cCommaKeyword_12_3_0 = (Keyword)cGroup_12_3.eContents().get(0);
		private final Assignment cMissingValuesAssignment_12_3_1 = (Assignment)cGroup_12_3.eContents().get(1);
		private final RuleCall cMissingValuesValueFieldParserRuleCall_12_3_1_0 = (RuleCall)cMissingValuesAssignment_12_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12_4 = (Keyword)cGroup_12.eContents().get(4);
		private final Keyword cIntervalKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Keyword cLeftCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Assignment cIntervalAssignment_15 = (Assignment)cGroup.eContents().get(15);
		private final RuleCall cIntervalIntervalParserRuleCall_15_0 = (RuleCall)cIntervalAssignment_15.eContents().get(0);
		private final Group cGroup_16 = (Group)cGroup.eContents().get(16);
		private final Keyword cCommaKeyword_16_0 = (Keyword)cGroup_16.eContents().get(0);
		private final Assignment cIntervalAssignment_16_1 = (Assignment)cGroup_16.eContents().get(1);
		private final RuleCall cIntervalIntervalParserRuleCall_16_1_0 = (RuleCall)cIntervalAssignment_16_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_17 = (Keyword)cGroup.eContents().get(17);
		private final Keyword cRightCurlyBracketKeyword_18 = (Keyword)cGroup.eContents().get(18);
		
		//Continuous returns Continuous:
		//    (id?='id')?
		//    (target?='target')?
		//    'Continuous'
		//    name=EString
		//    '{'
		//        ('dataType' dataType=DataType)?
		//        ('displayName' displayName=EString)?
		//        ('numDecimals' numDecimals=EIntegerObject)?
		//        ('in' '(' in+=[DataField|EString] ( "," in+=[DataField|EString])* ')' )?
		//        ('out' out=[DataField|EString])?
		//        ('validValues' '{' validValues+=ValueField ( "," validValues+=ValueField)* '}' )?
		//        ('invalidValues' '{' invalidValues+=ValueField ( "," invalidValues+=ValueField)* '}' )?
		//        ('missingValues' '{' missingValues+=ValueField ( "," missingValues+=ValueField)* '}' )?
		//        'interval' '{' interval+=Interval ( "," interval+=Interval)* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//(id?='id')?
		//(target?='target')?
		//'Continuous'
		//name=EString
		//'{'
		//    ('dataType' dataType=DataType)?
		//    ('displayName' displayName=EString)?
		//    ('numDecimals' numDecimals=EIntegerObject)?
		//    ('in' '(' in+=[DataField|EString] ( "," in+=[DataField|EString])* ')' )?
		//    ('out' out=[DataField|EString])?
		//    ('validValues' '{' validValues+=ValueField ( "," validValues+=ValueField)* '}' )?
		//    ('invalidValues' '{' invalidValues+=ValueField ( "," invalidValues+=ValueField)* '}' )?
		//    ('missingValues' '{' missingValues+=ValueField ( "," missingValues+=ValueField)* '}' )?
		//    'interval' '{' interval+=Interval ( "," interval+=Interval)* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//(id?='id')?
		public Assignment getIdAssignment_0() { return cIdAssignment_0; }
		
		//'id'
		public Keyword getIdIdKeyword_0_0() { return cIdIdKeyword_0_0; }
		
		//(target?='target')?
		public Assignment getTargetAssignment_1() { return cTargetAssignment_1; }
		
		//'target'
		public Keyword getTargetTargetKeyword_1_0() { return cTargetTargetKeyword_1_0; }
		
		//'Continuous'
		public Keyword getContinuousKeyword_2() { return cContinuousKeyword_2; }
		
		//name=EString
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//('dataType' dataType=DataType)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'dataType'
		public Keyword getDataTypeKeyword_5_0() { return cDataTypeKeyword_5_0; }
		
		//dataType=DataType
		public Assignment getDataTypeAssignment_5_1() { return cDataTypeAssignment_5_1; }
		
		//DataType
		public RuleCall getDataTypeDataTypeEnumRuleCall_5_1_0() { return cDataTypeDataTypeEnumRuleCall_5_1_0; }
		
		//('displayName' displayName=EString)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'displayName'
		public Keyword getDisplayNameKeyword_6_0() { return cDisplayNameKeyword_6_0; }
		
		//displayName=EString
		public Assignment getDisplayNameAssignment_6_1() { return cDisplayNameAssignment_6_1; }
		
		//EString
		public RuleCall getDisplayNameEStringParserRuleCall_6_1_0() { return cDisplayNameEStringParserRuleCall_6_1_0; }
		
		//('numDecimals' numDecimals=EIntegerObject)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'numDecimals'
		public Keyword getNumDecimalsKeyword_7_0() { return cNumDecimalsKeyword_7_0; }
		
		//numDecimals=EIntegerObject
		public Assignment getNumDecimalsAssignment_7_1() { return cNumDecimalsAssignment_7_1; }
		
		//EIntegerObject
		public RuleCall getNumDecimalsEIntegerObjectParserRuleCall_7_1_0() { return cNumDecimalsEIntegerObjectParserRuleCall_7_1_0; }
		
		//('in' '(' in+=[DataField|EString] ( "," in+=[DataField|EString])* ')' )?
		public Group getGroup_8() { return cGroup_8; }
		
		//'in'
		public Keyword getInKeyword_8_0() { return cInKeyword_8_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_8_1() { return cLeftParenthesisKeyword_8_1; }
		
		//in+=[DataField|EString]
		public Assignment getInAssignment_8_2() { return cInAssignment_8_2; }
		
		//[DataField|EString]
		public CrossReference getInDataFieldCrossReference_8_2_0() { return cInDataFieldCrossReference_8_2_0; }
		
		//EString
		public RuleCall getInDataFieldEStringParserRuleCall_8_2_0_1() { return cInDataFieldEStringParserRuleCall_8_2_0_1; }
		
		//( "," in+=[DataField|EString])*
		public Group getGroup_8_3() { return cGroup_8_3; }
		
		//","
		public Keyword getCommaKeyword_8_3_0() { return cCommaKeyword_8_3_0; }
		
		//in+=[DataField|EString]
		public Assignment getInAssignment_8_3_1() { return cInAssignment_8_3_1; }
		
		//[DataField|EString]
		public CrossReference getInDataFieldCrossReference_8_3_1_0() { return cInDataFieldCrossReference_8_3_1_0; }
		
		//EString
		public RuleCall getInDataFieldEStringParserRuleCall_8_3_1_0_1() { return cInDataFieldEStringParserRuleCall_8_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_8_4() { return cRightParenthesisKeyword_8_4; }
		
		//('out' out=[DataField|EString])?
		public Group getGroup_9() { return cGroup_9; }
		
		//'out'
		public Keyword getOutKeyword_9_0() { return cOutKeyword_9_0; }
		
		//out=[DataField|EString]
		public Assignment getOutAssignment_9_1() { return cOutAssignment_9_1; }
		
		//[DataField|EString]
		public CrossReference getOutDataFieldCrossReference_9_1_0() { return cOutDataFieldCrossReference_9_1_0; }
		
		//EString
		public RuleCall getOutDataFieldEStringParserRuleCall_9_1_0_1() { return cOutDataFieldEStringParserRuleCall_9_1_0_1; }
		
		//('validValues' '{' validValues+=ValueField ( "," validValues+=ValueField)* '}' )?
		public Group getGroup_10() { return cGroup_10; }
		
		//'validValues'
		public Keyword getValidValuesKeyword_10_0() { return cValidValuesKeyword_10_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_10_1() { return cLeftCurlyBracketKeyword_10_1; }
		
		//validValues+=ValueField
		public Assignment getValidValuesAssignment_10_2() { return cValidValuesAssignment_10_2; }
		
		//ValueField
		public RuleCall getValidValuesValueFieldParserRuleCall_10_2_0() { return cValidValuesValueFieldParserRuleCall_10_2_0; }
		
		//( "," validValues+=ValueField)*
		public Group getGroup_10_3() { return cGroup_10_3; }
		
		//","
		public Keyword getCommaKeyword_10_3_0() { return cCommaKeyword_10_3_0; }
		
		//validValues+=ValueField
		public Assignment getValidValuesAssignment_10_3_1() { return cValidValuesAssignment_10_3_1; }
		
		//ValueField
		public RuleCall getValidValuesValueFieldParserRuleCall_10_3_1_0() { return cValidValuesValueFieldParserRuleCall_10_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10_4() { return cRightCurlyBracketKeyword_10_4; }
		
		//('invalidValues' '{' invalidValues+=ValueField ( "," invalidValues+=ValueField)* '}' )?
		public Group getGroup_11() { return cGroup_11; }
		
		//'invalidValues'
		public Keyword getInvalidValuesKeyword_11_0() { return cInvalidValuesKeyword_11_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_11_1() { return cLeftCurlyBracketKeyword_11_1; }
		
		//invalidValues+=ValueField
		public Assignment getInvalidValuesAssignment_11_2() { return cInvalidValuesAssignment_11_2; }
		
		//ValueField
		public RuleCall getInvalidValuesValueFieldParserRuleCall_11_2_0() { return cInvalidValuesValueFieldParserRuleCall_11_2_0; }
		
		//( "," invalidValues+=ValueField)*
		public Group getGroup_11_3() { return cGroup_11_3; }
		
		//","
		public Keyword getCommaKeyword_11_3_0() { return cCommaKeyword_11_3_0; }
		
		//invalidValues+=ValueField
		public Assignment getInvalidValuesAssignment_11_3_1() { return cInvalidValuesAssignment_11_3_1; }
		
		//ValueField
		public RuleCall getInvalidValuesValueFieldParserRuleCall_11_3_1_0() { return cInvalidValuesValueFieldParserRuleCall_11_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11_4() { return cRightCurlyBracketKeyword_11_4; }
		
		//('missingValues' '{' missingValues+=ValueField ( "," missingValues+=ValueField)* '}' )?
		public Group getGroup_12() { return cGroup_12; }
		
		//'missingValues'
		public Keyword getMissingValuesKeyword_12_0() { return cMissingValuesKeyword_12_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_12_1() { return cLeftCurlyBracketKeyword_12_1; }
		
		//missingValues+=ValueField
		public Assignment getMissingValuesAssignment_12_2() { return cMissingValuesAssignment_12_2; }
		
		//ValueField
		public RuleCall getMissingValuesValueFieldParserRuleCall_12_2_0() { return cMissingValuesValueFieldParserRuleCall_12_2_0; }
		
		//( "," missingValues+=ValueField)*
		public Group getGroup_12_3() { return cGroup_12_3; }
		
		//","
		public Keyword getCommaKeyword_12_3_0() { return cCommaKeyword_12_3_0; }
		
		//missingValues+=ValueField
		public Assignment getMissingValuesAssignment_12_3_1() { return cMissingValuesAssignment_12_3_1; }
		
		//ValueField
		public RuleCall getMissingValuesValueFieldParserRuleCall_12_3_1_0() { return cMissingValuesValueFieldParserRuleCall_12_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12_4() { return cRightCurlyBracketKeyword_12_4; }
		
		//'interval'
		public Keyword getIntervalKeyword_13() { return cIntervalKeyword_13; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_14() { return cLeftCurlyBracketKeyword_14; }
		
		//interval+=Interval
		public Assignment getIntervalAssignment_15() { return cIntervalAssignment_15; }
		
		//Interval
		public RuleCall getIntervalIntervalParserRuleCall_15_0() { return cIntervalIntervalParserRuleCall_15_0; }
		
		//( "," interval+=Interval)*
		public Group getGroup_16() { return cGroup_16; }
		
		//","
		public Keyword getCommaKeyword_16_0() { return cCommaKeyword_16_0; }
		
		//interval+=Interval
		public Assignment getIntervalAssignment_16_1() { return cIntervalAssignment_16_1; }
		
		//Interval
		public RuleCall getIntervalIntervalParserRuleCall_16_1_0() { return cIntervalIntervalParserRuleCall_16_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_17() { return cRightCurlyBracketKeyword_17; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_18() { return cRightCurlyBracketKeyword_18; }
	}
	public class DateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.Date");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIdAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIdIdKeyword_0_0 = (Keyword)cIdAssignment_0.eContents().get(0);
		private final Assignment cTargetAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cTargetTargetKeyword_1_0 = (Keyword)cTargetAssignment_1.eContents().get(0);
		private final Keyword cDateKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cDataTypeKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cDataTypeAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cDataTypeDataTypeEnumRuleCall_5_1_0 = (RuleCall)cDataTypeAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cDisplayNameKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cDisplayNameAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cDisplayNameEStringParserRuleCall_6_1_0 = (RuleCall)cDisplayNameAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cFormatKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cFormatAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cFormatEStringParserRuleCall_7_1_0 = (RuleCall)cFormatAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cInKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cInAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final CrossReference cInDataFieldCrossReference_8_2_0 = (CrossReference)cInAssignment_8_2.eContents().get(0);
		private final RuleCall cInDataFieldEStringParserRuleCall_8_2_0_1 = (RuleCall)cInDataFieldCrossReference_8_2_0.eContents().get(1);
		private final Group cGroup_8_3 = (Group)cGroup_8.eContents().get(3);
		private final Keyword cCommaKeyword_8_3_0 = (Keyword)cGroup_8_3.eContents().get(0);
		private final Assignment cInAssignment_8_3_1 = (Assignment)cGroup_8_3.eContents().get(1);
		private final CrossReference cInDataFieldCrossReference_8_3_1_0 = (CrossReference)cInAssignment_8_3_1.eContents().get(0);
		private final RuleCall cInDataFieldEStringParserRuleCall_8_3_1_0_1 = (RuleCall)cInDataFieldCrossReference_8_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_8_4 = (Keyword)cGroup_8.eContents().get(4);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cOutKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cOutAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final CrossReference cOutDataFieldCrossReference_9_1_0 = (CrossReference)cOutAssignment_9_1.eContents().get(0);
		private final RuleCall cOutDataFieldEStringParserRuleCall_9_1_0_1 = (RuleCall)cOutDataFieldCrossReference_9_1_0.eContents().get(1);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cValidValuesKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Assignment cValidValuesAssignment_10_2 = (Assignment)cGroup_10.eContents().get(2);
		private final RuleCall cValidValuesValueFieldParserRuleCall_10_2_0 = (RuleCall)cValidValuesAssignment_10_2.eContents().get(0);
		private final Group cGroup_10_3 = (Group)cGroup_10.eContents().get(3);
		private final Keyword cCommaKeyword_10_3_0 = (Keyword)cGroup_10_3.eContents().get(0);
		private final Assignment cValidValuesAssignment_10_3_1 = (Assignment)cGroup_10_3.eContents().get(1);
		private final RuleCall cValidValuesValueFieldParserRuleCall_10_3_1_0 = (RuleCall)cValidValuesAssignment_10_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10_4 = (Keyword)cGroup_10.eContents().get(4);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cInvalidValuesKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Assignment cInvalidValuesAssignment_11_2 = (Assignment)cGroup_11.eContents().get(2);
		private final RuleCall cInvalidValuesValueFieldParserRuleCall_11_2_0 = (RuleCall)cInvalidValuesAssignment_11_2.eContents().get(0);
		private final Group cGroup_11_3 = (Group)cGroup_11.eContents().get(3);
		private final Keyword cCommaKeyword_11_3_0 = (Keyword)cGroup_11_3.eContents().get(0);
		private final Assignment cInvalidValuesAssignment_11_3_1 = (Assignment)cGroup_11_3.eContents().get(1);
		private final RuleCall cInvalidValuesValueFieldParserRuleCall_11_3_1_0 = (RuleCall)cInvalidValuesAssignment_11_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11_4 = (Keyword)cGroup_11.eContents().get(4);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cMissingValuesKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_12_1 = (Keyword)cGroup_12.eContents().get(1);
		private final Assignment cMissingValuesAssignment_12_2 = (Assignment)cGroup_12.eContents().get(2);
		private final RuleCall cMissingValuesValueFieldParserRuleCall_12_2_0 = (RuleCall)cMissingValuesAssignment_12_2.eContents().get(0);
		private final Group cGroup_12_3 = (Group)cGroup_12.eContents().get(3);
		private final Keyword cCommaKeyword_12_3_0 = (Keyword)cGroup_12_3.eContents().get(0);
		private final Assignment cMissingValuesAssignment_12_3_1 = (Assignment)cGroup_12_3.eContents().get(1);
		private final RuleCall cMissingValuesValueFieldParserRuleCall_12_3_1_0 = (RuleCall)cMissingValuesAssignment_12_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12_4 = (Keyword)cGroup_12.eContents().get(4);
		private final Keyword cIntervaldateKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Keyword cLeftCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Assignment cIntervaldateAssignment_15 = (Assignment)cGroup.eContents().get(15);
		private final RuleCall cIntervaldateIntervalDateParserRuleCall_15_0 = (RuleCall)cIntervaldateAssignment_15.eContents().get(0);
		private final Group cGroup_16 = (Group)cGroup.eContents().get(16);
		private final Keyword cCommaKeyword_16_0 = (Keyword)cGroup_16.eContents().get(0);
		private final Assignment cIntervaldateAssignment_16_1 = (Assignment)cGroup_16.eContents().get(1);
		private final RuleCall cIntervaldateIntervalDateParserRuleCall_16_1_0 = (RuleCall)cIntervaldateAssignment_16_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_17 = (Keyword)cGroup.eContents().get(17);
		private final Keyword cRightCurlyBracketKeyword_18 = (Keyword)cGroup.eContents().get(18);
		
		//Date returns Date:
		//    (id?='id')?
		//    (target?='target')?
		//    'Date'
		//    name=EString
		//    '{'
		//        ('dataType' dataType=DataType)?
		//        ('displayName' displayName=EString)?
		//        ('format' format=EString)?
		//        ('in' '(' in+=[DataField|EString] ( "," in+=[DataField|EString])* ')' )?
		//        ('out' out=[DataField|EString])?
		//        ('validValues' '{' validValues+=ValueField ( "," validValues+=ValueField)* '}' )?
		//        ('invalidValues' '{' invalidValues+=ValueField ( "," invalidValues+=ValueField)* '}' )?
		//        ('missingValues' '{' missingValues+=ValueField ( "," missingValues+=ValueField)* '}' )?
		//        'intervaldate' '{' intervaldate+=IntervalDate ( "," intervaldate+=IntervalDate)* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//(id?='id')?
		//(target?='target')?
		//'Date'
		//name=EString
		//'{'
		//    ('dataType' dataType=DataType)?
		//    ('displayName' displayName=EString)?
		//    ('format' format=EString)?
		//    ('in' '(' in+=[DataField|EString] ( "," in+=[DataField|EString])* ')' )?
		//    ('out' out=[DataField|EString])?
		//    ('validValues' '{' validValues+=ValueField ( "," validValues+=ValueField)* '}' )?
		//    ('invalidValues' '{' invalidValues+=ValueField ( "," invalidValues+=ValueField)* '}' )?
		//    ('missingValues' '{' missingValues+=ValueField ( "," missingValues+=ValueField)* '}' )?
		//    'intervaldate' '{' intervaldate+=IntervalDate ( "," intervaldate+=IntervalDate)* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//(id?='id')?
		public Assignment getIdAssignment_0() { return cIdAssignment_0; }
		
		//'id'
		public Keyword getIdIdKeyword_0_0() { return cIdIdKeyword_0_0; }
		
		//(target?='target')?
		public Assignment getTargetAssignment_1() { return cTargetAssignment_1; }
		
		//'target'
		public Keyword getTargetTargetKeyword_1_0() { return cTargetTargetKeyword_1_0; }
		
		//'Date'
		public Keyword getDateKeyword_2() { return cDateKeyword_2; }
		
		//name=EString
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//('dataType' dataType=DataType)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'dataType'
		public Keyword getDataTypeKeyword_5_0() { return cDataTypeKeyword_5_0; }
		
		//dataType=DataType
		public Assignment getDataTypeAssignment_5_1() { return cDataTypeAssignment_5_1; }
		
		//DataType
		public RuleCall getDataTypeDataTypeEnumRuleCall_5_1_0() { return cDataTypeDataTypeEnumRuleCall_5_1_0; }
		
		//('displayName' displayName=EString)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'displayName'
		public Keyword getDisplayNameKeyword_6_0() { return cDisplayNameKeyword_6_0; }
		
		//displayName=EString
		public Assignment getDisplayNameAssignment_6_1() { return cDisplayNameAssignment_6_1; }
		
		//EString
		public RuleCall getDisplayNameEStringParserRuleCall_6_1_0() { return cDisplayNameEStringParserRuleCall_6_1_0; }
		
		//('format' format=EString)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'format'
		public Keyword getFormatKeyword_7_0() { return cFormatKeyword_7_0; }
		
		//format=EString
		public Assignment getFormatAssignment_7_1() { return cFormatAssignment_7_1; }
		
		//EString
		public RuleCall getFormatEStringParserRuleCall_7_1_0() { return cFormatEStringParserRuleCall_7_1_0; }
		
		//('in' '(' in+=[DataField|EString] ( "," in+=[DataField|EString])* ')' )?
		public Group getGroup_8() { return cGroup_8; }
		
		//'in'
		public Keyword getInKeyword_8_0() { return cInKeyword_8_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_8_1() { return cLeftParenthesisKeyword_8_1; }
		
		//in+=[DataField|EString]
		public Assignment getInAssignment_8_2() { return cInAssignment_8_2; }
		
		//[DataField|EString]
		public CrossReference getInDataFieldCrossReference_8_2_0() { return cInDataFieldCrossReference_8_2_0; }
		
		//EString
		public RuleCall getInDataFieldEStringParserRuleCall_8_2_0_1() { return cInDataFieldEStringParserRuleCall_8_2_0_1; }
		
		//( "," in+=[DataField|EString])*
		public Group getGroup_8_3() { return cGroup_8_3; }
		
		//","
		public Keyword getCommaKeyword_8_3_0() { return cCommaKeyword_8_3_0; }
		
		//in+=[DataField|EString]
		public Assignment getInAssignment_8_3_1() { return cInAssignment_8_3_1; }
		
		//[DataField|EString]
		public CrossReference getInDataFieldCrossReference_8_3_1_0() { return cInDataFieldCrossReference_8_3_1_0; }
		
		//EString
		public RuleCall getInDataFieldEStringParserRuleCall_8_3_1_0_1() { return cInDataFieldEStringParserRuleCall_8_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_8_4() { return cRightParenthesisKeyword_8_4; }
		
		//('out' out=[DataField|EString])?
		public Group getGroup_9() { return cGroup_9; }
		
		//'out'
		public Keyword getOutKeyword_9_0() { return cOutKeyword_9_0; }
		
		//out=[DataField|EString]
		public Assignment getOutAssignment_9_1() { return cOutAssignment_9_1; }
		
		//[DataField|EString]
		public CrossReference getOutDataFieldCrossReference_9_1_0() { return cOutDataFieldCrossReference_9_1_0; }
		
		//EString
		public RuleCall getOutDataFieldEStringParserRuleCall_9_1_0_1() { return cOutDataFieldEStringParserRuleCall_9_1_0_1; }
		
		//('validValues' '{' validValues+=ValueField ( "," validValues+=ValueField)* '}' )?
		public Group getGroup_10() { return cGroup_10; }
		
		//'validValues'
		public Keyword getValidValuesKeyword_10_0() { return cValidValuesKeyword_10_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_10_1() { return cLeftCurlyBracketKeyword_10_1; }
		
		//validValues+=ValueField
		public Assignment getValidValuesAssignment_10_2() { return cValidValuesAssignment_10_2; }
		
		//ValueField
		public RuleCall getValidValuesValueFieldParserRuleCall_10_2_0() { return cValidValuesValueFieldParserRuleCall_10_2_0; }
		
		//( "," validValues+=ValueField)*
		public Group getGroup_10_3() { return cGroup_10_3; }
		
		//","
		public Keyword getCommaKeyword_10_3_0() { return cCommaKeyword_10_3_0; }
		
		//validValues+=ValueField
		public Assignment getValidValuesAssignment_10_3_1() { return cValidValuesAssignment_10_3_1; }
		
		//ValueField
		public RuleCall getValidValuesValueFieldParserRuleCall_10_3_1_0() { return cValidValuesValueFieldParserRuleCall_10_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10_4() { return cRightCurlyBracketKeyword_10_4; }
		
		//('invalidValues' '{' invalidValues+=ValueField ( "," invalidValues+=ValueField)* '}' )?
		public Group getGroup_11() { return cGroup_11; }
		
		//'invalidValues'
		public Keyword getInvalidValuesKeyword_11_0() { return cInvalidValuesKeyword_11_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_11_1() { return cLeftCurlyBracketKeyword_11_1; }
		
		//invalidValues+=ValueField
		public Assignment getInvalidValuesAssignment_11_2() { return cInvalidValuesAssignment_11_2; }
		
		//ValueField
		public RuleCall getInvalidValuesValueFieldParserRuleCall_11_2_0() { return cInvalidValuesValueFieldParserRuleCall_11_2_0; }
		
		//( "," invalidValues+=ValueField)*
		public Group getGroup_11_3() { return cGroup_11_3; }
		
		//","
		public Keyword getCommaKeyword_11_3_0() { return cCommaKeyword_11_3_0; }
		
		//invalidValues+=ValueField
		public Assignment getInvalidValuesAssignment_11_3_1() { return cInvalidValuesAssignment_11_3_1; }
		
		//ValueField
		public RuleCall getInvalidValuesValueFieldParserRuleCall_11_3_1_0() { return cInvalidValuesValueFieldParserRuleCall_11_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11_4() { return cRightCurlyBracketKeyword_11_4; }
		
		//('missingValues' '{' missingValues+=ValueField ( "," missingValues+=ValueField)* '}' )?
		public Group getGroup_12() { return cGroup_12; }
		
		//'missingValues'
		public Keyword getMissingValuesKeyword_12_0() { return cMissingValuesKeyword_12_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_12_1() { return cLeftCurlyBracketKeyword_12_1; }
		
		//missingValues+=ValueField
		public Assignment getMissingValuesAssignment_12_2() { return cMissingValuesAssignment_12_2; }
		
		//ValueField
		public RuleCall getMissingValuesValueFieldParserRuleCall_12_2_0() { return cMissingValuesValueFieldParserRuleCall_12_2_0; }
		
		//( "," missingValues+=ValueField)*
		public Group getGroup_12_3() { return cGroup_12_3; }
		
		//","
		public Keyword getCommaKeyword_12_3_0() { return cCommaKeyword_12_3_0; }
		
		//missingValues+=ValueField
		public Assignment getMissingValuesAssignment_12_3_1() { return cMissingValuesAssignment_12_3_1; }
		
		//ValueField
		public RuleCall getMissingValuesValueFieldParserRuleCall_12_3_1_0() { return cMissingValuesValueFieldParserRuleCall_12_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12_4() { return cRightCurlyBracketKeyword_12_4; }
		
		//'intervaldate'
		public Keyword getIntervaldateKeyword_13() { return cIntervaldateKeyword_13; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_14() { return cLeftCurlyBracketKeyword_14; }
		
		//intervaldate+=IntervalDate
		public Assignment getIntervaldateAssignment_15() { return cIntervaldateAssignment_15; }
		
		//IntervalDate
		public RuleCall getIntervaldateIntervalDateParserRuleCall_15_0() { return cIntervaldateIntervalDateParserRuleCall_15_0; }
		
		//( "," intervaldate+=IntervalDate)*
		public Group getGroup_16() { return cGroup_16; }
		
		//","
		public Keyword getCommaKeyword_16_0() { return cCommaKeyword_16_0; }
		
		//intervaldate+=IntervalDate
		public Assignment getIntervaldateAssignment_16_1() { return cIntervaldateAssignment_16_1; }
		
		//IntervalDate
		public RuleCall getIntervaldateIntervalDateParserRuleCall_16_1_0() { return cIntervaldateIntervalDateParserRuleCall_16_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_17() { return cRightCurlyBracketKeyword_17; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_18() { return cRightCurlyBracketKeyword_18; }
	}
	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt returns ecore::EInt:
		//    '-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class IntervalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.Interval");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cIntervalAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cIntervalKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftMarginKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cLeftMarginAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cLeftMarginEFloatParserRuleCall_3_1_0 = (RuleCall)cLeftMarginAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cRightMarginKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cRightMarginAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cRightMarginEFloatParserRuleCall_4_1_0 = (RuleCall)cRightMarginAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cClousureKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cClousureAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cClousureClosureTypeEnumRuleCall_5_1_0 = (RuleCall)cClousureAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Interval returns Interval:
		//    {Interval}
		//    'Interval'
		//    '{'
		//        ('leftMargin' leftMargin=EFloat)?
		//        ('rightMargin' rightMargin=EFloat)?
		//        ('clousure' clousure=ClosureType)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Interval}
		//'Interval'
		//'{'
		//    ('leftMargin' leftMargin=EFloat)?
		//    ('rightMargin' rightMargin=EFloat)?
		//    ('clousure' clousure=ClosureType)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Interval}
		public Action getIntervalAction_0() { return cIntervalAction_0; }
		
		//'Interval'
		public Keyword getIntervalKeyword_1() { return cIntervalKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('leftMargin' leftMargin=EFloat)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'leftMargin'
		public Keyword getLeftMarginKeyword_3_0() { return cLeftMarginKeyword_3_0; }
		
		//leftMargin=EFloat
		public Assignment getLeftMarginAssignment_3_1() { return cLeftMarginAssignment_3_1; }
		
		//EFloat
		public RuleCall getLeftMarginEFloatParserRuleCall_3_1_0() { return cLeftMarginEFloatParserRuleCall_3_1_0; }
		
		//('rightMargin' rightMargin=EFloat)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'rightMargin'
		public Keyword getRightMarginKeyword_4_0() { return cRightMarginKeyword_4_0; }
		
		//rightMargin=EFloat
		public Assignment getRightMarginAssignment_4_1() { return cRightMarginAssignment_4_1; }
		
		//EFloat
		public RuleCall getRightMarginEFloatParserRuleCall_4_1_0() { return cRightMarginEFloatParserRuleCall_4_1_0; }
		
		//('clousure' clousure=ClosureType)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'clousure'
		public Keyword getClousureKeyword_5_0() { return cClousureKeyword_5_0; }
		
		//clousure=ClosureType
		public Assignment getClousureAssignment_5_1() { return cClousureAssignment_5_1; }
		
		//ClosureType
		public RuleCall getClousureClosureTypeEnumRuleCall_5_1_0() { return cClousureClosureTypeEnumRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class EIntegerObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.EIntegerObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EIntegerObject returns ecore::EIntegerObject:
		//    '-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class EFloatElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.EFloat");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cINTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_4_0 = (Alternatives)cGroup_4.eContents().get(0);
		private final Keyword cEKeyword_4_0_0 = (Keyword)cAlternatives_4_0.eContents().get(0);
		private final Keyword cEKeyword_4_0_1 = (Keyword)cAlternatives_4_0.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_4_2 = (RuleCall)cGroup_4.eContents().get(2);
		
		//EFloat returns ecore::EFloat:
		//    '-'? INT? '.' INT (('E'|'e') '-'? INT)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT? '.' INT (('E'|'e') '-'? INT)?
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT?
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
		
		//'.'
		public Keyword getFullStopKeyword_2() { return cFullStopKeyword_2; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_3() { return cINTTerminalRuleCall_3; }
		
		//(('E'|'e') '-'? INT)?
		public Group getGroup_4() { return cGroup_4; }
		
		//('E'|'e')
		public Alternatives getAlternatives_4_0() { return cAlternatives_4_0; }
		
		//'E'
		public Keyword getEKeyword_4_0_0() { return cEKeyword_4_0_0; }
		
		//'e'
		public Keyword getEKeyword_4_0_1() { return cEKeyword_4_0_1; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_4_1() { return cHyphenMinusKeyword_4_1; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_4_2() { return cINTTerminalRuleCall_4_2; }
	}
	public class IntervalDateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.IntervalDate");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cIntervalDateAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cIntervalDateKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cRightMarginKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cRightMarginAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cRightMarginEStringParserRuleCall_3_1_0 = (RuleCall)cRightMarginAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cClousureKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cClousureAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cClousureClosureTypeEnumRuleCall_4_1_0 = (RuleCall)cClousureAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLeftMarginKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cLeftMarginAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cLeftMarginEStringParserRuleCall_5_1_0 = (RuleCall)cLeftMarginAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//IntervalDate returns IntervalDate:
		//    {IntervalDate}
		//    'IntervalDate'
		//    '{'
		//        ('rightMargin' rightMargin=EString)?
		//        ('clousure' clousure=ClosureType)?
		//        ('leftMargin' leftMargin=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{IntervalDate}
		//'IntervalDate'
		//'{'
		//    ('rightMargin' rightMargin=EString)?
		//    ('clousure' clousure=ClosureType)?
		//    ('leftMargin' leftMargin=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{IntervalDate}
		public Action getIntervalDateAction_0() { return cIntervalDateAction_0; }
		
		//'IntervalDate'
		public Keyword getIntervalDateKeyword_1() { return cIntervalDateKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('rightMargin' rightMargin=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'rightMargin'
		public Keyword getRightMarginKeyword_3_0() { return cRightMarginKeyword_3_0; }
		
		//rightMargin=EString
		public Assignment getRightMarginAssignment_3_1() { return cRightMarginAssignment_3_1; }
		
		//EString
		public RuleCall getRightMarginEStringParserRuleCall_3_1_0() { return cRightMarginEStringParserRuleCall_3_1_0; }
		
		//('clousure' clousure=ClosureType)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'clousure'
		public Keyword getClousureKeyword_4_0() { return cClousureKeyword_4_0; }
		
		//clousure=ClosureType
		public Assignment getClousureAssignment_4_1() { return cClousureAssignment_4_1; }
		
		//ClosureType
		public RuleCall getClousureClosureTypeEnumRuleCall_4_1_0() { return cClousureClosureTypeEnumRuleCall_4_1_0; }
		
		//('leftMargin' leftMargin=EString)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'leftMargin'
		public Keyword getLeftMarginKeyword_5_0() { return cLeftMarginKeyword_5_0; }
		
		//leftMargin=EString
		public Assignment getLeftMarginAssignment_5_1() { return cLeftMarginAssignment_5_1; }
		
		//EString
		public RuleCall getLeftMarginEStringParserRuleCall_5_1_0() { return cLeftMarginEStringParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class TestElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.Test");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTestAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTestKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cPathKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cPathAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cPathEStringParserRuleCall_3_1_0 = (RuleCall)cPathAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTrainSizeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTrainSizeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTrainSizeEFloatParserRuleCall_4_1_0 = (RuleCall)cTrainSizeAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cTestSizeKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cTestSizeAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cTestSizeEFloatParserRuleCall_5_1_0 = (RuleCall)cTestSizeAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Test returns Test:
		//    {Test}
		//    'Test'
		//    '{'
		//        ('path' path=EString)?
		//        ('trainSize' trainSize=EFloat)?
		//        ('testSize' testSize=EFloat)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Test}
		//'Test'
		//'{'
		//    ('path' path=EString)?
		//    ('trainSize' trainSize=EFloat)?
		//    ('testSize' testSize=EFloat)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Test}
		public Action getTestAction_0() { return cTestAction_0; }
		
		//'Test'
		public Keyword getTestKeyword_1() { return cTestKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('path' path=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'path'
		public Keyword getPathKeyword_3_0() { return cPathKeyword_3_0; }
		
		//path=EString
		public Assignment getPathAssignment_3_1() { return cPathAssignment_3_1; }
		
		//EString
		public RuleCall getPathEStringParserRuleCall_3_1_0() { return cPathEStringParserRuleCall_3_1_0; }
		
		//('trainSize' trainSize=EFloat)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'trainSize'
		public Keyword getTrainSizeKeyword_4_0() { return cTrainSizeKeyword_4_0; }
		
		//trainSize=EFloat
		public Assignment getTrainSizeAssignment_4_1() { return cTrainSizeAssignment_4_1; }
		
		//EFloat
		public RuleCall getTrainSizeEFloatParserRuleCall_4_1_0() { return cTrainSizeEFloatParserRuleCall_4_1_0; }
		
		//('testSize' testSize=EFloat)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'testSize'
		public Keyword getTestSizeKeyword_5_0() { return cTestSizeKeyword_5_0; }
		
		//testSize=EFloat
		public Assignment getTestSizeAssignment_5_1() { return cTestSizeAssignment_5_1; }
		
		//EFloat
		public RuleCall getTestSizeEFloatParserRuleCall_5_1_0() { return cTestSizeEFloatParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class MapElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.Map");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMapAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMapKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cInValueKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cInValueAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cInValueEStringParserRuleCall_4_1_0 = (RuleCall)cInValueAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cOutvalueKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cOutvalueAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cOutvalueEStringParserRuleCall_5_1_0 = (RuleCall)cOutvalueAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cMapOperationKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cMapOperationAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cMapOperationMapOperationEnumRuleCall_6_1_0 = (RuleCall)cMapOperationAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Map returns Map:
		//    {Map}
		//    'Map'
		//    name=EString
		//    '{'
		//        ('inValue' inValue=EString)?
		//        ('outvalue' outvalue=EString)?
		//        ('mapOperation' mapOperation=MapOperation)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Map}
		//'Map'
		//name=EString
		//'{'
		//    ('inValue' inValue=EString)?
		//    ('outvalue' outvalue=EString)?
		//    ('mapOperation' mapOperation=MapOperation)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Map}
		public Action getMapAction_0() { return cMapAction_0; }
		
		//'Map'
		public Keyword getMapKeyword_1() { return cMapKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('inValue' inValue=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'inValue'
		public Keyword getInValueKeyword_4_0() { return cInValueKeyword_4_0; }
		
		//inValue=EString
		public Assignment getInValueAssignment_4_1() { return cInValueAssignment_4_1; }
		
		//EString
		public RuleCall getInValueEStringParserRuleCall_4_1_0() { return cInValueEStringParserRuleCall_4_1_0; }
		
		//('outvalue' outvalue=EString)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'outvalue'
		public Keyword getOutvalueKeyword_5_0() { return cOutvalueKeyword_5_0; }
		
		//outvalue=EString
		public Assignment getOutvalueAssignment_5_1() { return cOutvalueAssignment_5_1; }
		
		//EString
		public RuleCall getOutvalueEStringParserRuleCall_5_1_0() { return cOutvalueEStringParserRuleCall_5_1_0; }
		
		//('mapOperation' mapOperation=MapOperation)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'mapOperation'
		public Keyword getMapOperationKeyword_6_0() { return cMapOperationKeyword_6_0; }
		
		//mapOperation=MapOperation
		public Assignment getMapOperationAssignment_6_1() { return cMapOperationAssignment_6_1; }
		
		//MapOperation
		public RuleCall getMapOperationMapOperationEnumRuleCall_6_1_0() { return cMapOperationMapOperationEnumRuleCall_6_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class PrimitiveElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.Primitive");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPrimitiveAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPrimitiveKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cValueKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cValueAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cValueEStringParserRuleCall_4_1_0 = (RuleCall)cValueAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cDataTypeKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cDataTypeAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cDataTypeDataTypeEnumRuleCall_5_1_0 = (RuleCall)cDataTypeAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Primitive returns Primitive:
		//    {Primitive}
		//    'Primitive'
		//    name=EString
		//    '{'
		//        ('value' value=EString)?
		//        ('dataType' dataType=DataType)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Primitive}
		//'Primitive'
		//name=EString
		//'{'
		//    ('value' value=EString)?
		//    ('dataType' dataType=DataType)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Primitive}
		public Action getPrimitiveAction_0() { return cPrimitiveAction_0; }
		
		//'Primitive'
		public Keyword getPrimitiveKeyword_1() { return cPrimitiveKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('value' value=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'value'
		public Keyword getValueKeyword_4_0() { return cValueKeyword_4_0; }
		
		//value=EString
		public Assignment getValueAssignment_4_1() { return cValueAssignment_4_1; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_4_1_0() { return cValueEStringParserRuleCall_4_1_0; }
		
		//('dataType' dataType=DataType)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'dataType'
		public Keyword getDataTypeKeyword_5_0() { return cDataTypeKeyword_5_0; }
		
		//dataType=DataType
		public Assignment getDataTypeAssignment_5_1() { return cDataTypeAssignment_5_1; }
		
		//DataType
		public RuleCall getDataTypeDataTypeEnumRuleCall_5_1_0() { return cDataTypeDataTypeEnumRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class DerivedFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.DerivedField");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDerivedFieldKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cDer_dataFieldKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cDer_dataFieldAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cDer_dataFieldDataFieldCrossReference_4_0 = (CrossReference)cDer_dataFieldAssignment_4.eContents().get(0);
		private final RuleCall cDer_dataFieldDataFieldEStringParserRuleCall_4_0_1 = (RuleCall)cDer_dataFieldDataFieldCrossReference_4_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//DerivedField returns DerivedField:
		//    'DerivedField'
		//    name=EString
		//    '{'
		//        'der_dataField' der_dataField=[DataField|EString]
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'DerivedField'
		//name=EString
		//'{'
		//    'der_dataField' der_dataField=[DataField|EString]
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'DerivedField'
		public Keyword getDerivedFieldKeyword_0() { return cDerivedFieldKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'der_dataField'
		public Keyword getDer_dataFieldKeyword_3() { return cDer_dataFieldKeyword_3; }
		
		//der_dataField=[DataField|EString]
		public Assignment getDer_dataFieldAssignment_4() { return cDer_dataFieldAssignment_4; }
		
		//[DataField|EString]
		public CrossReference getDer_dataFieldDataFieldCrossReference_4_0() { return cDer_dataFieldDataFieldCrossReference_4_0; }
		
		//EString
		public RuleCall getDer_dataFieldDataFieldEStringParserRuleCall_4_0_1() { return cDer_dataFieldDataFieldEStringParserRuleCall_4_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class FilterValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.FilterValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFilterValueAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cFilterValueKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cFilterTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cFilterTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cFilterTypeFilterTypeEnumRuleCall_4_1_0 = (RuleCall)cFilterTypeAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cPrimitiveKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cPrimitiveAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cPrimitivePrimitiveParserRuleCall_5_2_0 = (RuleCall)cPrimitiveAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cPrimitiveAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cPrimitivePrimitiveParserRuleCall_5_3_1_0 = (RuleCall)cPrimitiveAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cMatchingvalueKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cMatchingvalueAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cMatchingvalueMatchingValueParserRuleCall_6_2_0 = (RuleCall)cMatchingvalueAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cMatchingvalueAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cMatchingvalueMatchingValueParserRuleCall_6_3_1_0 = (RuleCall)cMatchingvalueAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//FilterValue returns FilterValue:
		//    {FilterValue}
		//    'FilterValue'
		//    name=EString
		//    '{'
		//        ('filterType' filterType=FilterType)?
		//        ('primitive' '{' primitive+=Primitive ( "," primitive+=Primitive)* '}' )?
		//        ('matchingvalue' '{' matchingvalue+=MatchingValue ( "," matchingvalue+=MatchingValue)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{FilterValue}
		//'FilterValue'
		//name=EString
		//'{'
		//    ('filterType' filterType=FilterType)?
		//    ('primitive' '{' primitive+=Primitive ( "," primitive+=Primitive)* '}' )?
		//    ('matchingvalue' '{' matchingvalue+=MatchingValue ( "," matchingvalue+=MatchingValue)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{FilterValue}
		public Action getFilterValueAction_0() { return cFilterValueAction_0; }
		
		//'FilterValue'
		public Keyword getFilterValueKeyword_1() { return cFilterValueKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('filterType' filterType=FilterType)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'filterType'
		public Keyword getFilterTypeKeyword_4_0() { return cFilterTypeKeyword_4_0; }
		
		//filterType=FilterType
		public Assignment getFilterTypeAssignment_4_1() { return cFilterTypeAssignment_4_1; }
		
		//FilterType
		public RuleCall getFilterTypeFilterTypeEnumRuleCall_4_1_0() { return cFilterTypeFilterTypeEnumRuleCall_4_1_0; }
		
		//('primitive' '{' primitive+=Primitive ( "," primitive+=Primitive)* '}' )?
		public Group getGroup_5() { return cGroup_5; }
		
		//'primitive'
		public Keyword getPrimitiveKeyword_5_0() { return cPrimitiveKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//primitive+=Primitive
		public Assignment getPrimitiveAssignment_5_2() { return cPrimitiveAssignment_5_2; }
		
		//Primitive
		public RuleCall getPrimitivePrimitiveParserRuleCall_5_2_0() { return cPrimitivePrimitiveParserRuleCall_5_2_0; }
		
		//( "," primitive+=Primitive)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//primitive+=Primitive
		public Assignment getPrimitiveAssignment_5_3_1() { return cPrimitiveAssignment_5_3_1; }
		
		//Primitive
		public RuleCall getPrimitivePrimitiveParserRuleCall_5_3_1_0() { return cPrimitivePrimitiveParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//('matchingvalue' '{' matchingvalue+=MatchingValue ( "," matchingvalue+=MatchingValue)* '}' )?
		public Group getGroup_6() { return cGroup_6; }
		
		//'matchingvalue'
		public Keyword getMatchingvalueKeyword_6_0() { return cMatchingvalueKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//matchingvalue+=MatchingValue
		public Assignment getMatchingvalueAssignment_6_2() { return cMatchingvalueAssignment_6_2; }
		
		//MatchingValue
		public RuleCall getMatchingvalueMatchingValueParserRuleCall_6_2_0() { return cMatchingvalueMatchingValueParserRuleCall_6_2_0; }
		
		//( "," matchingvalue+=MatchingValue)*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//matchingvalue+=MatchingValue
		public Assignment getMatchingvalueAssignment_6_3_1() { return cMatchingvalueAssignment_6_3_1; }
		
		//MatchingValue
		public RuleCall getMatchingvalueMatchingValueParserRuleCall_6_3_1_0() { return cMatchingvalueMatchingValueParserRuleCall_6_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class RangeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.Range");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRangeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cMinInfinityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cMinInfinityMinInfinityKeyword_1_0 = (Keyword)cMinInfinityAssignment_1.eContents().get(0);
		private final Assignment cMaxInfinityAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cMaxInfinityMaxInfinityKeyword_2_0 = (Keyword)cMaxInfinityAssignment_2.eContents().get(0);
		private final Keyword cRangeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameEStringParserRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cMinKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cMinAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cMinEFloatParserRuleCall_6_1_0 = (RuleCall)cMinAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cMaxKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cMaxAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cMaxEFloatParserRuleCall_7_1_0 = (RuleCall)cMaxAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cClousureKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cClousureAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cClousureClosureTypeEnumRuleCall_8_1_0 = (RuleCall)cClousureAssignment_8_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Range returns Range:
		//    {Range}
		//    (minInfinity?='minInfinity')?
		//    (maxInfinity?='maxInfinity')?
		//    'Range'
		//    name=EString
		//    '{'
		//        ('min' min=EFloat)?
		//        ('max' max=EFloat)?
		//        ('clousure' clousure=ClosureType)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Range}
		//(minInfinity?='minInfinity')?
		//(maxInfinity?='maxInfinity')?
		//'Range'
		//name=EString
		//'{'
		//    ('min' min=EFloat)?
		//    ('max' max=EFloat)?
		//    ('clousure' clousure=ClosureType)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Range}
		public Action getRangeAction_0() { return cRangeAction_0; }
		
		//(minInfinity?='minInfinity')?
		public Assignment getMinInfinityAssignment_1() { return cMinInfinityAssignment_1; }
		
		//'minInfinity'
		public Keyword getMinInfinityMinInfinityKeyword_1_0() { return cMinInfinityMinInfinityKeyword_1_0; }
		
		//(maxInfinity?='maxInfinity')?
		public Assignment getMaxInfinityAssignment_2() { return cMaxInfinityAssignment_2; }
		
		//'maxInfinity'
		public Keyword getMaxInfinityMaxInfinityKeyword_2_0() { return cMaxInfinityMaxInfinityKeyword_2_0; }
		
		//'Range'
		public Keyword getRangeKeyword_3() { return cRangeKeyword_3; }
		
		//name=EString
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_4_0() { return cNameEStringParserRuleCall_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//('min' min=EFloat)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'min'
		public Keyword getMinKeyword_6_0() { return cMinKeyword_6_0; }
		
		//min=EFloat
		public Assignment getMinAssignment_6_1() { return cMinAssignment_6_1; }
		
		//EFloat
		public RuleCall getMinEFloatParserRuleCall_6_1_0() { return cMinEFloatParserRuleCall_6_1_0; }
		
		//('max' max=EFloat)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'max'
		public Keyword getMaxKeyword_7_0() { return cMaxKeyword_7_0; }
		
		//max=EFloat
		public Assignment getMaxAssignment_7_1() { return cMaxAssignment_7_1; }
		
		//EFloat
		public RuleCall getMaxEFloatParserRuleCall_7_1_0() { return cMaxEFloatParserRuleCall_7_1_0; }
		
		//('clousure' clousure=ClosureType)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'clousure'
		public Keyword getClousureKeyword_8_0() { return cClousureKeyword_8_0; }
		
		//clousure=ClosureType
		public Assignment getClousureAssignment_8_1() { return cClousureAssignment_8_1; }
		
		//ClosureType
		public RuleCall getClousureClosureTypeEnumRuleCall_8_1_0() { return cClousureClosureTypeEnumRuleCall_8_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class SpecialValuesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.SpecialValues");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSpecialValuesAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSpecialValuesKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cSpecialTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cSpecialTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cSpecialTypeSpecialValueEnumRuleCall_4_1_0 = (RuleCall)cSpecialTypeAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//SpecialValues returns SpecialValues:
		//    {SpecialValues}
		//    'SpecialValues'
		//    name=EString
		//    '{'
		//        ('specialType' specialType=SpecialValue)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{SpecialValues}
		//'SpecialValues'
		//name=EString
		//'{'
		//    ('specialType' specialType=SpecialValue)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{SpecialValues}
		public Action getSpecialValuesAction_0() { return cSpecialValuesAction_0; }
		
		//'SpecialValues'
		public Keyword getSpecialValuesKeyword_1() { return cSpecialValuesKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('specialType' specialType=SpecialValue)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'specialType'
		public Keyword getSpecialTypeKeyword_4_0() { return cSpecialTypeKeyword_4_0; }
		
		//specialType=SpecialValue
		public Assignment getSpecialTypeAssignment_4_1() { return cSpecialTypeAssignment_4_1; }
		
		//SpecialValue
		public RuleCall getSpecialTypeSpecialValueEnumRuleCall_4_1_0() { return cSpecialTypeSpecialValueEnumRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class DiscretizeBinElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.DiscretizeBin");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDiscretizeBinKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cBinValueKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cBinValueAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cBinValueEStringParserRuleCall_3_1_0 = (RuleCall)cBinValueAssignment_3_1.eContents().get(0);
		private final Keyword cIntervalKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cIntervalAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cIntervalIntervalParserRuleCall_6_0 = (RuleCall)cIntervalAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommaKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cIntervalAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cIntervalIntervalParserRuleCall_7_1_0 = (RuleCall)cIntervalAssignment_7_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//DiscretizeBin returns DiscretizeBin:
		//    'DiscretizeBin'
		//    name=EString
		//    '{'
		//        ('binValue' binValue=EString)?
		//        'interval' '{' interval+=Interval ( "," interval+=Interval)* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'DiscretizeBin'
		//name=EString
		//'{'
		//    ('binValue' binValue=EString)?
		//    'interval' '{' interval+=Interval ( "," interval+=Interval)* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'DiscretizeBin'
		public Keyword getDiscretizeBinKeyword_0() { return cDiscretizeBinKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('binValue' binValue=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'binValue'
		public Keyword getBinValueKeyword_3_0() { return cBinValueKeyword_3_0; }
		
		//binValue=EString
		public Assignment getBinValueAssignment_3_1() { return cBinValueAssignment_3_1; }
		
		//EString
		public RuleCall getBinValueEStringParserRuleCall_3_1_0() { return cBinValueEStringParserRuleCall_3_1_0; }
		
		//'interval'
		public Keyword getIntervalKeyword_4() { return cIntervalKeyword_4; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//interval+=Interval
		public Assignment getIntervalAssignment_6() { return cIntervalAssignment_6; }
		
		//Interval
		public RuleCall getIntervalIntervalParserRuleCall_6_0() { return cIntervalIntervalParserRuleCall_6_0; }
		
		//( "," interval+=Interval)*
		public Group getGroup_7() { return cGroup_7; }
		
		//","
		public Keyword getCommaKeyword_7_0() { return cCommaKeyword_7_0; }
		
		//interval+=Interval
		public Assignment getIntervalAssignment_7_1() { return cIntervalAssignment_7_1; }
		
		//Interval
		public RuleCall getIntervalIntervalParserRuleCall_7_1_0() { return cIntervalIntervalParserRuleCall_7_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class CastTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.CastType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCastTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCastTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTypeDataTypeEnumRuleCall_4_1_0 = (RuleCall)cTypeAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//CastType returns CastType:
		//    {CastType}
		//    'CastType'
		//    name=EString
		//    '{'
		//        ('type' type=DataType)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{CastType}
		//'CastType'
		//name=EString
		//'{'
		//    ('type' type=DataType)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{CastType}
		public Action getCastTypeAction_0() { return cCastTypeAction_0; }
		
		//'CastType'
		public Keyword getCastTypeKeyword_1() { return cCastTypeKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('type' type=DataType)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'type'
		public Keyword getTypeKeyword_4_0() { return cTypeKeyword_4_0; }
		
		//type=DataType
		public Assignment getTypeAssignment_4_1() { return cTypeAssignment_4_1; }
		
		//DataType
		public RuleCall getTypeDataTypeEnumRuleCall_4_1_0() { return cTypeDataTypeEnumRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class DerivedValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.DerivedValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDerivedValueAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDerivedValueKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cImputeValueKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cImputeValueAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cImputeValueSpecialValueEnumRuleCall_4_1_0 = (RuleCall)cImputeValueAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cTypeKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cTypeAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cTypeDerivedTypeEnumRuleCall_5_1_0 = (RuleCall)cTypeAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//DerivedValue returns DerivedValue:
		//    {DerivedValue}
		//    'DerivedValue'
		//    name=EString
		//    '{'
		//        ('imputeValue' imputeValue=SpecialValue)?
		//        ('type' type=DerivedType)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{DerivedValue}
		//'DerivedValue'
		//name=EString
		//'{'
		//    ('imputeValue' imputeValue=SpecialValue)?
		//    ('type' type=DerivedType)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{DerivedValue}
		public Action getDerivedValueAction_0() { return cDerivedValueAction_0; }
		
		//'DerivedValue'
		public Keyword getDerivedValueKeyword_1() { return cDerivedValueKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('imputeValue' imputeValue=SpecialValue)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'imputeValue'
		public Keyword getImputeValueKeyword_4_0() { return cImputeValueKeyword_4_0; }
		
		//imputeValue=SpecialValue
		public Assignment getImputeValueAssignment_4_1() { return cImputeValueAssignment_4_1; }
		
		//SpecialValue
		public RuleCall getImputeValueSpecialValueEnumRuleCall_4_1_0() { return cImputeValueSpecialValueEnumRuleCall_4_1_0; }
		
		//('type' type=DerivedType)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'type'
		public Keyword getTypeKeyword_5_0() { return cTypeKeyword_5_0; }
		
		//type=DerivedType
		public Assignment getTypeAssignment_5_1() { return cTypeAssignment_5_1; }
		
		//DerivedType
		public RuleCall getTypeDerivedTypeEnumRuleCall_5_1_0() { return cTypeDerivedTypeEnumRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class NumOpElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.NumOp");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cNumOpAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cNumOpKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cImputeValueKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cImputeValueAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cImputeValueSpecialValueEnumRuleCall_4_1_0 = (RuleCall)cImputeValueAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cOperationKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cOperationAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cOperationOperationEnumRuleCall_5_1_0 = (RuleCall)cOperationAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//NumOp returns NumOp:
		//    {NumOp}
		//    'NumOp'
		//    name=EString
		//    '{'
		//        ('imputeValue' imputeValue=SpecialValue)?
		//        ('operation' operation=Operation)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{NumOp}
		//'NumOp'
		//name=EString
		//'{'
		//    ('imputeValue' imputeValue=SpecialValue)?
		//    ('operation' operation=Operation)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{NumOp}
		public Action getNumOpAction_0() { return cNumOpAction_0; }
		
		//'NumOp'
		public Keyword getNumOpKeyword_1() { return cNumOpKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('imputeValue' imputeValue=SpecialValue)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'imputeValue'
		public Keyword getImputeValueKeyword_4_0() { return cImputeValueKeyword_4_0; }
		
		//imputeValue=SpecialValue
		public Assignment getImputeValueAssignment_4_1() { return cImputeValueAssignment_4_1; }
		
		//SpecialValue
		public RuleCall getImputeValueSpecialValueEnumRuleCall_4_1_0() { return cImputeValueSpecialValueEnumRuleCall_4_1_0; }
		
		//('operation' operation=Operation)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'operation'
		public Keyword getOperationKeyword_5_0() { return cOperationKeyword_5_0; }
		
		//operation=Operation
		public Assignment getOperationAssignment_5_1() { return cOperationAssignment_5_1; }
		
		//Operation
		public RuleCall getOperationOperationEnumRuleCall_5_1_0() { return cOperationOperationEnumRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class FixValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.FixValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFixValueKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cImputeValueKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cImputeValueAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cImputeValueSpecialValueEnumRuleCall_3_1_0 = (RuleCall)cImputeValueAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNext_operandKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cNext_operandAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cNext_operandOperandCrossReference_4_1_0 = (CrossReference)cNext_operandAssignment_4_1.eContents().get(0);
		private final RuleCall cNext_operandOperandEStringParserRuleCall_4_1_0_1 = (RuleCall)cNext_operandOperandCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cPrevious_operandKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cPrevious_operandAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cPrevious_operandOperandCrossReference_5_1_0 = (CrossReference)cPrevious_operandAssignment_5_1.eContents().get(0);
		private final RuleCall cPrevious_operandOperandEStringParserRuleCall_5_1_0_1 = (RuleCall)cPrevious_operandOperandCrossReference_5_1_0.eContents().get(1);
		private final Keyword cValueKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cValueAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cValuePrimitiveParserRuleCall_7_0 = (RuleCall)cValueAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//FixValue returns FixValue:
		//    'FixValue'
		//    name=EString
		//    '{'
		//        ('imputeValue' imputeValue=SpecialValue)?
		//        ('next_operand' next_operand=[Operand|EString])?
		//        ('previous_operand' previous_operand=[Operand|EString])?
		//        'value' value=Primitive
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'FixValue'
		//name=EString
		//'{'
		//    ('imputeValue' imputeValue=SpecialValue)?
		//    ('next_operand' next_operand=[Operand|EString])?
		//    ('previous_operand' previous_operand=[Operand|EString])?
		//    'value' value=Primitive
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'FixValue'
		public Keyword getFixValueKeyword_0() { return cFixValueKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('imputeValue' imputeValue=SpecialValue)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'imputeValue'
		public Keyword getImputeValueKeyword_3_0() { return cImputeValueKeyword_3_0; }
		
		//imputeValue=SpecialValue
		public Assignment getImputeValueAssignment_3_1() { return cImputeValueAssignment_3_1; }
		
		//SpecialValue
		public RuleCall getImputeValueSpecialValueEnumRuleCall_3_1_0() { return cImputeValueSpecialValueEnumRuleCall_3_1_0; }
		
		//('next_operand' next_operand=[Operand|EString])?
		public Group getGroup_4() { return cGroup_4; }
		
		//'next_operand'
		public Keyword getNext_operandKeyword_4_0() { return cNext_operandKeyword_4_0; }
		
		//next_operand=[Operand|EString]
		public Assignment getNext_operandAssignment_4_1() { return cNext_operandAssignment_4_1; }
		
		//[Operand|EString]
		public CrossReference getNext_operandOperandCrossReference_4_1_0() { return cNext_operandOperandCrossReference_4_1_0; }
		
		//EString
		public RuleCall getNext_operandOperandEStringParserRuleCall_4_1_0_1() { return cNext_operandOperandEStringParserRuleCall_4_1_0_1; }
		
		//('previous_operand' previous_operand=[Operand|EString])?
		public Group getGroup_5() { return cGroup_5; }
		
		//'previous_operand'
		public Keyword getPrevious_operandKeyword_5_0() { return cPrevious_operandKeyword_5_0; }
		
		//previous_operand=[Operand|EString]
		public Assignment getPrevious_operandAssignment_5_1() { return cPrevious_operandAssignment_5_1; }
		
		//[Operand|EString]
		public CrossReference getPrevious_operandOperandCrossReference_5_1_0() { return cPrevious_operandOperandCrossReference_5_1_0; }
		
		//EString
		public RuleCall getPrevious_operandOperandEStringParserRuleCall_5_1_0_1() { return cPrevious_operandOperandEStringParserRuleCall_5_1_0_1; }
		
		//'value'
		public Keyword getValueKeyword_6() { return cValueKeyword_6; }
		
		//value=Primitive
		public Assignment getValueAssignment_7() { return cValueAssignment_7; }
		
		//Primitive
		public RuleCall getValuePrimitiveParserRuleCall_7_0() { return cValuePrimitiveParserRuleCall_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class FieldRangeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.FieldRange");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFieldRangeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cOperatorKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cOperatorAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cOperatorOperatorEnumRuleCall_3_1_0 = (RuleCall)cOperatorAssignment_3_1.eContents().get(0);
		private final Keyword cDataFieldKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cDataFieldAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cDataFieldDataFieldCrossReference_6_0 = (CrossReference)cDataFieldAssignment_6.eContents().get(0);
		private final RuleCall cDataFieldDataFieldEStringParserRuleCall_6_0_1 = (RuleCall)cDataFieldDataFieldCrossReference_6_0.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommaKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cDataFieldAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final CrossReference cDataFieldDataFieldCrossReference_7_1_0 = (CrossReference)cDataFieldAssignment_7_1.eContents().get(0);
		private final RuleCall cDataFieldDataFieldEStringParserRuleCall_7_1_0_1 = (RuleCall)cDataFieldDataFieldCrossReference_7_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//FieldRange returns FieldRange:
		//    'FieldRange'
		//    name=EString
		//    '{'
		//        ('operator' operator=Operator)?
		//        'dataField' '(' dataField+=[DataField|EString] ( "," dataField+=[DataField|EString])* ')'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'FieldRange'
		//name=EString
		//'{'
		//    ('operator' operator=Operator)?
		//    'dataField' '(' dataField+=[DataField|EString] ( "," dataField+=[DataField|EString])* ')'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'FieldRange'
		public Keyword getFieldRangeKeyword_0() { return cFieldRangeKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('operator' operator=Operator)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'operator'
		public Keyword getOperatorKeyword_3_0() { return cOperatorKeyword_3_0; }
		
		//operator=Operator
		public Assignment getOperatorAssignment_3_1() { return cOperatorAssignment_3_1; }
		
		//Operator
		public RuleCall getOperatorOperatorEnumRuleCall_3_1_0() { return cOperatorOperatorEnumRuleCall_3_1_0; }
		
		//'dataField'
		public Keyword getDataFieldKeyword_4() { return cDataFieldKeyword_4; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_5() { return cLeftParenthesisKeyword_5; }
		
		//dataField+=[DataField|EString]
		public Assignment getDataFieldAssignment_6() { return cDataFieldAssignment_6; }
		
		//[DataField|EString]
		public CrossReference getDataFieldDataFieldCrossReference_6_0() { return cDataFieldDataFieldCrossReference_6_0; }
		
		//EString
		public RuleCall getDataFieldDataFieldEStringParserRuleCall_6_0_1() { return cDataFieldDataFieldEStringParserRuleCall_6_0_1; }
		
		//( "," dataField+=[DataField|EString])*
		public Group getGroup_7() { return cGroup_7; }
		
		//","
		public Keyword getCommaKeyword_7_0() { return cCommaKeyword_7_0; }
		
		//dataField+=[DataField|EString]
		public Assignment getDataFieldAssignment_7_1() { return cDataFieldAssignment_7_1; }
		
		//[DataField|EString]
		public CrossReference getDataFieldDataFieldCrossReference_7_1_0() { return cDataFieldDataFieldCrossReference_7_1_0; }
		
		//EString
		public RuleCall getDataFieldDataFieldEStringParserRuleCall_7_1_0_1() { return cDataFieldDataFieldEStringParserRuleCall_7_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_8() { return cRightParenthesisKeyword_8; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class MathOpElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.MathOp");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMathOpKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cOperatorKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cOperatorAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cOperatorMathOperatorEnumRuleCall_3_1_0 = (RuleCall)cOperatorAssignment_3_1.eContents().get(0);
		private final Keyword cOperandKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cOperandAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cOperandOperandParserRuleCall_6_0 = (RuleCall)cOperandAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommaKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cOperandAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cOperandOperandParserRuleCall_7_1_0 = (RuleCall)cOperandAssignment_7_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//MathOp returns MathOp:
		//    'MathOp'
		//    name=EString
		//    '{'
		//        ('operator' operator=MathOperator)?
		//        'operand' '{' operand+=Operand ( "," operand+=Operand)* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'MathOp'
		//name=EString
		//'{'
		//    ('operator' operator=MathOperator)?
		//    'operand' '{' operand+=Operand ( "," operand+=Operand)* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'MathOp'
		public Keyword getMathOpKeyword_0() { return cMathOpKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('operator' operator=MathOperator)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'operator'
		public Keyword getOperatorKeyword_3_0() { return cOperatorKeyword_3_0; }
		
		//operator=MathOperator
		public Assignment getOperatorAssignment_3_1() { return cOperatorAssignment_3_1; }
		
		//MathOperator
		public RuleCall getOperatorMathOperatorEnumRuleCall_3_1_0() { return cOperatorMathOperatorEnumRuleCall_3_1_0; }
		
		//'operand'
		public Keyword getOperandKeyword_4() { return cOperandKeyword_4; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//operand+=Operand
		public Assignment getOperandAssignment_6() { return cOperandAssignment_6; }
		
		//Operand
		public RuleCall getOperandOperandParserRuleCall_6_0() { return cOperandOperandParserRuleCall_6_0; }
		
		//( "," operand+=Operand)*
		public Group getGroup_7() { return cGroup_7; }
		
		//","
		public Keyword getCommaKeyword_7_0() { return cCommaKeyword_7_0; }
		
		//operand+=Operand
		public Assignment getOperandAssignment_7_1() { return cOperandAssignment_7_1; }
		
		//Operand
		public RuleCall getOperandOperandParserRuleCall_7_1_0() { return cOperandOperandParserRuleCall_7_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class FieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.Field");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFieldKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cNext_operandKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cNext_operandAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cNext_operandOperandCrossReference_3_1_0 = (CrossReference)cNext_operandAssignment_3_1.eContents().get(0);
		private final RuleCall cNext_operandOperandEStringParserRuleCall_3_1_0_1 = (RuleCall)cNext_operandOperandCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cPrevious_operandKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cPrevious_operandAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cPrevious_operandOperandCrossReference_4_1_0 = (CrossReference)cPrevious_operandAssignment_4_1.eContents().get(0);
		private final RuleCall cPrevious_operandOperandEStringParserRuleCall_4_1_0_1 = (RuleCall)cPrevious_operandOperandCrossReference_4_1_0.eContents().get(1);
		private final Keyword cDatafieldKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cDatafieldAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cDatafieldDataFieldCrossReference_6_0 = (CrossReference)cDatafieldAssignment_6.eContents().get(0);
		private final RuleCall cDatafieldDataFieldEStringParserRuleCall_6_0_1 = (RuleCall)cDatafieldDataFieldCrossReference_6_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Field returns Field:
		//    'Field'
		//    name=EString
		//    '{'
		//        ('next_operand' next_operand=[Operand|EString])?
		//        ('previous_operand' previous_operand=[Operand|EString])?
		//        'datafield' datafield=[DataField|EString]
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Field'
		//name=EString
		//'{'
		//    ('next_operand' next_operand=[Operand|EString])?
		//    ('previous_operand' previous_operand=[Operand|EString])?
		//    'datafield' datafield=[DataField|EString]
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Field'
		public Keyword getFieldKeyword_0() { return cFieldKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('next_operand' next_operand=[Operand|EString])?
		public Group getGroup_3() { return cGroup_3; }
		
		//'next_operand'
		public Keyword getNext_operandKeyword_3_0() { return cNext_operandKeyword_3_0; }
		
		//next_operand=[Operand|EString]
		public Assignment getNext_operandAssignment_3_1() { return cNext_operandAssignment_3_1; }
		
		//[Operand|EString]
		public CrossReference getNext_operandOperandCrossReference_3_1_0() { return cNext_operandOperandCrossReference_3_1_0; }
		
		//EString
		public RuleCall getNext_operandOperandEStringParserRuleCall_3_1_0_1() { return cNext_operandOperandEStringParserRuleCall_3_1_0_1; }
		
		//('previous_operand' previous_operand=[Operand|EString])?
		public Group getGroup_4() { return cGroup_4; }
		
		//'previous_operand'
		public Keyword getPrevious_operandKeyword_4_0() { return cPrevious_operandKeyword_4_0; }
		
		//previous_operand=[Operand|EString]
		public Assignment getPrevious_operandAssignment_4_1() { return cPrevious_operandAssignment_4_1; }
		
		//[Operand|EString]
		public CrossReference getPrevious_operandOperandCrossReference_4_1_0() { return cPrevious_operandOperandCrossReference_4_1_0; }
		
		//EString
		public RuleCall getPrevious_operandOperandEStringParserRuleCall_4_1_0_1() { return cPrevious_operandOperandEStringParserRuleCall_4_1_0_1; }
		
		//'datafield'
		public Keyword getDatafieldKeyword_5() { return cDatafieldKeyword_5; }
		
		//datafield=[DataField|EString]
		public Assignment getDatafieldAssignment_6() { return cDatafieldAssignment_6; }
		
		//[DataField|EString]
		public CrossReference getDatafieldDataFieldCrossReference_6_0() { return cDatafieldDataFieldCrossReference_6_0; }
		
		//EString
		public RuleCall getDatafieldDataFieldEStringParserRuleCall_6_0_1() { return cDatafieldDataFieldEStringParserRuleCall_6_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class JoinElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.Join");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cJoinKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cOperandKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cOperandAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cOperandOperandParserRuleCall_5_0 = (RuleCall)cOperandAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cOperandAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cOperandOperandParserRuleCall_6_1_0 = (RuleCall)cOperandAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Join returns Join:
		//    'Join'
		//    name=EString
		//    '{'
		//        'operand' '{' operand+=Operand ( "," operand+=Operand)* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Join'
		//name=EString
		//'{'
		//    'operand' '{' operand+=Operand ( "," operand+=Operand)* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Join'
		public Keyword getJoinKeyword_0() { return cJoinKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'operand'
		public Keyword getOperandKeyword_3() { return cOperandKeyword_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//operand+=Operand
		public Assignment getOperandAssignment_5() { return cOperandAssignment_5; }
		
		//Operand
		public RuleCall getOperandOperandParserRuleCall_5_0() { return cOperandOperandParserRuleCall_5_0; }
		
		//( "," operand+=Operand)*
		public Group getGroup_6() { return cGroup_6; }
		
		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }
		
		//operand+=Operand
		public Assignment getOperandAssignment_6_1() { return cOperandAssignment_6_1; }
		
		//Operand
		public RuleCall getOperandOperandParserRuleCall_6_1_0() { return cOperandOperandParserRuleCall_6_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class DateRangeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.DateRange");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDateRangeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDateRangeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cClousureKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cClousureAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cClousureClosureTypeEnumRuleCall_4_1_0 = (RuleCall)cClousureAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cMaxKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cMaxAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cMaxEStringParserRuleCall_5_1_0 = (RuleCall)cMaxAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cMinKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cMinAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cMinEStringParserRuleCall_6_1_0 = (RuleCall)cMinAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//DateRange returns DateRange:
		//    {DateRange}
		//    'DateRange'
		//    name=EString
		//    '{'
		//        ('clousure' clousure=ClosureType)?
		//        ('max' max=EString)?
		//        ('min' min=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{DateRange}
		//'DateRange'
		//name=EString
		//'{'
		//    ('clousure' clousure=ClosureType)?
		//    ('max' max=EString)?
		//    ('min' min=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{DateRange}
		public Action getDateRangeAction_0() { return cDateRangeAction_0; }
		
		//'DateRange'
		public Keyword getDateRangeKeyword_1() { return cDateRangeKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('clousure' clousure=ClosureType)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'clousure'
		public Keyword getClousureKeyword_4_0() { return cClousureKeyword_4_0; }
		
		//clousure=ClosureType
		public Assignment getClousureAssignment_4_1() { return cClousureAssignment_4_1; }
		
		//ClosureType
		public RuleCall getClousureClosureTypeEnumRuleCall_4_1_0() { return cClousureClosureTypeEnumRuleCall_4_1_0; }
		
		//('max' max=EString)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'max'
		public Keyword getMaxKeyword_5_0() { return cMaxKeyword_5_0; }
		
		//max=EString
		public Assignment getMaxAssignment_5_1() { return cMaxAssignment_5_1; }
		
		//EString
		public RuleCall getMaxEStringParserRuleCall_5_1_0() { return cMaxEStringParserRuleCall_5_1_0; }
		
		//('min' min=EString)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'min'
		public Keyword getMinKeyword_6_0() { return cMinKeyword_6_0; }
		
		//min=EString
		public Assignment getMinAssignment_6_1() { return cMinAssignment_6_1; }
		
		//EString
		public RuleCall getMinEStringParserRuleCall_6_1_0() { return cMinEStringParserRuleCall_6_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	
	public class DataTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.DataType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cStringEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cStringStringKeyword_0_0 = (Keyword)cStringEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cTimeEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cTimeTimeKeyword_1_0 = (Keyword)cTimeEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cIntegerEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cIntegerIntegerKeyword_2_0 = (Keyword)cIntegerEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cDateTimeEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cDateTimeDateTimeKeyword_3_0 = (Keyword)cDateTimeEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cBooleanEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cBooleanBooleanKeyword_4_0 = (Keyword)cBooleanEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cDoubleEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cDoubleDoubleKeyword_5_0 = (Keyword)cDoubleEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cFloatEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cFloatFloatKeyword_6_0 = (Keyword)cFloatEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cDateEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cDateDateKeyword_7_0 = (Keyword)cDateEnumLiteralDeclaration_7.eContents().get(0);
		
		//enum DataType returns DataType:
		//                String = 'String' | Time = 'Time' | Integer = 'Integer' | DateTime = 'DateTime' | Boolean = 'Boolean' | Double = 'Double' | Float = 'Float' | Date = 'Date';
		public EnumRule getRule() { return rule; }
		
		//String = 'String' | Time = 'Time' | Integer = 'Integer' | DateTime = 'DateTime' | Boolean = 'Boolean' | Double = 'Double' | Float = 'Float' | Date = 'Date'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//String = 'String'
		public EnumLiteralDeclaration getStringEnumLiteralDeclaration_0() { return cStringEnumLiteralDeclaration_0; }
		
		//'String'
		public Keyword getStringStringKeyword_0_0() { return cStringStringKeyword_0_0; }
		
		//Time = 'Time'
		public EnumLiteralDeclaration getTimeEnumLiteralDeclaration_1() { return cTimeEnumLiteralDeclaration_1; }
		
		//'Time'
		public Keyword getTimeTimeKeyword_1_0() { return cTimeTimeKeyword_1_0; }
		
		//Integer = 'Integer'
		public EnumLiteralDeclaration getIntegerEnumLiteralDeclaration_2() { return cIntegerEnumLiteralDeclaration_2; }
		
		//'Integer'
		public Keyword getIntegerIntegerKeyword_2_0() { return cIntegerIntegerKeyword_2_0; }
		
		//DateTime = 'DateTime'
		public EnumLiteralDeclaration getDateTimeEnumLiteralDeclaration_3() { return cDateTimeEnumLiteralDeclaration_3; }
		
		//'DateTime'
		public Keyword getDateTimeDateTimeKeyword_3_0() { return cDateTimeDateTimeKeyword_3_0; }
		
		//Boolean = 'Boolean'
		public EnumLiteralDeclaration getBooleanEnumLiteralDeclaration_4() { return cBooleanEnumLiteralDeclaration_4; }
		
		//'Boolean'
		public Keyword getBooleanBooleanKeyword_4_0() { return cBooleanBooleanKeyword_4_0; }
		
		//Double = 'Double'
		public EnumLiteralDeclaration getDoubleEnumLiteralDeclaration_5() { return cDoubleEnumLiteralDeclaration_5; }
		
		//'Double'
		public Keyword getDoubleDoubleKeyword_5_0() { return cDoubleDoubleKeyword_5_0; }
		
		//Float = 'Float'
		public EnumLiteralDeclaration getFloatEnumLiteralDeclaration_6() { return cFloatEnumLiteralDeclaration_6; }
		
		//'Float'
		public Keyword getFloatFloatKeyword_6_0() { return cFloatFloatKeyword_6_0; }
		
		//Date = 'Date'
		public EnumLiteralDeclaration getDateEnumLiteralDeclaration_7() { return cDateEnumLiteralDeclaration_7; }
		
		//'Date'
		public Keyword getDateDateKeyword_7_0() { return cDateDateKeyword_7_0; }
	}
	public class ClosureTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.ClosureType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cOpenOpenEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cOpenOpenOpenOpenKeyword_0_0 = (Keyword)cOpenOpenEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cOpenClosedEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cOpenClosedOpenClosedKeyword_1_0 = (Keyword)cOpenClosedEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cClosedOpenEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cClosedOpenClosedOpenKeyword_2_0 = (Keyword)cClosedOpenEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cClosedClosedEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cClosedClosedClosedClosedKeyword_3_0 = (Keyword)cClosedClosedEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum ClosureType returns ClosureType:
		//                openOpen = 'openOpen' | openClosed = 'openClosed' | closedOpen = 'closedOpen' | closedClosed = 'closedClosed';
		public EnumRule getRule() { return rule; }
		
		//openOpen = 'openOpen' | openClosed = 'openClosed' | closedOpen = 'closedOpen' | closedClosed = 'closedClosed'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//openOpen = 'openOpen'
		public EnumLiteralDeclaration getOpenOpenEnumLiteralDeclaration_0() { return cOpenOpenEnumLiteralDeclaration_0; }
		
		//'openOpen'
		public Keyword getOpenOpenOpenOpenKeyword_0_0() { return cOpenOpenOpenOpenKeyword_0_0; }
		
		//openClosed = 'openClosed'
		public EnumLiteralDeclaration getOpenClosedEnumLiteralDeclaration_1() { return cOpenClosedEnumLiteralDeclaration_1; }
		
		//'openClosed'
		public Keyword getOpenClosedOpenClosedKeyword_1_0() { return cOpenClosedOpenClosedKeyword_1_0; }
		
		//closedOpen = 'closedOpen'
		public EnumLiteralDeclaration getClosedOpenEnumLiteralDeclaration_2() { return cClosedOpenEnumLiteralDeclaration_2; }
		
		//'closedOpen'
		public Keyword getClosedOpenClosedOpenKeyword_2_0() { return cClosedOpenClosedOpenKeyword_2_0; }
		
		//closedClosed = 'closedClosed'
		public EnumLiteralDeclaration getClosedClosedEnumLiteralDeclaration_3() { return cClosedClosedEnumLiteralDeclaration_3; }
		
		//'closedClosed'
		public Keyword getClosedClosedClosedClosedKeyword_3_0() { return cClosedClosedClosedClosedKeyword_3_0; }
	}
	public class MapOperationElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.MapOperation");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cVALUE_MAPPINGEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cVALUE_MAPPINGVALUE_MAPPINGKeyword_0_0 = (Keyword)cVALUE_MAPPINGEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSUBSTRINGEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSUBSTRINGSUBSTRINGKeyword_1_0 = (Keyword)cSUBSTRINGEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum MapOperation returns MapOperation:
		//                VALUE_MAPPING = 'VALUE_MAPPING' | SUBSTRING = 'SUBSTRING';
		public EnumRule getRule() { return rule; }
		
		//VALUE_MAPPING = 'VALUE_MAPPING' | SUBSTRING = 'SUBSTRING'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//VALUE_MAPPING = 'VALUE_MAPPING'
		public EnumLiteralDeclaration getVALUE_MAPPINGEnumLiteralDeclaration_0() { return cVALUE_MAPPINGEnumLiteralDeclaration_0; }
		
		//'VALUE_MAPPING'
		public Keyword getVALUE_MAPPINGVALUE_MAPPINGKeyword_0_0() { return cVALUE_MAPPINGVALUE_MAPPINGKeyword_0_0; }
		
		//SUBSTRING = 'SUBSTRING'
		public EnumLiteralDeclaration getSUBSTRINGEnumLiteralDeclaration_1() { return cSUBSTRINGEnumLiteralDeclaration_1; }
		
		//'SUBSTRING'
		public Keyword getSUBSTRINGSUBSTRINGKeyword_1_0() { return cSUBSTRINGSUBSTRINGKeyword_1_0; }
	}
	public class FilterTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.FilterType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cEXCLUDEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cEXCLUDEEXCLUDEKeyword_0_0 = (Keyword)cEXCLUDEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cINCLUDEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cINCLUDEINCLUDEKeyword_1_0 = (Keyword)cINCLUDEEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum FilterType returns FilterType:
		//                EXCLUDE = 'EXCLUDE' | INCLUDE = 'INCLUDE';
		public EnumRule getRule() { return rule; }
		
		//EXCLUDE = 'EXCLUDE' | INCLUDE = 'INCLUDE'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//EXCLUDE = 'EXCLUDE'
		public EnumLiteralDeclaration getEXCLUDEEnumLiteralDeclaration_0() { return cEXCLUDEEnumLiteralDeclaration_0; }
		
		//'EXCLUDE'
		public Keyword getEXCLUDEEXCLUDEKeyword_0_0() { return cEXCLUDEEXCLUDEKeyword_0_0; }
		
		//INCLUDE = 'INCLUDE'
		public EnumLiteralDeclaration getINCLUDEEnumLiteralDeclaration_1() { return cINCLUDEEnumLiteralDeclaration_1; }
		
		//'INCLUDE'
		public Keyword getINCLUDEINCLUDEKeyword_1_0() { return cINCLUDEINCLUDEKeyword_1_0; }
	}
	public class SpecialValueElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.SpecialValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMissingEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMissingMissingKeyword_0_0 = (Keyword)cMissingEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cInvalidEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cInvalidInvalidKeyword_1_0 = (Keyword)cInvalidEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cOutlierEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cOutlierOutlierKeyword_2_0 = (Keyword)cOutlierEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum SpecialValue returns SpecialValue:
		//                Missing = 'Missing' | Invalid = 'Invalid' | Outlier = 'Outlier';
		public EnumRule getRule() { return rule; }
		
		//Missing = 'Missing' | Invalid = 'Invalid' | Outlier = 'Outlier'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Missing = 'Missing'
		public EnumLiteralDeclaration getMissingEnumLiteralDeclaration_0() { return cMissingEnumLiteralDeclaration_0; }
		
		//'Missing'
		public Keyword getMissingMissingKeyword_0_0() { return cMissingMissingKeyword_0_0; }
		
		//Invalid = 'Invalid'
		public EnumLiteralDeclaration getInvalidEnumLiteralDeclaration_1() { return cInvalidEnumLiteralDeclaration_1; }
		
		//'Invalid'
		public Keyword getInvalidInvalidKeyword_1_0() { return cInvalidInvalidKeyword_1_0; }
		
		//Outlier = 'Outlier'
		public EnumLiteralDeclaration getOutlierEnumLiteralDeclaration_2() { return cOutlierEnumLiteralDeclaration_2; }
		
		//'Outlier'
		public Keyword getOutlierOutlierKeyword_2_0() { return cOutlierOutlierKeyword_2_0; }
	}
	public class DerivedTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.DerivedType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMostFrequentEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMostFrequentMostFrequentKeyword_0_0 = (Keyword)cMostFrequentEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPreviousEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPreviousPreviousKeyword_1_0 = (Keyword)cPreviousEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cNextEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cNextNextKeyword_2_0 = (Keyword)cNextEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum DerivedType returns DerivedType:
		//                MostFrequent = 'MostFrequent' | Previous = 'Previous' | Next = 'Next';
		public EnumRule getRule() { return rule; }
		
		//MostFrequent = 'MostFrequent' | Previous = 'Previous' | Next = 'Next'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MostFrequent = 'MostFrequent'
		public EnumLiteralDeclaration getMostFrequentEnumLiteralDeclaration_0() { return cMostFrequentEnumLiteralDeclaration_0; }
		
		//'MostFrequent'
		public Keyword getMostFrequentMostFrequentKeyword_0_0() { return cMostFrequentMostFrequentKeyword_0_0; }
		
		//Previous = 'Previous'
		public EnumLiteralDeclaration getPreviousEnumLiteralDeclaration_1() { return cPreviousEnumLiteralDeclaration_1; }
		
		//'Previous'
		public Keyword getPreviousPreviousKeyword_1_0() { return cPreviousPreviousKeyword_1_0; }
		
		//Next = 'Next'
		public EnumLiteralDeclaration getNextEnumLiteralDeclaration_2() { return cNextEnumLiteralDeclaration_2; }
		
		//'Next'
		public Keyword getNextNextKeyword_2_0() { return cNextNextKeyword_2_0; }
	}
	public class OperationElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.Operation");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cInterpolationEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cInterpolationInterpolationKeyword_0_0 = (Keyword)cInterpolationEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cMeanEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cMeanMeanKeyword_1_0 = (Keyword)cMeanEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cMedianEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cMedianMedianKeyword_2_0 = (Keyword)cMedianEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cClosestEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cClosestClosestKeyword_3_0 = (Keyword)cClosestEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum Operation returns Operation:
		//                Interpolation = 'Interpolation' | Mean = 'Mean' | Median = 'Median' | Closest = 'Closest';
		public EnumRule getRule() { return rule; }
		
		//Interpolation = 'Interpolation' | Mean = 'Mean' | Median = 'Median' | Closest = 'Closest'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Interpolation = 'Interpolation'
		public EnumLiteralDeclaration getInterpolationEnumLiteralDeclaration_0() { return cInterpolationEnumLiteralDeclaration_0; }
		
		//'Interpolation'
		public Keyword getInterpolationInterpolationKeyword_0_0() { return cInterpolationInterpolationKeyword_0_0; }
		
		//Mean = 'Mean'
		public EnumLiteralDeclaration getMeanEnumLiteralDeclaration_1() { return cMeanEnumLiteralDeclaration_1; }
		
		//'Mean'
		public Keyword getMeanMeanKeyword_1_0() { return cMeanMeanKeyword_1_0; }
		
		//Median = 'Median'
		public EnumLiteralDeclaration getMedianEnumLiteralDeclaration_2() { return cMedianEnumLiteralDeclaration_2; }
		
		//'Median'
		public Keyword getMedianMedianKeyword_2_0() { return cMedianMedianKeyword_2_0; }
		
		//Closest = 'Closest'
		public EnumLiteralDeclaration getClosestEnumLiteralDeclaration_3() { return cClosestEnumLiteralDeclaration_3; }
		
		//'Closest'
		public Keyword getClosestClosestKeyword_3_0() { return cClosestClosestKeyword_3_0; }
	}
	public class OperatorElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.Operator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cBELONGEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cBELONGBELONGKeyword_0_0 = (Keyword)cBELONGEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cNOTBELONGEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cNOTBELONGNOTBELONGKeyword_1_0 = (Keyword)cNOTBELONGEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum Operator returns Operator:
		//                BELONG = 'BELONG' | NOTBELONG = 'NOTBELONG';
		public EnumRule getRule() { return rule; }
		
		//BELONG = 'BELONG' | NOTBELONG = 'NOTBELONG'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//BELONG = 'BELONG'
		public EnumLiteralDeclaration getBELONGEnumLiteralDeclaration_0() { return cBELONGEnumLiteralDeclaration_0; }
		
		//'BELONG'
		public Keyword getBELONGBELONGKeyword_0_0() { return cBELONGBELONGKeyword_0_0; }
		
		//NOTBELONG = 'NOTBELONG'
		public EnumLiteralDeclaration getNOTBELONGEnumLiteralDeclaration_1() { return cNOTBELONGEnumLiteralDeclaration_1; }
		
		//'NOTBELONG'
		public Keyword getNOTBELONGNOTBELONGKeyword_1_0() { return cNOTBELONGNOTBELONGKeyword_1_0; }
	}
	public class MathOperatorElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Workflow.MathOperator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSUMEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSUMSUMKeyword_0_0 = (Keyword)cSUMEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSUBSTRACTEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSUBSTRACTSUBSTRACTKeyword_1_0 = (Keyword)cSUBSTRACTEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cMULTIPLYEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cMULTIPLYMULTIPLYKeyword_2_0 = (Keyword)cMULTIPLYEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cDIVIDEEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cDIVIDEDIVIDEKeyword_3_0 = (Keyword)cDIVIDEEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum MathOperator returns MathOperator:
		//                SUM = 'SUM' | SUBSTRACT = 'SUBSTRACT' | MULTIPLY = 'MULTIPLY' | DIVIDE = 'DIVIDE';
		public EnumRule getRule() { return rule; }
		
		//SUM = 'SUM' | SUBSTRACT = 'SUBSTRACT' | MULTIPLY = 'MULTIPLY' | DIVIDE = 'DIVIDE'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SUM = 'SUM'
		public EnumLiteralDeclaration getSUMEnumLiteralDeclaration_0() { return cSUMEnumLiteralDeclaration_0; }
		
		//'SUM'
		public Keyword getSUMSUMKeyword_0_0() { return cSUMSUMKeyword_0_0; }
		
		//SUBSTRACT = 'SUBSTRACT'
		public EnumLiteralDeclaration getSUBSTRACTEnumLiteralDeclaration_1() { return cSUBSTRACTEnumLiteralDeclaration_1; }
		
		//'SUBSTRACT'
		public Keyword getSUBSTRACTSUBSTRACTKeyword_1_0() { return cSUBSTRACTSUBSTRACTKeyword_1_0; }
		
		//MULTIPLY = 'MULTIPLY'
		public EnumLiteralDeclaration getMULTIPLYEnumLiteralDeclaration_2() { return cMULTIPLYEnumLiteralDeclaration_2; }
		
		//'MULTIPLY'
		public Keyword getMULTIPLYMULTIPLYKeyword_2_0() { return cMULTIPLYMULTIPLYKeyword_2_0; }
		
		//DIVIDE = 'DIVIDE'
		public EnumLiteralDeclaration getDIVIDEEnumLiteralDeclaration_3() { return cDIVIDEEnumLiteralDeclaration_3; }
		
		//'DIVIDE'
		public Keyword getDIVIDEDIVIDEKeyword_3_0() { return cDIVIDEDIVIDEKeyword_3_0; }
	}
	
	private final WorkflowElements pWorkflow;
	private final ProcessingStepElements pProcessingStep;
	private final DataFieldElements pDataField;
	private final ArgumentElements pArgument;
	private final ParameterElements pParameter;
	private final MatchingValueElements pMatchingValue;
	private final OperandElements pOperand;
	private final EStringElements pEString;
	private final LinkElements pLink;
	private final DataDictionaryElements pDataDictionary;
	private final PMMLModelElements pPMMLModel;
	private final DataProcessingElements pDataProcessing;
	private final EBooleanElements pEBoolean;
	private final DataTypeElements eDataType;
	private final ValueFieldElements pValueField;
	private final CategoricalElements pCategorical;
	private final ContinuousElements pContinuous;
	private final DateElements pDate;
	private final EIntElements pEInt;
	private final IntervalElements pInterval;
	private final EIntegerObjectElements pEIntegerObject;
	private final EFloatElements pEFloat;
	private final ClosureTypeElements eClosureType;
	private final IntervalDateElements pIntervalDate;
	private final TestElements pTest;
	private final MapElements pMap;
	private final PrimitiveElements pPrimitive;
	private final DerivedFieldElements pDerivedField;
	private final FilterValueElements pFilterValue;
	private final RangeElements pRange;
	private final SpecialValuesElements pSpecialValues;
	private final DiscretizeBinElements pDiscretizeBin;
	private final CastTypeElements pCastType;
	private final DerivedValueElements pDerivedValue;
	private final NumOpElements pNumOp;
	private final FixValueElements pFixValue;
	private final FieldRangeElements pFieldRange;
	private final MathOpElements pMathOp;
	private final FieldElements pField;
	private final JoinElements pJoin;
	private final DateRangeElements pDateRange;
	private final MapOperationElements eMapOperation;
	private final FilterTypeElements eFilterType;
	private final SpecialValueElements eSpecialValue;
	private final DerivedTypeElements eDerivedType;
	private final OperationElements eOperation;
	private final OperatorElements eOperator;
	private final MathOperatorElements eMathOperator;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public WorkflowGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pWorkflow = new WorkflowElements();
		this.pProcessingStep = new ProcessingStepElements();
		this.pDataField = new DataFieldElements();
		this.pArgument = new ArgumentElements();
		this.pParameter = new ParameterElements();
		this.pMatchingValue = new MatchingValueElements();
		this.pOperand = new OperandElements();
		this.pEString = new EStringElements();
		this.pLink = new LinkElements();
		this.pDataDictionary = new DataDictionaryElements();
		this.pPMMLModel = new PMMLModelElements();
		this.pDataProcessing = new DataProcessingElements();
		this.pEBoolean = new EBooleanElements();
		this.eDataType = new DataTypeElements();
		this.pValueField = new ValueFieldElements();
		this.pCategorical = new CategoricalElements();
		this.pContinuous = new ContinuousElements();
		this.pDate = new DateElements();
		this.pEInt = new EIntElements();
		this.pInterval = new IntervalElements();
		this.pEIntegerObject = new EIntegerObjectElements();
		this.pEFloat = new EFloatElements();
		this.eClosureType = new ClosureTypeElements();
		this.pIntervalDate = new IntervalDateElements();
		this.pTest = new TestElements();
		this.pMap = new MapElements();
		this.pPrimitive = new PrimitiveElements();
		this.pDerivedField = new DerivedFieldElements();
		this.pFilterValue = new FilterValueElements();
		this.pRange = new RangeElements();
		this.pSpecialValues = new SpecialValuesElements();
		this.pDiscretizeBin = new DiscretizeBinElements();
		this.pCastType = new CastTypeElements();
		this.pDerivedValue = new DerivedValueElements();
		this.pNumOp = new NumOpElements();
		this.pFixValue = new FixValueElements();
		this.pFieldRange = new FieldRangeElements();
		this.pMathOp = new MathOpElements();
		this.pField = new FieldElements();
		this.pJoin = new JoinElements();
		this.pDateRange = new DateRangeElements();
		this.eMapOperation = new MapOperationElements();
		this.eFilterType = new FilterTypeElements();
		this.eSpecialValue = new SpecialValueElements();
		this.eDerivedType = new DerivedTypeElements();
		this.eOperation = new OperationElements();
		this.eOperator = new OperatorElements();
		this.eMathOperator = new MathOperatorElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("xtext.Workflow".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Workflow returns Workflow:
	//    'Workflow'
	//    name=EString
	//    '{'
	//        'dataprocessing' '{' dataprocessing+=ProcessingStep ( "," dataprocessing+=ProcessingStep)* '}'
	//        ('link' '{' link+=Link ( "," link+=Link)* '}' )?
	//    '}';
	public WorkflowElements getWorkflowAccess() {
		return pWorkflow;
	}
	
	public ParserRule getWorkflowRule() {
		return getWorkflowAccess().getRule();
	}
	
	//ProcessingStep returns ProcessingStep:
	//    PMMLModel | DataProcessing;
	public ProcessingStepElements getProcessingStepAccess() {
		return pProcessingStep;
	}
	
	public ParserRule getProcessingStepRule() {
		return getProcessingStepAccess().getRule();
	}
	
	//DataField returns DataField:
	//    Categorical | Continuous | Date;
	public DataFieldElements getDataFieldAccess() {
		return pDataField;
	}
	
	public ParserRule getDataFieldRule() {
		return getDataFieldAccess().getRule();
	}
	
	//Argument returns Argument:
	//    DataDictionary | Categorical | Continuous | Date;
	public ArgumentElements getArgumentAccess() {
		return pArgument;
	}
	
	public ParserRule getArgumentRule() {
		return getArgumentAccess().getRule();
	}
	
	//Parameter returns Parameter:
	//    Map | Primitive | DerivedField | FilterValue | Range | SpecialValues | DiscretizeBin | CastType | DerivedValue | NumOp | FixValue | FieldRange | MathOp | Field | Join | DateRange;
	public ParameterElements getParameterAccess() {
		return pParameter;
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}
	
	//MatchingValue returns MatchingValue:
	//    Range | SpecialValues | DateRange;
	public MatchingValueElements getMatchingValueAccess() {
		return pMatchingValue;
	}
	
	public ParserRule getMatchingValueRule() {
		return getMatchingValueAccess().getRule();
	}
	
	//Operand returns Operand:
	//    FixValue | Field;
	public OperandElements getOperandAccess() {
		return pOperand;
	}
	
	public ParserRule getOperandRule() {
		return getOperandAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//Link returns Link:
	//    'Link'
	//    name=EString
	//    '{'
	//        'source' source=[ProcessingStep|EString]
	//        'target' target=[ProcessingStep|EString]
	//    '}';
	public LinkElements getLinkAccess() {
		return pLink;
	}
	
	public ParserRule getLinkRule() {
		return getLinkAccess().getRule();
	}
	
	//DataDictionary returns DataDictionary:
	//    {DataDictionary}
	//    'DataDictionary'
	//    name=EString
	//    '{'
	//        ('fileName' fileName=EString)?
	//        ('in' in=[DataDictionary|EString])?
	//        ('out' out=[DataDictionary|EString])?
	//        ('datafield' '{' datafield+=DataField ( "," datafield+=DataField)* '}' )?
	//    '}';
	public DataDictionaryElements getDataDictionaryAccess() {
		return pDataDictionary;
	}
	
	public ParserRule getDataDictionaryRule() {
		return getDataDictionaryAccess().getRule();
	}
	
	//PMMLModel returns PMMLModel:
	//    (onlyPredictions?='onlyPredictions')?
	//    'PMMLModel'
	//    name=EString
	//    '{'
	//        ('origin_function' origin_function=EString)?
	//        ('filePath' filePath=EString)?
	//        ('outgoing' outgoing=[Link|EString])?
	//        ('incoming' incoming=[Link|EString])?
	//        'in' '(' in+=[Argument|EString] ( "," in+=[Argument|EString])* ')'
	//        'out' '(' out+=[Argument|EString] ( "," out+=[Argument|EString])* ')'
	//        'inputPort' '{' inputPort+=DataDictionary ( "," inputPort+=DataDictionary)* '}'
	//        'outputPort' '{' outputPort+=DataDictionary ( "," outputPort+=DataDictionary)* '}'
	//        ('test' test=Test)?
	//    '}';
	public PMMLModelElements getPMMLModelAccess() {
		return pPMMLModel;
	}
	
	public ParserRule getPMMLModelRule() {
		return getPMMLModelAccess().getRule();
	}
	
	//DataProcessing returns DataProcessing:
	//    'DataProcessing'
	//    name=EString
	//    '{'
	//        ('origin_function' origin_function=EString)?
	//        ('outgoing' outgoing=[Link|EString])?
	//        ('incoming' incoming=[Link|EString])?
	//        'in' '(' in+=[Argument|EString] ( "," in+=[Argument|EString])* ')'
	//        'out' '(' out+=[Argument|EString] ( "," out+=[Argument|EString])* ')'
	//        ('initial_accumulated_processing' initial_accumulated_processing=[DataProcessing|EString])?
	//        'inputPort' '{' inputPort+=DataDictionary ( "," inputPort+=DataDictionary)* '}'
	//        'outputPort' '{' outputPort+=DataDictionary ( "," outputPort+=DataDictionary)* '}'
	//        ('parameter' '{' parameter+=Parameter ( "," parameter+=Parameter)* '}' )?
	//    '}';
	public DataProcessingElements getDataProcessingAccess() {
		return pDataProcessing;
	}
	
	public ParserRule getDataProcessingRule() {
		return getDataProcessingAccess().getRule();
	}
	
	//EBoolean returns ecore::EBoolean:
	//    'true' | 'false';
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}
	
	//enum DataType returns DataType:
	//                String = 'String' | Time = 'Time' | Integer = 'Integer' | DateTime = 'DateTime' | Boolean = 'Boolean' | Double = 'Double' | Float = 'Float' | Date = 'Date';
	public DataTypeElements getDataTypeAccess() {
		return eDataType;
	}
	
	public EnumRule getDataTypeRule() {
		return getDataTypeAccess().getRule();
	}
	
	//ValueField returns ValueField:
	//    {ValueField}
	//    'ValueField'
	//    '{'
	//        ('value' value=EString)?
	//        ('count' count=EInt)?
	//    '}';
	public ValueFieldElements getValueFieldAccess() {
		return pValueField;
	}
	
	public ParserRule getValueFieldRule() {
		return getValueFieldAccess().getRule();
	}
	
	//Categorical returns Categorical:
	//    {Categorical}
	//    (id?='id')?
	//    (target?='target')?
	//    (ordinal?='ordinal')?
	//    'Categorical'
	//    name=EString
	//    '{'
	//        ('dataType' dataType=DataType)?
	//        ('displayName' displayName=EString)?
	//        ('in' '(' in+=[DataField|EString] ( "," in+=[DataField|EString])* ')' )?
	//        ('out' out=[DataField|EString])?
	//        ('validValues' '{' validValues+=ValueField ( "," validValues+=ValueField)* '}' )?
	//        ('invalidValues' '{' invalidValues+=ValueField ( "," invalidValues+=ValueField)* '}' )?
	//        ('missingValues' '{' missingValues+=ValueField ( "," missingValues+=ValueField)* '}' )?
	//    '}';
	public CategoricalElements getCategoricalAccess() {
		return pCategorical;
	}
	
	public ParserRule getCategoricalRule() {
		return getCategoricalAccess().getRule();
	}
	
	//Continuous returns Continuous:
	//    (id?='id')?
	//    (target?='target')?
	//    'Continuous'
	//    name=EString
	//    '{'
	//        ('dataType' dataType=DataType)?
	//        ('displayName' displayName=EString)?
	//        ('numDecimals' numDecimals=EIntegerObject)?
	//        ('in' '(' in+=[DataField|EString] ( "," in+=[DataField|EString])* ')' )?
	//        ('out' out=[DataField|EString])?
	//        ('validValues' '{' validValues+=ValueField ( "," validValues+=ValueField)* '}' )?
	//        ('invalidValues' '{' invalidValues+=ValueField ( "," invalidValues+=ValueField)* '}' )?
	//        ('missingValues' '{' missingValues+=ValueField ( "," missingValues+=ValueField)* '}' )?
	//        'interval' '{' interval+=Interval ( "," interval+=Interval)* '}'
	//    '}';
	public ContinuousElements getContinuousAccess() {
		return pContinuous;
	}
	
	public ParserRule getContinuousRule() {
		return getContinuousAccess().getRule();
	}
	
	//Date returns Date:
	//    (id?='id')?
	//    (target?='target')?
	//    'Date'
	//    name=EString
	//    '{'
	//        ('dataType' dataType=DataType)?
	//        ('displayName' displayName=EString)?
	//        ('format' format=EString)?
	//        ('in' '(' in+=[DataField|EString] ( "," in+=[DataField|EString])* ')' )?
	//        ('out' out=[DataField|EString])?
	//        ('validValues' '{' validValues+=ValueField ( "," validValues+=ValueField)* '}' )?
	//        ('invalidValues' '{' invalidValues+=ValueField ( "," invalidValues+=ValueField)* '}' )?
	//        ('missingValues' '{' missingValues+=ValueField ( "," missingValues+=ValueField)* '}' )?
	//        'intervaldate' '{' intervaldate+=IntervalDate ( "," intervaldate+=IntervalDate)* '}'
	//    '}';
	public DateElements getDateAccess() {
		return pDate;
	}
	
	public ParserRule getDateRule() {
		return getDateAccess().getRule();
	}
	
	//EInt returns ecore::EInt:
	//    '-'? INT;
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}
	
	//Interval returns Interval:
	//    {Interval}
	//    'Interval'
	//    '{'
	//        ('leftMargin' leftMargin=EFloat)?
	//        ('rightMargin' rightMargin=EFloat)?
	//        ('clousure' clousure=ClosureType)?
	//    '}';
	public IntervalElements getIntervalAccess() {
		return pInterval;
	}
	
	public ParserRule getIntervalRule() {
		return getIntervalAccess().getRule();
	}
	
	//EIntegerObject returns ecore::EIntegerObject:
	//    '-'? INT;
	public EIntegerObjectElements getEIntegerObjectAccess() {
		return pEIntegerObject;
	}
	
	public ParserRule getEIntegerObjectRule() {
		return getEIntegerObjectAccess().getRule();
	}
	
	//EFloat returns ecore::EFloat:
	//    '-'? INT? '.' INT (('E'|'e') '-'? INT)?;
	public EFloatElements getEFloatAccess() {
		return pEFloat;
	}
	
	public ParserRule getEFloatRule() {
		return getEFloatAccess().getRule();
	}
	
	//enum ClosureType returns ClosureType:
	//                openOpen = 'openOpen' | openClosed = 'openClosed' | closedOpen = 'closedOpen' | closedClosed = 'closedClosed';
	public ClosureTypeElements getClosureTypeAccess() {
		return eClosureType;
	}
	
	public EnumRule getClosureTypeRule() {
		return getClosureTypeAccess().getRule();
	}
	
	//IntervalDate returns IntervalDate:
	//    {IntervalDate}
	//    'IntervalDate'
	//    '{'
	//        ('rightMargin' rightMargin=EString)?
	//        ('clousure' clousure=ClosureType)?
	//        ('leftMargin' leftMargin=EString)?
	//    '}';
	public IntervalDateElements getIntervalDateAccess() {
		return pIntervalDate;
	}
	
	public ParserRule getIntervalDateRule() {
		return getIntervalDateAccess().getRule();
	}
	
	//Test returns Test:
	//    {Test}
	//    'Test'
	//    '{'
	//        ('path' path=EString)?
	//        ('trainSize' trainSize=EFloat)?
	//        ('testSize' testSize=EFloat)?
	//    '}';
	public TestElements getTestAccess() {
		return pTest;
	}
	
	public ParserRule getTestRule() {
		return getTestAccess().getRule();
	}
	
	//Map returns Map:
	//    {Map}
	//    'Map'
	//    name=EString
	//    '{'
	//        ('inValue' inValue=EString)?
	//        ('outvalue' outvalue=EString)?
	//        ('mapOperation' mapOperation=MapOperation)?
	//    '}';
	public MapElements getMapAccess() {
		return pMap;
	}
	
	public ParserRule getMapRule() {
		return getMapAccess().getRule();
	}
	
	//Primitive returns Primitive:
	//    {Primitive}
	//    'Primitive'
	//    name=EString
	//    '{'
	//        ('value' value=EString)?
	//        ('dataType' dataType=DataType)?
	//    '}';
	public PrimitiveElements getPrimitiveAccess() {
		return pPrimitive;
	}
	
	public ParserRule getPrimitiveRule() {
		return getPrimitiveAccess().getRule();
	}
	
	//DerivedField returns DerivedField:
	//    'DerivedField'
	//    name=EString
	//    '{'
	//        'der_dataField' der_dataField=[DataField|EString]
	//    '}';
	public DerivedFieldElements getDerivedFieldAccess() {
		return pDerivedField;
	}
	
	public ParserRule getDerivedFieldRule() {
		return getDerivedFieldAccess().getRule();
	}
	
	//FilterValue returns FilterValue:
	//    {FilterValue}
	//    'FilterValue'
	//    name=EString
	//    '{'
	//        ('filterType' filterType=FilterType)?
	//        ('primitive' '{' primitive+=Primitive ( "," primitive+=Primitive)* '}' )?
	//        ('matchingvalue' '{' matchingvalue+=MatchingValue ( "," matchingvalue+=MatchingValue)* '}' )?
	//    '}';
	public FilterValueElements getFilterValueAccess() {
		return pFilterValue;
	}
	
	public ParserRule getFilterValueRule() {
		return getFilterValueAccess().getRule();
	}
	
	//Range returns Range:
	//    {Range}
	//    (minInfinity?='minInfinity')?
	//    (maxInfinity?='maxInfinity')?
	//    'Range'
	//    name=EString
	//    '{'
	//        ('min' min=EFloat)?
	//        ('max' max=EFloat)?
	//        ('clousure' clousure=ClosureType)?
	//    '}';
	public RangeElements getRangeAccess() {
		return pRange;
	}
	
	public ParserRule getRangeRule() {
		return getRangeAccess().getRule();
	}
	
	//SpecialValues returns SpecialValues:
	//    {SpecialValues}
	//    'SpecialValues'
	//    name=EString
	//    '{'
	//        ('specialType' specialType=SpecialValue)?
	//    '}';
	public SpecialValuesElements getSpecialValuesAccess() {
		return pSpecialValues;
	}
	
	public ParserRule getSpecialValuesRule() {
		return getSpecialValuesAccess().getRule();
	}
	
	//DiscretizeBin returns DiscretizeBin:
	//    'DiscretizeBin'
	//    name=EString
	//    '{'
	//        ('binValue' binValue=EString)?
	//        'interval' '{' interval+=Interval ( "," interval+=Interval)* '}'
	//    '}';
	public DiscretizeBinElements getDiscretizeBinAccess() {
		return pDiscretizeBin;
	}
	
	public ParserRule getDiscretizeBinRule() {
		return getDiscretizeBinAccess().getRule();
	}
	
	//CastType returns CastType:
	//    {CastType}
	//    'CastType'
	//    name=EString
	//    '{'
	//        ('type' type=DataType)?
	//    '}';
	public CastTypeElements getCastTypeAccess() {
		return pCastType;
	}
	
	public ParserRule getCastTypeRule() {
		return getCastTypeAccess().getRule();
	}
	
	//DerivedValue returns DerivedValue:
	//    {DerivedValue}
	//    'DerivedValue'
	//    name=EString
	//    '{'
	//        ('imputeValue' imputeValue=SpecialValue)?
	//        ('type' type=DerivedType)?
	//    '}';
	public DerivedValueElements getDerivedValueAccess() {
		return pDerivedValue;
	}
	
	public ParserRule getDerivedValueRule() {
		return getDerivedValueAccess().getRule();
	}
	
	//NumOp returns NumOp:
	//    {NumOp}
	//    'NumOp'
	//    name=EString
	//    '{'
	//        ('imputeValue' imputeValue=SpecialValue)?
	//        ('operation' operation=Operation)?
	//    '}';
	public NumOpElements getNumOpAccess() {
		return pNumOp;
	}
	
	public ParserRule getNumOpRule() {
		return getNumOpAccess().getRule();
	}
	
	//FixValue returns FixValue:
	//    'FixValue'
	//    name=EString
	//    '{'
	//        ('imputeValue' imputeValue=SpecialValue)?
	//        ('next_operand' next_operand=[Operand|EString])?
	//        ('previous_operand' previous_operand=[Operand|EString])?
	//        'value' value=Primitive
	//    '}';
	public FixValueElements getFixValueAccess() {
		return pFixValue;
	}
	
	public ParserRule getFixValueRule() {
		return getFixValueAccess().getRule();
	}
	
	//FieldRange returns FieldRange:
	//    'FieldRange'
	//    name=EString
	//    '{'
	//        ('operator' operator=Operator)?
	//        'dataField' '(' dataField+=[DataField|EString] ( "," dataField+=[DataField|EString])* ')'
	//    '}';
	public FieldRangeElements getFieldRangeAccess() {
		return pFieldRange;
	}
	
	public ParserRule getFieldRangeRule() {
		return getFieldRangeAccess().getRule();
	}
	
	//MathOp returns MathOp:
	//    'MathOp'
	//    name=EString
	//    '{'
	//        ('operator' operator=MathOperator)?
	//        'operand' '{' operand+=Operand ( "," operand+=Operand)* '}'
	//    '}';
	public MathOpElements getMathOpAccess() {
		return pMathOp;
	}
	
	public ParserRule getMathOpRule() {
		return getMathOpAccess().getRule();
	}
	
	//Field returns Field:
	//    'Field'
	//    name=EString
	//    '{'
	//        ('next_operand' next_operand=[Operand|EString])?
	//        ('previous_operand' previous_operand=[Operand|EString])?
	//        'datafield' datafield=[DataField|EString]
	//    '}';
	public FieldElements getFieldAccess() {
		return pField;
	}
	
	public ParserRule getFieldRule() {
		return getFieldAccess().getRule();
	}
	
	//Join returns Join:
	//    'Join'
	//    name=EString
	//    '{'
	//        'operand' '{' operand+=Operand ( "," operand+=Operand)* '}'
	//    '}';
	public JoinElements getJoinAccess() {
		return pJoin;
	}
	
	public ParserRule getJoinRule() {
		return getJoinAccess().getRule();
	}
	
	//DateRange returns DateRange:
	//    {DateRange}
	//    'DateRange'
	//    name=EString
	//    '{'
	//        ('clousure' clousure=ClosureType)?
	//        ('max' max=EString)?
	//        ('min' min=EString)?
	//    '}';
	public DateRangeElements getDateRangeAccess() {
		return pDateRange;
	}
	
	public ParserRule getDateRangeRule() {
		return getDateRangeAccess().getRule();
	}
	
	//enum MapOperation returns MapOperation:
	//                VALUE_MAPPING = 'VALUE_MAPPING' | SUBSTRING = 'SUBSTRING';
	public MapOperationElements getMapOperationAccess() {
		return eMapOperation;
	}
	
	public EnumRule getMapOperationRule() {
		return getMapOperationAccess().getRule();
	}
	
	//enum FilterType returns FilterType:
	//                EXCLUDE = 'EXCLUDE' | INCLUDE = 'INCLUDE';
	public FilterTypeElements getFilterTypeAccess() {
		return eFilterType;
	}
	
	public EnumRule getFilterTypeRule() {
		return getFilterTypeAccess().getRule();
	}
	
	//enum SpecialValue returns SpecialValue:
	//                Missing = 'Missing' | Invalid = 'Invalid' | Outlier = 'Outlier';
	public SpecialValueElements getSpecialValueAccess() {
		return eSpecialValue;
	}
	
	public EnumRule getSpecialValueRule() {
		return getSpecialValueAccess().getRule();
	}
	
	//enum DerivedType returns DerivedType:
	//                MostFrequent = 'MostFrequent' | Previous = 'Previous' | Next = 'Next';
	public DerivedTypeElements getDerivedTypeAccess() {
		return eDerivedType;
	}
	
	public EnumRule getDerivedTypeRule() {
		return getDerivedTypeAccess().getRule();
	}
	
	//enum Operation returns Operation:
	//                Interpolation = 'Interpolation' | Mean = 'Mean' | Median = 'Median' | Closest = 'Closest';
	public OperationElements getOperationAccess() {
		return eOperation;
	}
	
	public EnumRule getOperationRule() {
		return getOperationAccess().getRule();
	}
	
	//enum Operator returns Operator:
	//                BELONG = 'BELONG' | NOTBELONG = 'NOTBELONG';
	public OperatorElements getOperatorAccess() {
		return eOperator;
	}
	
	public EnumRule getOperatorRule() {
		return getOperatorAccess().getRule();
	}
	
	//enum MathOperator returns MathOperator:
	//                SUM = 'SUM' | SUBSTRACT = 'SUBSTRACT' | MULTIPLY = 'MULTIPLY' | DIVIDE = 'DIVIDE';
	public MathOperatorElements getMathOperatorAccess() {
		return eMathOperator;
	}
	
	public EnumRule getMathOperatorRule() {
		return getMathOperatorAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}

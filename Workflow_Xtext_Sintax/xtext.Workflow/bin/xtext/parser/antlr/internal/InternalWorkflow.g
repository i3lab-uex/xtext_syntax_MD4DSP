/*
 * generated by Xtext 2.37.0
 */
grammar InternalWorkflow;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import xtext.services.WorkflowGrammarAccess;

}

@parser::members {

 	private WorkflowGrammarAccess grammarAccess;

    public InternalWorkflowParser(TokenStream input, WorkflowGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Workflow";
   	}

   	@Override
   	protected WorkflowGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleWorkflow
entryRuleWorkflow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWorkflowRule()); }
	iv_ruleWorkflow=ruleWorkflow
	{ $current=$iv_ruleWorkflow.current; }
	EOF;

// Rule Workflow
ruleWorkflow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Workflow'
		{
			newLeafNode(otherlv_0, grammarAccess.getWorkflowAccess().getWorkflowKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWorkflowAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWorkflowRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"xtext.Workflow.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getWorkflowAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='dataprocessing'
		{
			newLeafNode(otherlv_3, grammarAccess.getWorkflowAccess().getDataprocessingKeyword_3());
		}
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getWorkflowAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWorkflowAccess().getDataprocessingProcessingStepParserRuleCall_5_0());
				}
				lv_dataprocessing_5_0=ruleProcessingStep
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWorkflowRule());
					}
					add(
						$current,
						"dataprocessing",
						lv_dataprocessing_5_0,
						"xtext.Workflow.ProcessingStep");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getWorkflowAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getWorkflowAccess().getDataprocessingProcessingStepParserRuleCall_6_1_0());
					}
					lv_dataprocessing_7_0=ruleProcessingStep
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWorkflowRule());
						}
						add(
							$current,
							"dataprocessing",
							lv_dataprocessing_7_0,
							"xtext.Workflow.ProcessingStep");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getWorkflowAccess().getRightCurlyBracketKeyword_7());
		}
		(
			otherlv_9='link'
			{
				newLeafNode(otherlv_9, grammarAccess.getWorkflowAccess().getLinkKeyword_8_0());
			}
			otherlv_10='{'
			{
				newLeafNode(otherlv_10, grammarAccess.getWorkflowAccess().getLeftCurlyBracketKeyword_8_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getWorkflowAccess().getLinkLinkParserRuleCall_8_2_0());
					}
					lv_link_11_0=ruleLink
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWorkflowRule());
						}
						add(
							$current,
							"link",
							lv_link_11_0,
							"xtext.Workflow.Link");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getWorkflowAccess().getCommaKeyword_8_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getWorkflowAccess().getLinkLinkParserRuleCall_8_3_1_0());
						}
						lv_link_13_0=ruleLink
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getWorkflowRule());
							}
							add(
								$current,
								"link",
								lv_link_13_0,
								"xtext.Workflow.Link");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_14='}'
			{
				newLeafNode(otherlv_14, grammarAccess.getWorkflowAccess().getRightCurlyBracketKeyword_8_4());
			}
		)?
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getWorkflowAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleProcessingStep
entryRuleProcessingStep returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcessingStepRule()); }
	iv_ruleProcessingStep=ruleProcessingStep
	{ $current=$iv_ruleProcessingStep.current; }
	EOF;

// Rule ProcessingStep
ruleProcessingStep returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getProcessingStepAccess().getPMMLModelParserRuleCall_0());
		}
		this_PMMLModel_0=rulePMMLModel
		{
			$current = $this_PMMLModel_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getProcessingStepAccess().getDataProcessingParserRuleCall_1());
		}
		this_DataProcessing_1=ruleDataProcessing
		{
			$current = $this_DataProcessing_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDataField
entryRuleDataField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataFieldRule()); }
	iv_ruleDataField=ruleDataField
	{ $current=$iv_ruleDataField.current; }
	EOF;

// Rule DataField
ruleDataField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDataFieldAccess().getCategoricalParserRuleCall_0());
		}
		this_Categorical_0=ruleCategorical
		{
			$current = $this_Categorical_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDataFieldAccess().getContinuousParserRuleCall_1());
		}
		this_Continuous_1=ruleContinuous
		{
			$current = $this_Continuous_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDataFieldAccess().getDateParserRuleCall_2());
		}
		this_Date_2=ruleDate
		{
			$current = $this_Date_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	iv_ruleParameter=ruleParameter
	{ $current=$iv_ruleParameter.current; }
	EOF;

// Rule Parameter
ruleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getParameterAccess().getMapParserRuleCall_0());
		}
		this_Map_0=ruleMap
		{
			$current = $this_Map_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getParameterAccess().getPrimitiveParserRuleCall_1());
		}
		this_Primitive_1=rulePrimitive
		{
			$current = $this_Primitive_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getParameterAccess().getDerivedFieldParserRuleCall_2());
		}
		this_DerivedField_2=ruleDerivedField
		{
			$current = $this_DerivedField_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getParameterAccess().getFilterValueParserRuleCall_3());
		}
		this_FilterValue_3=ruleFilterValue
		{
			$current = $this_FilterValue_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getParameterAccess().getRangeParserRuleCall_4());
		}
		this_Range_4=ruleRange
		{
			$current = $this_Range_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getParameterAccess().getSpecialValuesParserRuleCall_5());
		}
		this_SpecialValues_5=ruleSpecialValues
		{
			$current = $this_SpecialValues_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getParameterAccess().getDiscretizeBinParserRuleCall_6());
		}
		this_DiscretizeBin_6=ruleDiscretizeBin
		{
			$current = $this_DiscretizeBin_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getParameterAccess().getCastTypeParserRuleCall_7());
		}
		this_CastType_7=ruleCastType
		{
			$current = $this_CastType_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getParameterAccess().getDerivedValueParserRuleCall_8());
		}
		this_DerivedValue_8=ruleDerivedValue
		{
			$current = $this_DerivedValue_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getParameterAccess().getNumOpParserRuleCall_9());
		}
		this_NumOp_9=ruleNumOp
		{
			$current = $this_NumOp_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getParameterAccess().getFixValueParserRuleCall_10());
		}
		this_FixValue_10=ruleFixValue
		{
			$current = $this_FixValue_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getParameterAccess().getFieldRangeParserRuleCall_11());
		}
		this_FieldRange_11=ruleFieldRange
		{
			$current = $this_FieldRange_11.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getParameterAccess().getMathOpParserRuleCall_12());
		}
		this_MathOp_12=ruleMathOp
		{
			$current = $this_MathOp_12.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getParameterAccess().getFieldParserRuleCall_13());
		}
		this_Field_13=ruleField
		{
			$current = $this_Field_13.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getParameterAccess().getJoinParserRuleCall_14());
		}
		this_Join_14=ruleJoin
		{
			$current = $this_Join_14.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getParameterAccess().getDateRangeParserRuleCall_15());
		}
		this_DateRange_15=ruleDateRange
		{
			$current = $this_DateRange_15.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleMatchingValue
entryRuleMatchingValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMatchingValueRule()); }
	iv_ruleMatchingValue=ruleMatchingValue
	{ $current=$iv_ruleMatchingValue.current; }
	EOF;

// Rule MatchingValue
ruleMatchingValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMatchingValueAccess().getRangeParserRuleCall_0());
		}
		this_Range_0=ruleRange
		{
			$current = $this_Range_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMatchingValueAccess().getSpecialValuesParserRuleCall_1());
		}
		this_SpecialValues_1=ruleSpecialValues
		{
			$current = $this_SpecialValues_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMatchingValueAccess().getDateRangeParserRuleCall_2());
		}
		this_DateRange_2=ruleDateRange
		{
			$current = $this_DateRange_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOperand
entryRuleOperand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperandRule()); }
	iv_ruleOperand=ruleOperand
	{ $current=$iv_ruleOperand.current; }
	EOF;

// Rule Operand
ruleOperand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOperandAccess().getFixValueParserRuleCall_0());
		}
		this_FixValue_0=ruleFixValue
		{
			$current = $this_FixValue_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperandAccess().getFieldParserRuleCall_1());
		}
		this_Field_1=ruleField
		{
			$current = $this_Field_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleLink
entryRuleLink returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLinkRule()); }
	iv_ruleLink=ruleLink
	{ $current=$iv_ruleLink.current; }
	EOF;

// Rule Link
ruleLink returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Link'
		{
			newLeafNode(otherlv_0, grammarAccess.getLinkAccess().getLinkKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLinkAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLinkRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"xtext.Workflow.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getLinkAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='source'
		{
			newLeafNode(otherlv_3, grammarAccess.getLinkAccess().getSourceKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLinkRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getLinkAccess().getSourceProcessingStepCrossReference_4_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='target'
		{
			newLeafNode(otherlv_5, grammarAccess.getLinkAccess().getTargetKeyword_5());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLinkRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getLinkAccess().getTargetProcessingStepCrossReference_6_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getLinkAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleDataDictionary
entryRuleDataDictionary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataDictionaryRule()); }
	iv_ruleDataDictionary=ruleDataDictionary
	{ $current=$iv_ruleDataDictionary.current; }
	EOF;

// Rule DataDictionary
ruleDataDictionary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDataDictionaryAccess().getDataDictionaryAction_0(),
					$current);
			}
		)
		otherlv_1='DataDictionary'
		{
			newLeafNode(otherlv_1, grammarAccess.getDataDictionaryAccess().getDataDictionaryKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataDictionaryAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataDictionaryRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"xtext.Workflow.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getDataDictionaryAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='fileName'
			{
				newLeafNode(otherlv_4, grammarAccess.getDataDictionaryAccess().getFileNameKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataDictionaryAccess().getFileNameEStringParserRuleCall_4_1_0());
					}
					lv_fileName_5_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataDictionaryRule());
						}
						set(
							$current,
							"fileName",
							lv_fileName_5_0,
							"xtext.Workflow.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='in'
			{
				newLeafNode(otherlv_6, grammarAccess.getDataDictionaryAccess().getInKeyword_5_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDataDictionaryRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getDataDictionaryAccess().getInDataDictionaryCrossReference_5_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_8='out'
			{
				newLeafNode(otherlv_8, grammarAccess.getDataDictionaryAccess().getOutKeyword_6_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDataDictionaryRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getDataDictionaryAccess().getOutDataDictionaryCrossReference_6_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_10='datafield'
			{
				newLeafNode(otherlv_10, grammarAccess.getDataDictionaryAccess().getDatafieldKeyword_7_0());
			}
			otherlv_11='{'
			{
				newLeafNode(otherlv_11, grammarAccess.getDataDictionaryAccess().getLeftCurlyBracketKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataDictionaryAccess().getDatafieldDataFieldParserRuleCall_7_2_0());
					}
					lv_datafield_12_0=ruleDataField
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataDictionaryRule());
						}
						add(
							$current,
							"datafield",
							lv_datafield_12_0,
							"xtext.Workflow.DataField");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_13=','
				{
					newLeafNode(otherlv_13, grammarAccess.getDataDictionaryAccess().getCommaKeyword_7_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDataDictionaryAccess().getDatafieldDataFieldParserRuleCall_7_3_1_0());
						}
						lv_datafield_14_0=ruleDataField
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataDictionaryRule());
							}
							add(
								$current,
								"datafield",
								lv_datafield_14_0,
								"xtext.Workflow.DataField");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_15='}'
			{
				newLeafNode(otherlv_15, grammarAccess.getDataDictionaryAccess().getRightCurlyBracketKeyword_7_4());
			}
		)?
		otherlv_16='}'
		{
			newLeafNode(otherlv_16, grammarAccess.getDataDictionaryAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRulePMMLModel
entryRulePMMLModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPMMLModelRule()); }
	iv_rulePMMLModel=rulePMMLModel
	{ $current=$iv_rulePMMLModel.current; }
	EOF;

// Rule PMMLModel
rulePMMLModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_onlyPredictions_0_0='onlyPredictions'
				{
					newLeafNode(lv_onlyPredictions_0_0, grammarAccess.getPMMLModelAccess().getOnlyPredictionsOnlyPredictionsKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPMMLModelRule());
					}
					setWithLastConsumed($current, "onlyPredictions", lv_onlyPredictions_0_0 != null, "onlyPredictions");
				}
			)
		)?
		otherlv_1='PMMLModel'
		{
			newLeafNode(otherlv_1, grammarAccess.getPMMLModelAccess().getPMMLModelKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPMMLModelAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPMMLModelRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"xtext.Workflow.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getPMMLModelAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='origin_function'
			{
				newLeafNode(otherlv_4, grammarAccess.getPMMLModelAccess().getOrigin_functionKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPMMLModelAccess().getOrigin_functionEStringParserRuleCall_4_1_0());
					}
					lv_origin_function_5_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPMMLModelRule());
						}
						set(
							$current,
							"origin_function",
							lv_origin_function_5_0,
							"xtext.Workflow.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='filePath'
			{
				newLeafNode(otherlv_6, grammarAccess.getPMMLModelAccess().getFilePathKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPMMLModelAccess().getFilePathEStringParserRuleCall_5_1_0());
					}
					lv_filePath_7_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPMMLModelRule());
						}
						set(
							$current,
							"filePath",
							lv_filePath_7_0,
							"xtext.Workflow.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_8='outgoing'
			{
				newLeafNode(otherlv_8, grammarAccess.getPMMLModelAccess().getOutgoingKeyword_6_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPMMLModelRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getPMMLModelAccess().getOutgoingLinkCrossReference_6_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_10='incoming'
			{
				newLeafNode(otherlv_10, grammarAccess.getPMMLModelAccess().getIncomingKeyword_7_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPMMLModelRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getPMMLModelAccess().getIncomingLinkCrossReference_7_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_12='in'
		{
			newLeafNode(otherlv_12, grammarAccess.getPMMLModelAccess().getInKeyword_8());
		}
		otherlv_13='('
		{
			newLeafNode(otherlv_13, grammarAccess.getPMMLModelAccess().getLeftParenthesisKeyword_9());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPMMLModelRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getPMMLModelAccess().getInArgumentCrossReference_10_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_15=','
			{
				newLeafNode(otherlv_15, grammarAccess.getPMMLModelAccess().getCommaKeyword_11_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPMMLModelRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getPMMLModelAccess().getInArgumentCrossReference_11_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_17=')'
		{
			newLeafNode(otherlv_17, grammarAccess.getPMMLModelAccess().getRightParenthesisKeyword_12());
		}
		otherlv_18='out'
		{
			newLeafNode(otherlv_18, grammarAccess.getPMMLModelAccess().getOutKeyword_13());
		}
		otherlv_19='('
		{
			newLeafNode(otherlv_19, grammarAccess.getPMMLModelAccess().getLeftParenthesisKeyword_14());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPMMLModelRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getPMMLModelAccess().getOutArgumentCrossReference_15_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_21=','
			{
				newLeafNode(otherlv_21, grammarAccess.getPMMLModelAccess().getCommaKeyword_16_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPMMLModelRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getPMMLModelAccess().getOutArgumentCrossReference_16_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_23=')'
		{
			newLeafNode(otherlv_23, grammarAccess.getPMMLModelAccess().getRightParenthesisKeyword_17());
		}
		otherlv_24='inputPort'
		{
			newLeafNode(otherlv_24, grammarAccess.getPMMLModelAccess().getInputPortKeyword_18());
		}
		otherlv_25='{'
		{
			newLeafNode(otherlv_25, grammarAccess.getPMMLModelAccess().getLeftCurlyBracketKeyword_19());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPMMLModelAccess().getInputPortDataDictionaryParserRuleCall_20_0());
				}
				lv_inputPort_26_0=ruleDataDictionary
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPMMLModelRule());
					}
					add(
						$current,
						"inputPort",
						lv_inputPort_26_0,
						"xtext.Workflow.DataDictionary");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_27=','
			{
				newLeafNode(otherlv_27, grammarAccess.getPMMLModelAccess().getCommaKeyword_21_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPMMLModelAccess().getInputPortDataDictionaryParserRuleCall_21_1_0());
					}
					lv_inputPort_28_0=ruleDataDictionary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPMMLModelRule());
						}
						add(
							$current,
							"inputPort",
							lv_inputPort_28_0,
							"xtext.Workflow.DataDictionary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_29='}'
		{
			newLeafNode(otherlv_29, grammarAccess.getPMMLModelAccess().getRightCurlyBracketKeyword_22());
		}
		otherlv_30='outputPort'
		{
			newLeafNode(otherlv_30, grammarAccess.getPMMLModelAccess().getOutputPortKeyword_23());
		}
		otherlv_31='{'
		{
			newLeafNode(otherlv_31, grammarAccess.getPMMLModelAccess().getLeftCurlyBracketKeyword_24());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPMMLModelAccess().getOutputPortDataDictionaryParserRuleCall_25_0());
				}
				lv_outputPort_32_0=ruleDataDictionary
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPMMLModelRule());
					}
					add(
						$current,
						"outputPort",
						lv_outputPort_32_0,
						"xtext.Workflow.DataDictionary");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_33=','
			{
				newLeafNode(otherlv_33, grammarAccess.getPMMLModelAccess().getCommaKeyword_26_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPMMLModelAccess().getOutputPortDataDictionaryParserRuleCall_26_1_0());
					}
					lv_outputPort_34_0=ruleDataDictionary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPMMLModelRule());
						}
						add(
							$current,
							"outputPort",
							lv_outputPort_34_0,
							"xtext.Workflow.DataDictionary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_35='}'
		{
			newLeafNode(otherlv_35, grammarAccess.getPMMLModelAccess().getRightCurlyBracketKeyword_27());
		}
		(
			otherlv_36='test'
			{
				newLeafNode(otherlv_36, grammarAccess.getPMMLModelAccess().getTestKeyword_28_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPMMLModelAccess().getTestTestParserRuleCall_28_1_0());
					}
					lv_test_37_0=ruleTest
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPMMLModelRule());
						}
						set(
							$current,
							"test",
							lv_test_37_0,
							"xtext.Workflow.Test");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_38='}'
		{
			newLeafNode(otherlv_38, grammarAccess.getPMMLModelAccess().getRightCurlyBracketKeyword_29());
		}
	)
;

// Entry rule entryRuleDataProcessing
entryRuleDataProcessing returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataProcessingRule()); }
	iv_ruleDataProcessing=ruleDataProcessing
	{ $current=$iv_ruleDataProcessing.current; }
	EOF;

// Rule DataProcessing
ruleDataProcessing returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DataProcessing'
		{
			newLeafNode(otherlv_0, grammarAccess.getDataProcessingAccess().getDataProcessingKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataProcessingAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataProcessingRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"xtext.Workflow.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getDataProcessingAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='origin_function'
			{
				newLeafNode(otherlv_3, grammarAccess.getDataProcessingAccess().getOrigin_functionKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataProcessingAccess().getOrigin_functionEStringParserRuleCall_3_1_0());
					}
					lv_origin_function_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataProcessingRule());
						}
						set(
							$current,
							"origin_function",
							lv_origin_function_4_0,
							"xtext.Workflow.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='outgoing'
			{
				newLeafNode(otherlv_5, grammarAccess.getDataProcessingAccess().getOutgoingKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDataProcessingRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getDataProcessingAccess().getOutgoingLinkCrossReference_4_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7='incoming'
			{
				newLeafNode(otherlv_7, grammarAccess.getDataProcessingAccess().getIncomingKeyword_5_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDataProcessingRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getDataProcessingAccess().getIncomingLinkCrossReference_5_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_9='in'
		{
			newLeafNode(otherlv_9, grammarAccess.getDataProcessingAccess().getInKeyword_6());
		}
		otherlv_10='('
		{
			newLeafNode(otherlv_10, grammarAccess.getDataProcessingAccess().getLeftParenthesisKeyword_7());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataProcessingRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getDataProcessingAccess().getInArgumentCrossReference_8_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_12=','
			{
				newLeafNode(otherlv_12, grammarAccess.getDataProcessingAccess().getCommaKeyword_9_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDataProcessingRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getDataProcessingAccess().getInArgumentCrossReference_9_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_14=')'
		{
			newLeafNode(otherlv_14, grammarAccess.getDataProcessingAccess().getRightParenthesisKeyword_10());
		}
		otherlv_15='out'
		{
			newLeafNode(otherlv_15, grammarAccess.getDataProcessingAccess().getOutKeyword_11());
		}
		otherlv_16='('
		{
			newLeafNode(otherlv_16, grammarAccess.getDataProcessingAccess().getLeftParenthesisKeyword_12());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataProcessingRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getDataProcessingAccess().getOutArgumentCrossReference_13_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_18=','
			{
				newLeafNode(otherlv_18, grammarAccess.getDataProcessingAccess().getCommaKeyword_14_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDataProcessingRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getDataProcessingAccess().getOutArgumentCrossReference_14_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_20=')'
		{
			newLeafNode(otherlv_20, grammarAccess.getDataProcessingAccess().getRightParenthesisKeyword_15());
		}
		(
			otherlv_21='initial_accumulated_processing'
			{
				newLeafNode(otherlv_21, grammarAccess.getDataProcessingAccess().getInitial_accumulated_processingKeyword_16_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDataProcessingRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getDataProcessingAccess().getInitial_accumulated_processingDataProcessingCrossReference_16_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_23='inputPort'
		{
			newLeafNode(otherlv_23, grammarAccess.getDataProcessingAccess().getInputPortKeyword_17());
		}
		otherlv_24='{'
		{
			newLeafNode(otherlv_24, grammarAccess.getDataProcessingAccess().getLeftCurlyBracketKeyword_18());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataProcessingAccess().getInputPortDataDictionaryParserRuleCall_19_0());
				}
				lv_inputPort_25_0=ruleDataDictionary
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataProcessingRule());
					}
					add(
						$current,
						"inputPort",
						lv_inputPort_25_0,
						"xtext.Workflow.DataDictionary");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_26=','
			{
				newLeafNode(otherlv_26, grammarAccess.getDataProcessingAccess().getCommaKeyword_20_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataProcessingAccess().getInputPortDataDictionaryParserRuleCall_20_1_0());
					}
					lv_inputPort_27_0=ruleDataDictionary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataProcessingRule());
						}
						add(
							$current,
							"inputPort",
							lv_inputPort_27_0,
							"xtext.Workflow.DataDictionary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_28='}'
		{
			newLeafNode(otherlv_28, grammarAccess.getDataProcessingAccess().getRightCurlyBracketKeyword_21());
		}
		otherlv_29='outputPort'
		{
			newLeafNode(otherlv_29, grammarAccess.getDataProcessingAccess().getOutputPortKeyword_22());
		}
		otherlv_30='{'
		{
			newLeafNode(otherlv_30, grammarAccess.getDataProcessingAccess().getLeftCurlyBracketKeyword_23());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataProcessingAccess().getOutputPortDataDictionaryParserRuleCall_24_0());
				}
				lv_outputPort_31_0=ruleDataDictionary
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataProcessingRule());
					}
					add(
						$current,
						"outputPort",
						lv_outputPort_31_0,
						"xtext.Workflow.DataDictionary");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_32=','
			{
				newLeafNode(otherlv_32, grammarAccess.getDataProcessingAccess().getCommaKeyword_25_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataProcessingAccess().getOutputPortDataDictionaryParserRuleCall_25_1_0());
					}
					lv_outputPort_33_0=ruleDataDictionary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataProcessingRule());
						}
						add(
							$current,
							"outputPort",
							lv_outputPort_33_0,
							"xtext.Workflow.DataDictionary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_34='}'
		{
			newLeafNode(otherlv_34, grammarAccess.getDataProcessingAccess().getRightCurlyBracketKeyword_26());
		}
		(
			otherlv_35='parameter'
			{
				newLeafNode(otherlv_35, grammarAccess.getDataProcessingAccess().getParameterKeyword_27_0());
			}
			otherlv_36='{'
			{
				newLeafNode(otherlv_36, grammarAccess.getDataProcessingAccess().getLeftCurlyBracketKeyword_27_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataProcessingAccess().getParameterParameterParserRuleCall_27_2_0());
					}
					lv_parameter_37_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataProcessingRule());
						}
						add(
							$current,
							"parameter",
							lv_parameter_37_0,
							"xtext.Workflow.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_38=','
				{
					newLeafNode(otherlv_38, grammarAccess.getDataProcessingAccess().getCommaKeyword_27_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDataProcessingAccess().getParameterParameterParserRuleCall_27_3_1_0());
						}
						lv_parameter_39_0=ruleParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataProcessingRule());
							}
							add(
								$current,
								"parameter",
								lv_parameter_39_0,
								"xtext.Workflow.Parameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_40='}'
			{
				newLeafNode(otherlv_40, grammarAccess.getDataProcessingAccess().getRightCurlyBracketKeyword_27_4());
			}
		)?
		otherlv_41='}'
		{
			newLeafNode(otherlv_41, grammarAccess.getDataProcessingAccess().getRightCurlyBracketKeyword_28());
		}
	)
;

// Entry rule entryRuleValueField
entryRuleValueField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueFieldRule()); }
	iv_ruleValueField=ruleValueField
	{ $current=$iv_ruleValueField.current; }
	EOF;

// Rule ValueField
ruleValueField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getValueFieldAccess().getValueFieldAction_0(),
					$current);
			}
		)
		otherlv_1='ValueField'
		{
			newLeafNode(otherlv_1, grammarAccess.getValueFieldAccess().getValueFieldKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getValueFieldAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='value'
			{
				newLeafNode(otherlv_3, grammarAccess.getValueFieldAccess().getValueKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getValueFieldAccess().getValueEStringParserRuleCall_3_1_0());
					}
					lv_value_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueFieldRule());
						}
						set(
							$current,
							"value",
							lv_value_4_0,
							"xtext.Workflow.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='count'
			{
				newLeafNode(otherlv_5, grammarAccess.getValueFieldAccess().getCountKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getValueFieldAccess().getCountEIntParserRuleCall_4_1_0());
					}
					lv_count_6_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueFieldRule());
						}
						set(
							$current,
							"count",
							lv_count_6_0,
							"xtext.Workflow.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getValueFieldAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleCategorical
entryRuleCategorical returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCategoricalRule()); }
	iv_ruleCategorical=ruleCategorical
	{ $current=$iv_ruleCategorical.current; }
	EOF;

// Rule Categorical
ruleCategorical returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCategoricalAccess().getCategoricalAction_0(),
					$current);
			}
		)
		(
			(
				lv_id_1_0='id'
				{
					newLeafNode(lv_id_1_0, grammarAccess.getCategoricalAccess().getIdIdKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCategoricalRule());
					}
					setWithLastConsumed($current, "id", lv_id_1_0 != null, "id");
				}
			)
		)?
		(
			(
				lv_target_2_0='target'
				{
					newLeafNode(lv_target_2_0, grammarAccess.getCategoricalAccess().getTargetTargetKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCategoricalRule());
					}
					setWithLastConsumed($current, "target", lv_target_2_0 != null, "target");
				}
			)
		)?
		(
			(
				lv_ordinal_3_0='ordinal'
				{
					newLeafNode(lv_ordinal_3_0, grammarAccess.getCategoricalAccess().getOrdinalOrdinalKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCategoricalRule());
					}
					setWithLastConsumed($current, "ordinal", lv_ordinal_3_0 != null, "ordinal");
				}
			)
		)?
		otherlv_4='Categorical'
		{
			newLeafNode(otherlv_4, grammarAccess.getCategoricalAccess().getCategoricalKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCategoricalAccess().getNameEStringParserRuleCall_5_0());
				}
				lv_name_5_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCategoricalRule());
					}
					set(
						$current,
						"name",
						lv_name_5_0,
						"xtext.Workflow.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getCategoricalAccess().getLeftCurlyBracketKeyword_6());
		}
		(
			otherlv_7='dataType'
			{
				newLeafNode(otherlv_7, grammarAccess.getCategoricalAccess().getDataTypeKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCategoricalAccess().getDataTypeDataTypeEnumRuleCall_7_1_0());
					}
					lv_dataType_8_0=ruleDataType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCategoricalRule());
						}
						set(
							$current,
							"dataType",
							lv_dataType_8_0,
							"xtext.Workflow.DataType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_9='displayName'
			{
				newLeafNode(otherlv_9, grammarAccess.getCategoricalAccess().getDisplayNameKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCategoricalAccess().getDisplayNameEStringParserRuleCall_8_1_0());
					}
					lv_displayName_10_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCategoricalRule());
						}
						set(
							$current,
							"displayName",
							lv_displayName_10_0,
							"xtext.Workflow.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_11='in'
			{
				newLeafNode(otherlv_11, grammarAccess.getCategoricalAccess().getInKeyword_9_0());
			}
			otherlv_12='('
			{
				newLeafNode(otherlv_12, grammarAccess.getCategoricalAccess().getLeftParenthesisKeyword_9_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCategoricalRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getCategoricalAccess().getInDataFieldCrossReference_9_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_14=','
				{
					newLeafNode(otherlv_14, grammarAccess.getCategoricalAccess().getCommaKeyword_9_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getCategoricalRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getCategoricalAccess().getInDataFieldCrossReference_9_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_16=')'
			{
				newLeafNode(otherlv_16, grammarAccess.getCategoricalAccess().getRightParenthesisKeyword_9_4());
			}
		)?
		(
			otherlv_17='out'
			{
				newLeafNode(otherlv_17, grammarAccess.getCategoricalAccess().getOutKeyword_10_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCategoricalRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getCategoricalAccess().getOutDataFieldCrossReference_10_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_19='validValues'
			{
				newLeafNode(otherlv_19, grammarAccess.getCategoricalAccess().getValidValuesKeyword_11_0());
			}
			otherlv_20='{'
			{
				newLeafNode(otherlv_20, grammarAccess.getCategoricalAccess().getLeftCurlyBracketKeyword_11_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCategoricalAccess().getValidValuesValueFieldParserRuleCall_11_2_0());
					}
					lv_validValues_21_0=ruleValueField
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCategoricalRule());
						}
						add(
							$current,
							"validValues",
							lv_validValues_21_0,
							"xtext.Workflow.ValueField");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_22=','
				{
					newLeafNode(otherlv_22, grammarAccess.getCategoricalAccess().getCommaKeyword_11_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCategoricalAccess().getValidValuesValueFieldParserRuleCall_11_3_1_0());
						}
						lv_validValues_23_0=ruleValueField
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCategoricalRule());
							}
							add(
								$current,
								"validValues",
								lv_validValues_23_0,
								"xtext.Workflow.ValueField");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_24='}'
			{
				newLeafNode(otherlv_24, grammarAccess.getCategoricalAccess().getRightCurlyBracketKeyword_11_4());
			}
		)?
		(
			otherlv_25='invalidValues'
			{
				newLeafNode(otherlv_25, grammarAccess.getCategoricalAccess().getInvalidValuesKeyword_12_0());
			}
			otherlv_26='{'
			{
				newLeafNode(otherlv_26, grammarAccess.getCategoricalAccess().getLeftCurlyBracketKeyword_12_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCategoricalAccess().getInvalidValuesValueFieldParserRuleCall_12_2_0());
					}
					lv_invalidValues_27_0=ruleValueField
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCategoricalRule());
						}
						add(
							$current,
							"invalidValues",
							lv_invalidValues_27_0,
							"xtext.Workflow.ValueField");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_28=','
				{
					newLeafNode(otherlv_28, grammarAccess.getCategoricalAccess().getCommaKeyword_12_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCategoricalAccess().getInvalidValuesValueFieldParserRuleCall_12_3_1_0());
						}
						lv_invalidValues_29_0=ruleValueField
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCategoricalRule());
							}
							add(
								$current,
								"invalidValues",
								lv_invalidValues_29_0,
								"xtext.Workflow.ValueField");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_30='}'
			{
				newLeafNode(otherlv_30, grammarAccess.getCategoricalAccess().getRightCurlyBracketKeyword_12_4());
			}
		)?
		(
			otherlv_31='missingValues'
			{
				newLeafNode(otherlv_31, grammarAccess.getCategoricalAccess().getMissingValuesKeyword_13_0());
			}
			otherlv_32='{'
			{
				newLeafNode(otherlv_32, grammarAccess.getCategoricalAccess().getLeftCurlyBracketKeyword_13_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCategoricalAccess().getMissingValuesValueFieldParserRuleCall_13_2_0());
					}
					lv_missingValues_33_0=ruleValueField
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCategoricalRule());
						}
						add(
							$current,
							"missingValues",
							lv_missingValues_33_0,
							"xtext.Workflow.ValueField");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_34=','
				{
					newLeafNode(otherlv_34, grammarAccess.getCategoricalAccess().getCommaKeyword_13_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCategoricalAccess().getMissingValuesValueFieldParserRuleCall_13_3_1_0());
						}
						lv_missingValues_35_0=ruleValueField
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCategoricalRule());
							}
							add(
								$current,
								"missingValues",
								lv_missingValues_35_0,
								"xtext.Workflow.ValueField");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_36='}'
			{
				newLeafNode(otherlv_36, grammarAccess.getCategoricalAccess().getRightCurlyBracketKeyword_13_4());
			}
		)?
		otherlv_37='}'
		{
			newLeafNode(otherlv_37, grammarAccess.getCategoricalAccess().getRightCurlyBracketKeyword_14());
		}
	)
;

// Entry rule entryRuleContinuous
entryRuleContinuous returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContinuousRule()); }
	iv_ruleContinuous=ruleContinuous
	{ $current=$iv_ruleContinuous.current; }
	EOF;

// Rule Continuous
ruleContinuous returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_id_0_0='id'
				{
					newLeafNode(lv_id_0_0, grammarAccess.getContinuousAccess().getIdIdKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getContinuousRule());
					}
					setWithLastConsumed($current, "id", lv_id_0_0 != null, "id");
				}
			)
		)?
		(
			(
				lv_target_1_0='target'
				{
					newLeafNode(lv_target_1_0, grammarAccess.getContinuousAccess().getTargetTargetKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getContinuousRule());
					}
					setWithLastConsumed($current, "target", lv_target_1_0 != null, "target");
				}
			)
		)?
		otherlv_2='Continuous'
		{
			newLeafNode(otherlv_2, grammarAccess.getContinuousAccess().getContinuousKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getContinuousAccess().getNameEStringParserRuleCall_3_0());
				}
				lv_name_3_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContinuousRule());
					}
					set(
						$current,
						"name",
						lv_name_3_0,
						"xtext.Workflow.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getContinuousAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			otherlv_5='dataType'
			{
				newLeafNode(otherlv_5, grammarAccess.getContinuousAccess().getDataTypeKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getContinuousAccess().getDataTypeDataTypeEnumRuleCall_5_1_0());
					}
					lv_dataType_6_0=ruleDataType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getContinuousRule());
						}
						set(
							$current,
							"dataType",
							lv_dataType_6_0,
							"xtext.Workflow.DataType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7='displayName'
			{
				newLeafNode(otherlv_7, grammarAccess.getContinuousAccess().getDisplayNameKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getContinuousAccess().getDisplayNameEStringParserRuleCall_6_1_0());
					}
					lv_displayName_8_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getContinuousRule());
						}
						set(
							$current,
							"displayName",
							lv_displayName_8_0,
							"xtext.Workflow.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_9='numDecimals'
			{
				newLeafNode(otherlv_9, grammarAccess.getContinuousAccess().getNumDecimalsKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getContinuousAccess().getNumDecimalsEIntegerObjectParserRuleCall_7_1_0());
					}
					lv_numDecimals_10_0=ruleEIntegerObject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getContinuousRule());
						}
						set(
							$current,
							"numDecimals",
							lv_numDecimals_10_0,
							"xtext.Workflow.EIntegerObject");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_11='in'
			{
				newLeafNode(otherlv_11, grammarAccess.getContinuousAccess().getInKeyword_8_0());
			}
			otherlv_12='('
			{
				newLeafNode(otherlv_12, grammarAccess.getContinuousAccess().getLeftParenthesisKeyword_8_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getContinuousRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getContinuousAccess().getInDataFieldCrossReference_8_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_14=','
				{
					newLeafNode(otherlv_14, grammarAccess.getContinuousAccess().getCommaKeyword_8_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getContinuousRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getContinuousAccess().getInDataFieldCrossReference_8_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_16=')'
			{
				newLeafNode(otherlv_16, grammarAccess.getContinuousAccess().getRightParenthesisKeyword_8_4());
			}
		)?
		(
			otherlv_17='out'
			{
				newLeafNode(otherlv_17, grammarAccess.getContinuousAccess().getOutKeyword_9_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getContinuousRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getContinuousAccess().getOutDataFieldCrossReference_9_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_19='validValues'
			{
				newLeafNode(otherlv_19, grammarAccess.getContinuousAccess().getValidValuesKeyword_10_0());
			}
			otherlv_20='{'
			{
				newLeafNode(otherlv_20, grammarAccess.getContinuousAccess().getLeftCurlyBracketKeyword_10_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getContinuousAccess().getValidValuesValueFieldParserRuleCall_10_2_0());
					}
					lv_validValues_21_0=ruleValueField
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getContinuousRule());
						}
						add(
							$current,
							"validValues",
							lv_validValues_21_0,
							"xtext.Workflow.ValueField");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_22=','
				{
					newLeafNode(otherlv_22, grammarAccess.getContinuousAccess().getCommaKeyword_10_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getContinuousAccess().getValidValuesValueFieldParserRuleCall_10_3_1_0());
						}
						lv_validValues_23_0=ruleValueField
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getContinuousRule());
							}
							add(
								$current,
								"validValues",
								lv_validValues_23_0,
								"xtext.Workflow.ValueField");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_24='}'
			{
				newLeafNode(otherlv_24, grammarAccess.getContinuousAccess().getRightCurlyBracketKeyword_10_4());
			}
		)?
		(
			otherlv_25='invalidValues'
			{
				newLeafNode(otherlv_25, grammarAccess.getContinuousAccess().getInvalidValuesKeyword_11_0());
			}
			otherlv_26='{'
			{
				newLeafNode(otherlv_26, grammarAccess.getContinuousAccess().getLeftCurlyBracketKeyword_11_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getContinuousAccess().getInvalidValuesValueFieldParserRuleCall_11_2_0());
					}
					lv_invalidValues_27_0=ruleValueField
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getContinuousRule());
						}
						add(
							$current,
							"invalidValues",
							lv_invalidValues_27_0,
							"xtext.Workflow.ValueField");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_28=','
				{
					newLeafNode(otherlv_28, grammarAccess.getContinuousAccess().getCommaKeyword_11_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getContinuousAccess().getInvalidValuesValueFieldParserRuleCall_11_3_1_0());
						}
						lv_invalidValues_29_0=ruleValueField
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getContinuousRule());
							}
							add(
								$current,
								"invalidValues",
								lv_invalidValues_29_0,
								"xtext.Workflow.ValueField");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_30='}'
			{
				newLeafNode(otherlv_30, grammarAccess.getContinuousAccess().getRightCurlyBracketKeyword_11_4());
			}
		)?
		(
			otherlv_31='missingValues'
			{
				newLeafNode(otherlv_31, grammarAccess.getContinuousAccess().getMissingValuesKeyword_12_0());
			}
			otherlv_32='{'
			{
				newLeafNode(otherlv_32, grammarAccess.getContinuousAccess().getLeftCurlyBracketKeyword_12_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getContinuousAccess().getMissingValuesValueFieldParserRuleCall_12_2_0());
					}
					lv_missingValues_33_0=ruleValueField
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getContinuousRule());
						}
						add(
							$current,
							"missingValues",
							lv_missingValues_33_0,
							"xtext.Workflow.ValueField");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_34=','
				{
					newLeafNode(otherlv_34, grammarAccess.getContinuousAccess().getCommaKeyword_12_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getContinuousAccess().getMissingValuesValueFieldParserRuleCall_12_3_1_0());
						}
						lv_missingValues_35_0=ruleValueField
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getContinuousRule());
							}
							add(
								$current,
								"missingValues",
								lv_missingValues_35_0,
								"xtext.Workflow.ValueField");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_36='}'
			{
				newLeafNode(otherlv_36, grammarAccess.getContinuousAccess().getRightCurlyBracketKeyword_12_4());
			}
		)?
		otherlv_37='interval'
		{
			newLeafNode(otherlv_37, grammarAccess.getContinuousAccess().getIntervalKeyword_13());
		}
		otherlv_38='{'
		{
			newLeafNode(otherlv_38, grammarAccess.getContinuousAccess().getLeftCurlyBracketKeyword_14());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getContinuousAccess().getIntervalIntervalParserRuleCall_15_0());
				}
				lv_interval_39_0=ruleInterval
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContinuousRule());
					}
					add(
						$current,
						"interval",
						lv_interval_39_0,
						"xtext.Workflow.Interval");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_40=','
			{
				newLeafNode(otherlv_40, grammarAccess.getContinuousAccess().getCommaKeyword_16_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getContinuousAccess().getIntervalIntervalParserRuleCall_16_1_0());
					}
					lv_interval_41_0=ruleInterval
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getContinuousRule());
						}
						add(
							$current,
							"interval",
							lv_interval_41_0,
							"xtext.Workflow.Interval");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_42='}'
		{
			newLeafNode(otherlv_42, grammarAccess.getContinuousAccess().getRightCurlyBracketKeyword_17());
		}
		otherlv_43='}'
		{
			newLeafNode(otherlv_43, grammarAccess.getContinuousAccess().getRightCurlyBracketKeyword_18());
		}
	)
;

// Entry rule entryRuleDate
entryRuleDate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDateRule()); }
	iv_ruleDate=ruleDate
	{ $current=$iv_ruleDate.current; }
	EOF;

// Rule Date
ruleDate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_id_0_0='id'
				{
					newLeafNode(lv_id_0_0, grammarAccess.getDateAccess().getIdIdKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDateRule());
					}
					setWithLastConsumed($current, "id", lv_id_0_0 != null, "id");
				}
			)
		)?
		(
			(
				lv_target_1_0='target'
				{
					newLeafNode(lv_target_1_0, grammarAccess.getDateAccess().getTargetTargetKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDateRule());
					}
					setWithLastConsumed($current, "target", lv_target_1_0 != null, "target");
				}
			)
		)?
		otherlv_2='Date'
		{
			newLeafNode(otherlv_2, grammarAccess.getDateAccess().getDateKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDateAccess().getNameEStringParserRuleCall_3_0());
				}
				lv_name_3_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDateRule());
					}
					set(
						$current,
						"name",
						lv_name_3_0,
						"xtext.Workflow.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getDateAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			otherlv_5='dataType'
			{
				newLeafNode(otherlv_5, grammarAccess.getDateAccess().getDataTypeKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDateAccess().getDataTypeDataTypeEnumRuleCall_5_1_0());
					}
					lv_dataType_6_0=ruleDataType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDateRule());
						}
						set(
							$current,
							"dataType",
							lv_dataType_6_0,
							"xtext.Workflow.DataType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7='displayName'
			{
				newLeafNode(otherlv_7, grammarAccess.getDateAccess().getDisplayNameKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDateAccess().getDisplayNameEStringParserRuleCall_6_1_0());
					}
					lv_displayName_8_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDateRule());
						}
						set(
							$current,
							"displayName",
							lv_displayName_8_0,
							"xtext.Workflow.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_9='format'
			{
				newLeafNode(otherlv_9, grammarAccess.getDateAccess().getFormatKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDateAccess().getFormatEStringParserRuleCall_7_1_0());
					}
					lv_format_10_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDateRule());
						}
						set(
							$current,
							"format",
							lv_format_10_0,
							"xtext.Workflow.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_11='in'
			{
				newLeafNode(otherlv_11, grammarAccess.getDateAccess().getInKeyword_8_0());
			}
			otherlv_12='('
			{
				newLeafNode(otherlv_12, grammarAccess.getDateAccess().getLeftParenthesisKeyword_8_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDateRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getDateAccess().getInDataFieldCrossReference_8_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_14=','
				{
					newLeafNode(otherlv_14, grammarAccess.getDateAccess().getCommaKeyword_8_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDateRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getDateAccess().getInDataFieldCrossReference_8_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_16=')'
			{
				newLeafNode(otherlv_16, grammarAccess.getDateAccess().getRightParenthesisKeyword_8_4());
			}
		)?
		(
			otherlv_17='out'
			{
				newLeafNode(otherlv_17, grammarAccess.getDateAccess().getOutKeyword_9_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDateRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getDateAccess().getOutDataFieldCrossReference_9_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_19='validValues'
			{
				newLeafNode(otherlv_19, grammarAccess.getDateAccess().getValidValuesKeyword_10_0());
			}
			otherlv_20='{'
			{
				newLeafNode(otherlv_20, grammarAccess.getDateAccess().getLeftCurlyBracketKeyword_10_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDateAccess().getValidValuesValueFieldParserRuleCall_10_2_0());
					}
					lv_validValues_21_0=ruleValueField
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDateRule());
						}
						add(
							$current,
							"validValues",
							lv_validValues_21_0,
							"xtext.Workflow.ValueField");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_22=','
				{
					newLeafNode(otherlv_22, grammarAccess.getDateAccess().getCommaKeyword_10_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDateAccess().getValidValuesValueFieldParserRuleCall_10_3_1_0());
						}
						lv_validValues_23_0=ruleValueField
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDateRule());
							}
							add(
								$current,
								"validValues",
								lv_validValues_23_0,
								"xtext.Workflow.ValueField");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_24='}'
			{
				newLeafNode(otherlv_24, grammarAccess.getDateAccess().getRightCurlyBracketKeyword_10_4());
			}
		)?
		(
			otherlv_25='invalidValues'
			{
				newLeafNode(otherlv_25, grammarAccess.getDateAccess().getInvalidValuesKeyword_11_0());
			}
			otherlv_26='{'
			{
				newLeafNode(otherlv_26, grammarAccess.getDateAccess().getLeftCurlyBracketKeyword_11_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDateAccess().getInvalidValuesValueFieldParserRuleCall_11_2_0());
					}
					lv_invalidValues_27_0=ruleValueField
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDateRule());
						}
						add(
							$current,
							"invalidValues",
							lv_invalidValues_27_0,
							"xtext.Workflow.ValueField");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_28=','
				{
					newLeafNode(otherlv_28, grammarAccess.getDateAccess().getCommaKeyword_11_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDateAccess().getInvalidValuesValueFieldParserRuleCall_11_3_1_0());
						}
						lv_invalidValues_29_0=ruleValueField
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDateRule());
							}
							add(
								$current,
								"invalidValues",
								lv_invalidValues_29_0,
								"xtext.Workflow.ValueField");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_30='}'
			{
				newLeafNode(otherlv_30, grammarAccess.getDateAccess().getRightCurlyBracketKeyword_11_4());
			}
		)?
		(
			otherlv_31='missingValues'
			{
				newLeafNode(otherlv_31, grammarAccess.getDateAccess().getMissingValuesKeyword_12_0());
			}
			otherlv_32='{'
			{
				newLeafNode(otherlv_32, grammarAccess.getDateAccess().getLeftCurlyBracketKeyword_12_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDateAccess().getMissingValuesValueFieldParserRuleCall_12_2_0());
					}
					lv_missingValues_33_0=ruleValueField
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDateRule());
						}
						add(
							$current,
							"missingValues",
							lv_missingValues_33_0,
							"xtext.Workflow.ValueField");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_34=','
				{
					newLeafNode(otherlv_34, grammarAccess.getDateAccess().getCommaKeyword_12_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDateAccess().getMissingValuesValueFieldParserRuleCall_12_3_1_0());
						}
						lv_missingValues_35_0=ruleValueField
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDateRule());
							}
							add(
								$current,
								"missingValues",
								lv_missingValues_35_0,
								"xtext.Workflow.ValueField");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_36='}'
			{
				newLeafNode(otherlv_36, grammarAccess.getDateAccess().getRightCurlyBracketKeyword_12_4());
			}
		)?
		otherlv_37='intervaldate'
		{
			newLeafNode(otherlv_37, grammarAccess.getDateAccess().getIntervaldateKeyword_13());
		}
		otherlv_38='{'
		{
			newLeafNode(otherlv_38, grammarAccess.getDateAccess().getLeftCurlyBracketKeyword_14());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDateAccess().getIntervaldateIntervalDateParserRuleCall_15_0());
				}
				lv_intervaldate_39_0=ruleIntervalDate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDateRule());
					}
					add(
						$current,
						"intervaldate",
						lv_intervaldate_39_0,
						"xtext.Workflow.IntervalDate");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_40=','
			{
				newLeafNode(otherlv_40, grammarAccess.getDateAccess().getCommaKeyword_16_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDateAccess().getIntervaldateIntervalDateParserRuleCall_16_1_0());
					}
					lv_intervaldate_41_0=ruleIntervalDate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDateRule());
						}
						add(
							$current,
							"intervaldate",
							lv_intervaldate_41_0,
							"xtext.Workflow.IntervalDate");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_42='}'
		{
			newLeafNode(otherlv_42, grammarAccess.getDateAccess().getRightCurlyBracketKeyword_17());
		}
		otherlv_43='}'
		{
			newLeafNode(otherlv_43, grammarAccess.getDateAccess().getRightCurlyBracketKeyword_18());
		}
	)
;

// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEIntRule()); }
	iv_ruleEInt=ruleEInt
	{ $current=$iv_ruleEInt.current.getText(); }
	EOF;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleInterval
entryRuleInterval returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntervalRule()); }
	iv_ruleInterval=ruleInterval
	{ $current=$iv_ruleInterval.current; }
	EOF;

// Rule Interval
ruleInterval returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getIntervalAccess().getIntervalAction_0(),
					$current);
			}
		)
		otherlv_1='Interval'
		{
			newLeafNode(otherlv_1, grammarAccess.getIntervalAccess().getIntervalKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getIntervalAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='leftMargin'
			{
				newLeafNode(otherlv_3, grammarAccess.getIntervalAccess().getLeftMarginKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIntervalAccess().getLeftMarginEFloatParserRuleCall_3_1_0());
					}
					lv_leftMargin_4_0=ruleEFloat
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIntervalRule());
						}
						set(
							$current,
							"leftMargin",
							lv_leftMargin_4_0,
							"xtext.Workflow.EFloat");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='rightMargin'
			{
				newLeafNode(otherlv_5, grammarAccess.getIntervalAccess().getRightMarginKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIntervalAccess().getRightMarginEFloatParserRuleCall_4_1_0());
					}
					lv_rightMargin_6_0=ruleEFloat
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIntervalRule());
						}
						set(
							$current,
							"rightMargin",
							lv_rightMargin_6_0,
							"xtext.Workflow.EFloat");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7='clousure'
			{
				newLeafNode(otherlv_7, grammarAccess.getIntervalAccess().getClousureKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIntervalAccess().getClousureClosureTypeEnumRuleCall_5_1_0());
					}
					lv_clousure_8_0=ruleClosureType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIntervalRule());
						}
						set(
							$current,
							"clousure",
							lv_clousure_8_0,
							"xtext.Workflow.ClosureType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getIntervalAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleEIntegerObject
entryRuleEIntegerObject returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEIntegerObjectRule()); }
	iv_ruleEIntegerObject=ruleEIntegerObject
	{ $current=$iv_ruleEIntegerObject.current.getText(); }
	EOF;

// Rule EIntegerObject
ruleEIntegerObject returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEIntegerObjectAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getEIntegerObjectAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleEFloat
entryRuleEFloat returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEFloatRule()); }
	iv_ruleEFloat=ruleEFloat
	{ $current=$iv_ruleEFloat.current.getText(); }
	EOF;

// Rule EFloat
ruleEFloat returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEFloatAccess().getHyphenMinusKeyword_0());
			}
		)?
		(
			this_INT_1=RULE_INT
			{
				$current.merge(this_INT_1);
			}
			{
				newLeafNode(this_INT_1, grammarAccess.getEFloatAccess().getINTTerminalRuleCall_1());
			}
		)?
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEFloatAccess().getFullStopKeyword_2());
		}
		this_INT_3=RULE_INT
		{
			$current.merge(this_INT_3);
		}
		{
			newLeafNode(this_INT_3, grammarAccess.getEFloatAccess().getINTTerminalRuleCall_3());
		}
		(
			(
				kw='E'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEFloatAccess().getEKeyword_4_0_0());
				}
				    |
				kw='e'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEFloatAccess().getEKeyword_4_0_1());
				}
			)
			(
				kw='-'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEFloatAccess().getHyphenMinusKeyword_4_1());
				}
			)?
			this_INT_7=RULE_INT
			{
				$current.merge(this_INT_7);
			}
			{
				newLeafNode(this_INT_7, grammarAccess.getEFloatAccess().getINTTerminalRuleCall_4_2());
			}
		)?
	)
;

// Entry rule entryRuleIntervalDate
entryRuleIntervalDate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntervalDateRule()); }
	iv_ruleIntervalDate=ruleIntervalDate
	{ $current=$iv_ruleIntervalDate.current; }
	EOF;

// Rule IntervalDate
ruleIntervalDate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getIntervalDateAccess().getIntervalDateAction_0(),
					$current);
			}
		)
		otherlv_1='IntervalDate'
		{
			newLeafNode(otherlv_1, grammarAccess.getIntervalDateAccess().getIntervalDateKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getIntervalDateAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='rightMargin'
			{
				newLeafNode(otherlv_3, grammarAccess.getIntervalDateAccess().getRightMarginKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIntervalDateAccess().getRightMarginEStringParserRuleCall_3_1_0());
					}
					lv_rightMargin_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIntervalDateRule());
						}
						set(
							$current,
							"rightMargin",
							lv_rightMargin_4_0,
							"xtext.Workflow.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='clousure'
			{
				newLeafNode(otherlv_5, grammarAccess.getIntervalDateAccess().getClousureKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIntervalDateAccess().getClousureClosureTypeEnumRuleCall_4_1_0());
					}
					lv_clousure_6_0=ruleClosureType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIntervalDateRule());
						}
						set(
							$current,
							"clousure",
							lv_clousure_6_0,
							"xtext.Workflow.ClosureType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7='leftMargin'
			{
				newLeafNode(otherlv_7, grammarAccess.getIntervalDateAccess().getLeftMarginKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIntervalDateAccess().getLeftMarginEStringParserRuleCall_5_1_0());
					}
					lv_leftMargin_8_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIntervalDateRule());
						}
						set(
							$current,
							"leftMargin",
							lv_leftMargin_8_0,
							"xtext.Workflow.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getIntervalDateAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleTest
entryRuleTest returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTestRule()); }
	iv_ruleTest=ruleTest
	{ $current=$iv_ruleTest.current; }
	EOF;

// Rule Test
ruleTest returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTestAccess().getTestAction_0(),
					$current);
			}
		)
		otherlv_1='Test'
		{
			newLeafNode(otherlv_1, grammarAccess.getTestAccess().getTestKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getTestAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='path'
			{
				newLeafNode(otherlv_3, grammarAccess.getTestAccess().getPathKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTestAccess().getPathEStringParserRuleCall_3_1_0());
					}
					lv_path_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTestRule());
						}
						set(
							$current,
							"path",
							lv_path_4_0,
							"xtext.Workflow.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='trainSize'
			{
				newLeafNode(otherlv_5, grammarAccess.getTestAccess().getTrainSizeKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTestAccess().getTrainSizeEFloatParserRuleCall_4_1_0());
					}
					lv_trainSize_6_0=ruleEFloat
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTestRule());
						}
						set(
							$current,
							"trainSize",
							lv_trainSize_6_0,
							"xtext.Workflow.EFloat");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7='testSize'
			{
				newLeafNode(otherlv_7, grammarAccess.getTestAccess().getTestSizeKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTestAccess().getTestSizeEFloatParserRuleCall_5_1_0());
					}
					lv_testSize_8_0=ruleEFloat
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTestRule());
						}
						set(
							$current,
							"testSize",
							lv_testSize_8_0,
							"xtext.Workflow.EFloat");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getTestAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleMap
entryRuleMap returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMapRule()); }
	iv_ruleMap=ruleMap
	{ $current=$iv_ruleMap.current; }
	EOF;

// Rule Map
ruleMap returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMapAccess().getMapAction_0(),
					$current);
			}
		)
		otherlv_1='Map'
		{
			newLeafNode(otherlv_1, grammarAccess.getMapAccess().getMapKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMapAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMapRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"xtext.Workflow.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getMapAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='inValue'
			{
				newLeafNode(otherlv_4, grammarAccess.getMapAccess().getInValueKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMapAccess().getInValueEStringParserRuleCall_4_1_0());
					}
					lv_inValue_5_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMapRule());
						}
						set(
							$current,
							"inValue",
							lv_inValue_5_0,
							"xtext.Workflow.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='outvalue'
			{
				newLeafNode(otherlv_6, grammarAccess.getMapAccess().getOutvalueKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMapAccess().getOutvalueEStringParserRuleCall_5_1_0());
					}
					lv_outvalue_7_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMapRule());
						}
						set(
							$current,
							"outvalue",
							lv_outvalue_7_0,
							"xtext.Workflow.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_8='mapOperation'
			{
				newLeafNode(otherlv_8, grammarAccess.getMapAccess().getMapOperationKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMapAccess().getMapOperationMapOperationEnumRuleCall_6_1_0());
					}
					lv_mapOperation_9_0=ruleMapOperation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMapRule());
						}
						set(
							$current,
							"mapOperation",
							lv_mapOperation_9_0,
							"xtext.Workflow.MapOperation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getMapAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRulePrimitive
entryRulePrimitive returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimitiveRule()); }
	iv_rulePrimitive=rulePrimitive
	{ $current=$iv_rulePrimitive.current; }
	EOF;

// Rule Primitive
rulePrimitive returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPrimitiveAccess().getPrimitiveAction_0(),
					$current);
			}
		)
		otherlv_1='Primitive'
		{
			newLeafNode(otherlv_1, grammarAccess.getPrimitiveAccess().getPrimitiveKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPrimitiveAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPrimitiveRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"xtext.Workflow.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getPrimitiveAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='value'
			{
				newLeafNode(otherlv_4, grammarAccess.getPrimitiveAccess().getValueKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimitiveAccess().getValueEStringParserRuleCall_4_1_0());
					}
					lv_value_5_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimitiveRule());
						}
						set(
							$current,
							"value",
							lv_value_5_0,
							"xtext.Workflow.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='dataType'
			{
				newLeafNode(otherlv_6, grammarAccess.getPrimitiveAccess().getDataTypeKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimitiveAccess().getDataTypeDataTypeEnumRuleCall_5_1_0());
					}
					lv_dataType_7_0=ruleDataType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimitiveRule());
						}
						set(
							$current,
							"dataType",
							lv_dataType_7_0,
							"xtext.Workflow.DataType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getPrimitiveAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleDerivedField
entryRuleDerivedField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDerivedFieldRule()); }
	iv_ruleDerivedField=ruleDerivedField
	{ $current=$iv_ruleDerivedField.current; }
	EOF;

// Rule DerivedField
ruleDerivedField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DerivedField'
		{
			newLeafNode(otherlv_0, grammarAccess.getDerivedFieldAccess().getDerivedFieldKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDerivedFieldAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDerivedFieldRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"xtext.Workflow.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getDerivedFieldAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='der_dataField'
		{
			newLeafNode(otherlv_3, grammarAccess.getDerivedFieldAccess().getDer_dataFieldKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDerivedFieldRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getDerivedFieldAccess().getDer_dataFieldDataFieldCrossReference_4_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getDerivedFieldAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleFilterValue
entryRuleFilterValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFilterValueRule()); }
	iv_ruleFilterValue=ruleFilterValue
	{ $current=$iv_ruleFilterValue.current; }
	EOF;

// Rule FilterValue
ruleFilterValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFilterValueAccess().getFilterValueAction_0(),
					$current);
			}
		)
		otherlv_1='FilterValue'
		{
			newLeafNode(otherlv_1, grammarAccess.getFilterValueAccess().getFilterValueKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFilterValueAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFilterValueRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"xtext.Workflow.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getFilterValueAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='filterType'
			{
				newLeafNode(otherlv_4, grammarAccess.getFilterValueAccess().getFilterTypeKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFilterValueAccess().getFilterTypeFilterTypeEnumRuleCall_4_1_0());
					}
					lv_filterType_5_0=ruleFilterType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFilterValueRule());
						}
						set(
							$current,
							"filterType",
							lv_filterType_5_0,
							"xtext.Workflow.FilterType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='primitive'
			{
				newLeafNode(otherlv_6, grammarAccess.getFilterValueAccess().getPrimitiveKeyword_5_0());
			}
			otherlv_7='{'
			{
				newLeafNode(otherlv_7, grammarAccess.getFilterValueAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFilterValueAccess().getPrimitivePrimitiveParserRuleCall_5_2_0());
					}
					lv_primitive_8_0=rulePrimitive
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFilterValueRule());
						}
						add(
							$current,
							"primitive",
							lv_primitive_8_0,
							"xtext.Workflow.Primitive");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_9=','
				{
					newLeafNode(otherlv_9, grammarAccess.getFilterValueAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFilterValueAccess().getPrimitivePrimitiveParserRuleCall_5_3_1_0());
						}
						lv_primitive_10_0=rulePrimitive
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFilterValueRule());
							}
							add(
								$current,
								"primitive",
								lv_primitive_10_0,
								"xtext.Workflow.Primitive");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_11='}'
			{
				newLeafNode(otherlv_11, grammarAccess.getFilterValueAccess().getRightCurlyBracketKeyword_5_4());
			}
		)?
		(
			otherlv_12='matchingvalue'
			{
				newLeafNode(otherlv_12, grammarAccess.getFilterValueAccess().getMatchingvalueKeyword_6_0());
			}
			otherlv_13='{'
			{
				newLeafNode(otherlv_13, grammarAccess.getFilterValueAccess().getLeftCurlyBracketKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFilterValueAccess().getMatchingvalueMatchingValueParserRuleCall_6_2_0());
					}
					lv_matchingvalue_14_0=ruleMatchingValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFilterValueRule());
						}
						add(
							$current,
							"matchingvalue",
							lv_matchingvalue_14_0,
							"xtext.Workflow.MatchingValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_15=','
				{
					newLeafNode(otherlv_15, grammarAccess.getFilterValueAccess().getCommaKeyword_6_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFilterValueAccess().getMatchingvalueMatchingValueParserRuleCall_6_3_1_0());
						}
						lv_matchingvalue_16_0=ruleMatchingValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFilterValueRule());
							}
							add(
								$current,
								"matchingvalue",
								lv_matchingvalue_16_0,
								"xtext.Workflow.MatchingValue");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_17='}'
			{
				newLeafNode(otherlv_17, grammarAccess.getFilterValueAccess().getRightCurlyBracketKeyword_6_4());
			}
		)?
		otherlv_18='}'
		{
			newLeafNode(otherlv_18, grammarAccess.getFilterValueAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleRange
entryRuleRange returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRangeRule()); }
	iv_ruleRange=ruleRange
	{ $current=$iv_ruleRange.current; }
	EOF;

// Rule Range
ruleRange returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRangeAccess().getRangeAction_0(),
					$current);
			}
		)
		(
			(
				lv_minInfinity_1_0='minInfinity'
				{
					newLeafNode(lv_minInfinity_1_0, grammarAccess.getRangeAccess().getMinInfinityMinInfinityKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRangeRule());
					}
					setWithLastConsumed($current, "minInfinity", lv_minInfinity_1_0 != null, "minInfinity");
				}
			)
		)?
		(
			(
				lv_maxInfinity_2_0='maxInfinity'
				{
					newLeafNode(lv_maxInfinity_2_0, grammarAccess.getRangeAccess().getMaxInfinityMaxInfinityKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRangeRule());
					}
					setWithLastConsumed($current, "maxInfinity", lv_maxInfinity_2_0 != null, "maxInfinity");
				}
			)
		)?
		otherlv_3='Range'
		{
			newLeafNode(otherlv_3, grammarAccess.getRangeAccess().getRangeKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRangeAccess().getNameEStringParserRuleCall_4_0());
				}
				lv_name_4_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRangeRule());
					}
					set(
						$current,
						"name",
						lv_name_4_0,
						"xtext.Workflow.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='{'
		{
			newLeafNode(otherlv_5, grammarAccess.getRangeAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			otherlv_6='min'
			{
				newLeafNode(otherlv_6, grammarAccess.getRangeAccess().getMinKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRangeAccess().getMinEFloatParserRuleCall_6_1_0());
					}
					lv_min_7_0=ruleEFloat
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRangeRule());
						}
						set(
							$current,
							"min",
							lv_min_7_0,
							"xtext.Workflow.EFloat");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_8='max'
			{
				newLeafNode(otherlv_8, grammarAccess.getRangeAccess().getMaxKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRangeAccess().getMaxEFloatParserRuleCall_7_1_0());
					}
					lv_max_9_0=ruleEFloat
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRangeRule());
						}
						set(
							$current,
							"max",
							lv_max_9_0,
							"xtext.Workflow.EFloat");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_10='clousure'
			{
				newLeafNode(otherlv_10, grammarAccess.getRangeAccess().getClousureKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRangeAccess().getClousureClosureTypeEnumRuleCall_8_1_0());
					}
					lv_clousure_11_0=ruleClosureType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRangeRule());
						}
						set(
							$current,
							"clousure",
							lv_clousure_11_0,
							"xtext.Workflow.ClosureType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getRangeAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleSpecialValues
entryRuleSpecialValues returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSpecialValuesRule()); }
	iv_ruleSpecialValues=ruleSpecialValues
	{ $current=$iv_ruleSpecialValues.current; }
	EOF;

// Rule SpecialValues
ruleSpecialValues returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSpecialValuesAccess().getSpecialValuesAction_0(),
					$current);
			}
		)
		otherlv_1='SpecialValues'
		{
			newLeafNode(otherlv_1, grammarAccess.getSpecialValuesAccess().getSpecialValuesKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSpecialValuesAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpecialValuesRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"xtext.Workflow.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getSpecialValuesAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='specialType'
			{
				newLeafNode(otherlv_4, grammarAccess.getSpecialValuesAccess().getSpecialTypeKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSpecialValuesAccess().getSpecialTypeSpecialValueEnumRuleCall_4_1_0());
					}
					lv_specialType_5_0=ruleSpecialValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSpecialValuesRule());
						}
						set(
							$current,
							"specialType",
							lv_specialType_5_0,
							"xtext.Workflow.SpecialValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getSpecialValuesAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleDiscretizeBin
entryRuleDiscretizeBin returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDiscretizeBinRule()); }
	iv_ruleDiscretizeBin=ruleDiscretizeBin
	{ $current=$iv_ruleDiscretizeBin.current; }
	EOF;

// Rule DiscretizeBin
ruleDiscretizeBin returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DiscretizeBin'
		{
			newLeafNode(otherlv_0, grammarAccess.getDiscretizeBinAccess().getDiscretizeBinKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDiscretizeBinAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDiscretizeBinRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"xtext.Workflow.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getDiscretizeBinAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='binValue'
			{
				newLeafNode(otherlv_3, grammarAccess.getDiscretizeBinAccess().getBinValueKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDiscretizeBinAccess().getBinValueEStringParserRuleCall_3_1_0());
					}
					lv_binValue_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDiscretizeBinRule());
						}
						set(
							$current,
							"binValue",
							lv_binValue_4_0,
							"xtext.Workflow.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='interval'
		{
			newLeafNode(otherlv_5, grammarAccess.getDiscretizeBinAccess().getIntervalKeyword_4());
		}
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getDiscretizeBinAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDiscretizeBinAccess().getIntervalIntervalParserRuleCall_6_0());
				}
				lv_interval_7_0=ruleInterval
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDiscretizeBinRule());
					}
					add(
						$current,
						"interval",
						lv_interval_7_0,
						"xtext.Workflow.Interval");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_8=','
			{
				newLeafNode(otherlv_8, grammarAccess.getDiscretizeBinAccess().getCommaKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDiscretizeBinAccess().getIntervalIntervalParserRuleCall_7_1_0());
					}
					lv_interval_9_0=ruleInterval
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDiscretizeBinRule());
						}
						add(
							$current,
							"interval",
							lv_interval_9_0,
							"xtext.Workflow.Interval");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getDiscretizeBinAccess().getRightCurlyBracketKeyword_8());
		}
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getDiscretizeBinAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleCastType
entryRuleCastType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCastTypeRule()); }
	iv_ruleCastType=ruleCastType
	{ $current=$iv_ruleCastType.current; }
	EOF;

// Rule CastType
ruleCastType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCastTypeAccess().getCastTypeAction_0(),
					$current);
			}
		)
		otherlv_1='CastType'
		{
			newLeafNode(otherlv_1, grammarAccess.getCastTypeAccess().getCastTypeKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCastTypeAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCastTypeRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"xtext.Workflow.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getCastTypeAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='type'
			{
				newLeafNode(otherlv_4, grammarAccess.getCastTypeAccess().getTypeKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCastTypeAccess().getTypeDataTypeEnumRuleCall_4_1_0());
					}
					lv_type_5_0=ruleDataType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCastTypeRule());
						}
						set(
							$current,
							"type",
							lv_type_5_0,
							"xtext.Workflow.DataType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getCastTypeAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleDerivedValue
entryRuleDerivedValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDerivedValueRule()); }
	iv_ruleDerivedValue=ruleDerivedValue
	{ $current=$iv_ruleDerivedValue.current; }
	EOF;

// Rule DerivedValue
ruleDerivedValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDerivedValueAccess().getDerivedValueAction_0(),
					$current);
			}
		)
		otherlv_1='DerivedValue'
		{
			newLeafNode(otherlv_1, grammarAccess.getDerivedValueAccess().getDerivedValueKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDerivedValueAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDerivedValueRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"xtext.Workflow.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getDerivedValueAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='imputeValue'
			{
				newLeafNode(otherlv_4, grammarAccess.getDerivedValueAccess().getImputeValueKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDerivedValueAccess().getImputeValueSpecialValueEnumRuleCall_4_1_0());
					}
					lv_imputeValue_5_0=ruleSpecialValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDerivedValueRule());
						}
						set(
							$current,
							"imputeValue",
							lv_imputeValue_5_0,
							"xtext.Workflow.SpecialValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='type'
			{
				newLeafNode(otherlv_6, grammarAccess.getDerivedValueAccess().getTypeKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDerivedValueAccess().getTypeDerivedTypeEnumRuleCall_5_1_0());
					}
					lv_type_7_0=ruleDerivedType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDerivedValueRule());
						}
						set(
							$current,
							"type",
							lv_type_7_0,
							"xtext.Workflow.DerivedType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getDerivedValueAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleNumOp
entryRuleNumOp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumOpRule()); }
	iv_ruleNumOp=ruleNumOp
	{ $current=$iv_ruleNumOp.current; }
	EOF;

// Rule NumOp
ruleNumOp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getNumOpAccess().getNumOpAction_0(),
					$current);
			}
		)
		otherlv_1='NumOp'
		{
			newLeafNode(otherlv_1, grammarAccess.getNumOpAccess().getNumOpKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNumOpAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNumOpRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"xtext.Workflow.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getNumOpAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='imputeValue'
			{
				newLeafNode(otherlv_4, grammarAccess.getNumOpAccess().getImputeValueKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNumOpAccess().getImputeValueSpecialValueEnumRuleCall_4_1_0());
					}
					lv_imputeValue_5_0=ruleSpecialValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNumOpRule());
						}
						set(
							$current,
							"imputeValue",
							lv_imputeValue_5_0,
							"xtext.Workflow.SpecialValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='operation'
			{
				newLeafNode(otherlv_6, grammarAccess.getNumOpAccess().getOperationKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNumOpAccess().getOperationOperationEnumRuleCall_5_1_0());
					}
					lv_operation_7_0=ruleOperation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNumOpRule());
						}
						set(
							$current,
							"operation",
							lv_operation_7_0,
							"xtext.Workflow.Operation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getNumOpAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleFixValue
entryRuleFixValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFixValueRule()); }
	iv_ruleFixValue=ruleFixValue
	{ $current=$iv_ruleFixValue.current; }
	EOF;

// Rule FixValue
ruleFixValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='FixValue'
		{
			newLeafNode(otherlv_0, grammarAccess.getFixValueAccess().getFixValueKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFixValueAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFixValueRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"xtext.Workflow.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getFixValueAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='imputeValue'
			{
				newLeafNode(otherlv_3, grammarAccess.getFixValueAccess().getImputeValueKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFixValueAccess().getImputeValueSpecialValueEnumRuleCall_3_1_0());
					}
					lv_imputeValue_4_0=ruleSpecialValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFixValueRule());
						}
						set(
							$current,
							"imputeValue",
							lv_imputeValue_4_0,
							"xtext.Workflow.SpecialValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='next_operand'
			{
				newLeafNode(otherlv_5, grammarAccess.getFixValueAccess().getNext_operandKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFixValueRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getFixValueAccess().getNext_operandOperandCrossReference_4_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7='previous_operand'
			{
				newLeafNode(otherlv_7, grammarAccess.getFixValueAccess().getPrevious_operandKeyword_5_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFixValueRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getFixValueAccess().getPrevious_operandOperandCrossReference_5_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_9='value'
		{
			newLeafNode(otherlv_9, grammarAccess.getFixValueAccess().getValueKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFixValueAccess().getValuePrimitiveParserRuleCall_7_0());
				}
				lv_value_10_0=rulePrimitive
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFixValueRule());
					}
					set(
						$current,
						"value",
						lv_value_10_0,
						"xtext.Workflow.Primitive");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getFixValueAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleFieldRange
entryRuleFieldRange returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFieldRangeRule()); }
	iv_ruleFieldRange=ruleFieldRange
	{ $current=$iv_ruleFieldRange.current; }
	EOF;

// Rule FieldRange
ruleFieldRange returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='FieldRange'
		{
			newLeafNode(otherlv_0, grammarAccess.getFieldRangeAccess().getFieldRangeKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFieldRangeAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFieldRangeRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"xtext.Workflow.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getFieldRangeAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='operator'
			{
				newLeafNode(otherlv_3, grammarAccess.getFieldRangeAccess().getOperatorKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFieldRangeAccess().getOperatorOperatorEnumRuleCall_3_1_0());
					}
					lv_operator_4_0=ruleOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFieldRangeRule());
						}
						set(
							$current,
							"operator",
							lv_operator_4_0,
							"xtext.Workflow.Operator");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='dataField'
		{
			newLeafNode(otherlv_5, grammarAccess.getFieldRangeAccess().getDataFieldKeyword_4());
		}
		otherlv_6='('
		{
			newLeafNode(otherlv_6, grammarAccess.getFieldRangeAccess().getLeftParenthesisKeyword_5());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFieldRangeRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getFieldRangeAccess().getDataFieldDataFieldCrossReference_6_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_8=','
			{
				newLeafNode(otherlv_8, grammarAccess.getFieldRangeAccess().getCommaKeyword_7_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFieldRangeRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getFieldRangeAccess().getDataFieldDataFieldCrossReference_7_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_10=')'
		{
			newLeafNode(otherlv_10, grammarAccess.getFieldRangeAccess().getRightParenthesisKeyword_8());
		}
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getFieldRangeAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleMathOp
entryRuleMathOp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMathOpRule()); }
	iv_ruleMathOp=ruleMathOp
	{ $current=$iv_ruleMathOp.current; }
	EOF;

// Rule MathOp
ruleMathOp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='MathOp'
		{
			newLeafNode(otherlv_0, grammarAccess.getMathOpAccess().getMathOpKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMathOpAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMathOpRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"xtext.Workflow.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getMathOpAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='operator'
			{
				newLeafNode(otherlv_3, grammarAccess.getMathOpAccess().getOperatorKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMathOpAccess().getOperatorMathOperatorEnumRuleCall_3_1_0());
					}
					lv_operator_4_0=ruleMathOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMathOpRule());
						}
						set(
							$current,
							"operator",
							lv_operator_4_0,
							"xtext.Workflow.MathOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='operand'
		{
			newLeafNode(otherlv_5, grammarAccess.getMathOpAccess().getOperandKeyword_4());
		}
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getMathOpAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMathOpAccess().getOperandOperandParserRuleCall_6_0());
				}
				lv_operand_7_0=ruleOperand
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMathOpRule());
					}
					add(
						$current,
						"operand",
						lv_operand_7_0,
						"xtext.Workflow.Operand");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_8=','
			{
				newLeafNode(otherlv_8, grammarAccess.getMathOpAccess().getCommaKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMathOpAccess().getOperandOperandParserRuleCall_7_1_0());
					}
					lv_operand_9_0=ruleOperand
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMathOpRule());
						}
						add(
							$current,
							"operand",
							lv_operand_9_0,
							"xtext.Workflow.Operand");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getMathOpAccess().getRightCurlyBracketKeyword_8());
		}
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getMathOpAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleField
entryRuleField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFieldRule()); }
	iv_ruleField=ruleField
	{ $current=$iv_ruleField.current; }
	EOF;

// Rule Field
ruleField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Field'
		{
			newLeafNode(otherlv_0, grammarAccess.getFieldAccess().getFieldKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFieldAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFieldRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"xtext.Workflow.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getFieldAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='next_operand'
			{
				newLeafNode(otherlv_3, grammarAccess.getFieldAccess().getNext_operandKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFieldRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getFieldAccess().getNext_operandOperandCrossReference_3_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='previous_operand'
			{
				newLeafNode(otherlv_5, grammarAccess.getFieldAccess().getPrevious_operandKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFieldRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getFieldAccess().getPrevious_operandOperandCrossReference_4_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7='datafield'
		{
			newLeafNode(otherlv_7, grammarAccess.getFieldAccess().getDatafieldKeyword_5());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFieldRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getFieldAccess().getDatafieldDataFieldCrossReference_6_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getFieldAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleJoin
entryRuleJoin returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJoinRule()); }
	iv_ruleJoin=ruleJoin
	{ $current=$iv_ruleJoin.current; }
	EOF;

// Rule Join
ruleJoin returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Join'
		{
			newLeafNode(otherlv_0, grammarAccess.getJoinAccess().getJoinKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getJoinAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJoinRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"xtext.Workflow.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getJoinAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='operand'
		{
			newLeafNode(otherlv_3, grammarAccess.getJoinAccess().getOperandKeyword_3());
		}
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getJoinAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getJoinAccess().getOperandOperandParserRuleCall_5_0());
				}
				lv_operand_5_0=ruleOperand
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJoinRule());
					}
					add(
						$current,
						"operand",
						lv_operand_5_0,
						"xtext.Workflow.Operand");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getJoinAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJoinAccess().getOperandOperandParserRuleCall_6_1_0());
					}
					lv_operand_7_0=ruleOperand
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJoinRule());
						}
						add(
							$current,
							"operand",
							lv_operand_7_0,
							"xtext.Workflow.Operand");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getJoinAccess().getRightCurlyBracketKeyword_7());
		}
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getJoinAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleDateRange
entryRuleDateRange returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDateRangeRule()); }
	iv_ruleDateRange=ruleDateRange
	{ $current=$iv_ruleDateRange.current; }
	EOF;

// Rule DateRange
ruleDateRange returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDateRangeAccess().getDateRangeAction_0(),
					$current);
			}
		)
		otherlv_1='DateRange'
		{
			newLeafNode(otherlv_1, grammarAccess.getDateRangeAccess().getDateRangeKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDateRangeAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDateRangeRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"xtext.Workflow.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getDateRangeAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='clousure'
			{
				newLeafNode(otherlv_4, grammarAccess.getDateRangeAccess().getClousureKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDateRangeAccess().getClousureClosureTypeEnumRuleCall_4_1_0());
					}
					lv_clousure_5_0=ruleClosureType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDateRangeRule());
						}
						set(
							$current,
							"clousure",
							lv_clousure_5_0,
							"xtext.Workflow.ClosureType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='max'
			{
				newLeafNode(otherlv_6, grammarAccess.getDateRangeAccess().getMaxKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDateRangeAccess().getMaxEStringParserRuleCall_5_1_0());
					}
					lv_max_7_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDateRangeRule());
						}
						set(
							$current,
							"max",
							lv_max_7_0,
							"xtext.Workflow.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_8='min'
			{
				newLeafNode(otherlv_8, grammarAccess.getDateRangeAccess().getMinKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDateRangeAccess().getMinEStringParserRuleCall_6_1_0());
					}
					lv_min_9_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDateRangeRule());
						}
						set(
							$current,
							"min",
							lv_min_9_0,
							"xtext.Workflow.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getDateRangeAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Rule DataType
ruleDataType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='String'
			{
				$current = grammarAccess.getDataTypeAccess().getStringEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDataTypeAccess().getStringEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Time'
			{
				$current = grammarAccess.getDataTypeAccess().getTimeEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDataTypeAccess().getTimeEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Integer'
			{
				$current = grammarAccess.getDataTypeAccess().getIntegerEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getDataTypeAccess().getIntegerEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='DateTime'
			{
				$current = grammarAccess.getDataTypeAccess().getDateTimeEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getDataTypeAccess().getDateTimeEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='Boolean'
			{
				$current = grammarAccess.getDataTypeAccess().getBooleanEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getDataTypeAccess().getBooleanEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='Double'
			{
				$current = grammarAccess.getDataTypeAccess().getDoubleEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getDataTypeAccess().getDoubleEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='Float'
			{
				$current = grammarAccess.getDataTypeAccess().getFloatEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getDataTypeAccess().getFloatEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='Date'
			{
				$current = grammarAccess.getDataTypeAccess().getDateEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getDataTypeAccess().getDateEnumLiteralDeclaration_7());
			}
		)
	)
;

// Rule ClosureType
ruleClosureType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='openOpen'
			{
				$current = grammarAccess.getClosureTypeAccess().getOpenOpenEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getClosureTypeAccess().getOpenOpenEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='openClosed'
			{
				$current = grammarAccess.getClosureTypeAccess().getOpenClosedEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getClosureTypeAccess().getOpenClosedEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='closedOpen'
			{
				$current = grammarAccess.getClosureTypeAccess().getClosedOpenEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getClosureTypeAccess().getClosedOpenEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='closedClosed'
			{
				$current = grammarAccess.getClosureTypeAccess().getClosedClosedEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getClosureTypeAccess().getClosedClosedEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule MapOperation
ruleMapOperation returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='VALUE_MAPPING'
			{
				$current = grammarAccess.getMapOperationAccess().getVALUE_MAPPINGEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getMapOperationAccess().getVALUE_MAPPINGEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='SUBSTRING'
			{
				$current = grammarAccess.getMapOperationAccess().getSUBSTRINGEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getMapOperationAccess().getSUBSTRINGEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule FilterType
ruleFilterType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='EXCLUDE'
			{
				$current = grammarAccess.getFilterTypeAccess().getEXCLUDEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getFilterTypeAccess().getEXCLUDEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='INCLUDE'
			{
				$current = grammarAccess.getFilterTypeAccess().getINCLUDEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getFilterTypeAccess().getINCLUDEEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule SpecialValue
ruleSpecialValue returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Missing'
			{
				$current = grammarAccess.getSpecialValueAccess().getMissingEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getSpecialValueAccess().getMissingEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Invalid'
			{
				$current = grammarAccess.getSpecialValueAccess().getInvalidEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getSpecialValueAccess().getInvalidEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Outlier'
			{
				$current = grammarAccess.getSpecialValueAccess().getOutlierEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getSpecialValueAccess().getOutlierEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule DerivedType
ruleDerivedType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='MostFrequent'
			{
				$current = grammarAccess.getDerivedTypeAccess().getMostFrequentEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDerivedTypeAccess().getMostFrequentEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Previous'
			{
				$current = grammarAccess.getDerivedTypeAccess().getPreviousEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDerivedTypeAccess().getPreviousEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Next'
			{
				$current = grammarAccess.getDerivedTypeAccess().getNextEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getDerivedTypeAccess().getNextEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule Operation
ruleOperation returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Interpolation'
			{
				$current = grammarAccess.getOperationAccess().getInterpolationEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getOperationAccess().getInterpolationEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Mean'
			{
				$current = grammarAccess.getOperationAccess().getMeanEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getOperationAccess().getMeanEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Median'
			{
				$current = grammarAccess.getOperationAccess().getMedianEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getOperationAccess().getMedianEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='Closest'
			{
				$current = grammarAccess.getOperationAccess().getClosestEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getOperationAccess().getClosestEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule Operator
ruleOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='BELONG'
			{
				$current = grammarAccess.getOperatorAccess().getBELONGEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getOperatorAccess().getBELONGEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='NOTBELONG'
			{
				$current = grammarAccess.getOperatorAccess().getNOTBELONGEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getOperatorAccess().getNOTBELONGEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule MathOperator
ruleMathOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='SUM'
			{
				$current = grammarAccess.getMathOperatorAccess().getSUMEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getMathOperatorAccess().getSUMEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='SUBSTRACT'
			{
				$current = grammarAccess.getMathOperatorAccess().getSUBSTRACTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getMathOperatorAccess().getSUBSTRACTEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='MULTIPLY'
			{
				$current = grammarAccess.getMathOperatorAccess().getMULTIPLYEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getMathOperatorAccess().getMULTIPLYEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='DIVIDE'
			{
				$current = grammarAccess.getMathOperatorAccess().getDIVIDEEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getMathOperatorAccess().getDIVIDEEnumLiteralDeclaration_3());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;

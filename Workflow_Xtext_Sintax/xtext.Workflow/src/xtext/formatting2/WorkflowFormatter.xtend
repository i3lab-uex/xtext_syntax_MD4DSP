/*
 * generated by Xtext 2.40.0
 */
package xtext.formatting2

import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import xtext.services.WorkflowGrammarAccess
import xtext.workflow.DataProcessing
import xtext.workflow.Workflow

class WorkflowFormatter extends AbstractFormatter2 {
	
	@Inject extension WorkflowGrammarAccess

	def dispatch void format(Workflow workflow, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		workflow.environment.format
		for (processingStep : workflow.dataprocessing) {
			processingStep.format
		}
		for (link : workflow.link) {
			link.format
		}
	}

	def dispatch void format(DataProcessing dataProcessing, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (dataDictionary : dataProcessing.inputPort) {
			dataDictionary.format
		}
		for (dataDictionary : dataProcessing.outputPort) {
			dataDictionary.format
		}
		for (parameter : dataProcessing.parameter) {
			parameter.format
		}
		for (contract : dataProcessing.contract) {
			contract.format
		}
	}
	
	// TODO: implement for PMMLModel, FilterValue, DiscretizeBin, MathOp, Join, FixValue, DataDictionary, Categorical, Continuous, Date, Local, AzureCI, AmazonECS, Database, LocalFolder, AmazonS3, AzureBlob
}

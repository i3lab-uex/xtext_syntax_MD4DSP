/**
 * generated by Xtext 2.40.0
 */
package xtext.json.workflowDSL.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import xtext.json.workflowDSL.AdvancedImpute;
import xtext.json.workflowDSL.WorkflowDSLPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Advanced Impute</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link xtext.json.workflowDSL.impl.AdvancedImputeImpl#getType <em>Type</em>}</li>
 *   <li>{@link xtext.json.workflowDSL.impl.AdvancedImputeImpl#getWindowSize <em>Window Size</em>}</li>
 *   <li>{@link xtext.json.workflowDSL.impl.AdvancedImputeImpl#getDegree <em>Degree</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AdvancedImputeImpl extends ImputeMethodImpl implements AdvancedImpute
{
  /**
   * The default value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected static final String TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected String type = TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getWindowSize() <em>Window Size</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWindowSize()
   * @generated
   * @ordered
   */
  protected static final String WINDOW_SIZE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getWindowSize() <em>Window Size</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWindowSize()
   * @generated
   * @ordered
   */
  protected String windowSize = WINDOW_SIZE_EDEFAULT;

  /**
   * The default value of the '{@link #getDegree() <em>Degree</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDegree()
   * @generated
   * @ordered
   */
  protected static final String DEGREE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDegree() <em>Degree</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDegree()
   * @generated
   * @ordered
   */
  protected String degree = DEGREE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AdvancedImputeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return WorkflowDSLPackage.Literals.ADVANCED_IMPUTE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setType(String newType)
  {
    String oldType = type;
    type = newType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowDSLPackage.ADVANCED_IMPUTE__TYPE, oldType, type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getWindowSize()
  {
    return windowSize;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setWindowSize(String newWindowSize)
  {
    String oldWindowSize = windowSize;
    windowSize = newWindowSize;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowDSLPackage.ADVANCED_IMPUTE__WINDOW_SIZE, oldWindowSize, windowSize));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDegree()
  {
    return degree;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDegree(String newDegree)
  {
    String oldDegree = degree;
    degree = newDegree;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowDSLPackage.ADVANCED_IMPUTE__DEGREE, oldDegree, degree));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case WorkflowDSLPackage.ADVANCED_IMPUTE__TYPE:
        return getType();
      case WorkflowDSLPackage.ADVANCED_IMPUTE__WINDOW_SIZE:
        return getWindowSize();
      case WorkflowDSLPackage.ADVANCED_IMPUTE__DEGREE:
        return getDegree();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case WorkflowDSLPackage.ADVANCED_IMPUTE__TYPE:
        setType((String)newValue);
        return;
      case WorkflowDSLPackage.ADVANCED_IMPUTE__WINDOW_SIZE:
        setWindowSize((String)newValue);
        return;
      case WorkflowDSLPackage.ADVANCED_IMPUTE__DEGREE:
        setDegree((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case WorkflowDSLPackage.ADVANCED_IMPUTE__TYPE:
        setType(TYPE_EDEFAULT);
        return;
      case WorkflowDSLPackage.ADVANCED_IMPUTE__WINDOW_SIZE:
        setWindowSize(WINDOW_SIZE_EDEFAULT);
        return;
      case WorkflowDSLPackage.ADVANCED_IMPUTE__DEGREE:
        setDegree(DEGREE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case WorkflowDSLPackage.ADVANCED_IMPUTE__TYPE:
        return TYPE_EDEFAULT == null ? type != null : !TYPE_EDEFAULT.equals(type);
      case WorkflowDSLPackage.ADVANCED_IMPUTE__WINDOW_SIZE:
        return WINDOW_SIZE_EDEFAULT == null ? windowSize != null : !WINDOW_SIZE_EDEFAULT.equals(windowSize);
      case WorkflowDSLPackage.ADVANCED_IMPUTE__DEGREE:
        return DEGREE_EDEFAULT == null ? degree != null : !DEGREE_EDEFAULT.equals(degree);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (type: ");
    result.append(type);
    result.append(", windowSize: ");
    result.append(windowSize);
    result.append(", degree: ");
    result.append(degree);
    result.append(')');
    return result.toString();
  }

} //AdvancedImputeImpl

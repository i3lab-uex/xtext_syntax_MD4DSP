/**
 * generated by Xtext 2.40.0
 */
package xtext.json.workflowDSL.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import xtext.json.workflowDSL.BinDefinitions;
import xtext.json.workflowDSL.BinMode;
import xtext.json.workflowDSL.Binner;
import xtext.json.workflowDSL.Column;
import xtext.json.workflowDSL.WorkflowDSLPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Binner</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link xtext.json.workflowDSL.impl.BinnerImpl#getColumn <em>Column</em>}</li>
 *   <li>{@link xtext.json.workflowDSL.impl.BinnerImpl#getDefinitions <em>Definitions</em>}</li>
 *   <li>{@link xtext.json.workflowDSL.impl.BinnerImpl#getMode <em>Mode</em>}</li>
 * </ul>
 *
 * @generated
 */
public class BinnerImpl extends TransformationImpl implements Binner
{
  /**
   * The cached value of the '{@link #getColumn() <em>Column</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getColumn()
   * @generated
   * @ordered
   */
  protected Column column;

  /**
   * The cached value of the '{@link #getDefinitions() <em>Definitions</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDefinitions()
   * @generated
   * @ordered
   */
  protected BinDefinitions definitions;

  /**
   * The cached value of the '{@link #getMode() <em>Mode</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMode()
   * @generated
   * @ordered
   */
  protected BinMode mode;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BinnerImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return WorkflowDSLPackage.Literals.BINNER;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Column getColumn()
  {
    return column;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetColumn(Column newColumn, NotificationChain msgs)
  {
    Column oldColumn = column;
    column = newColumn;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, WorkflowDSLPackage.BINNER__COLUMN, oldColumn, newColumn);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setColumn(Column newColumn)
  {
    if (newColumn != column)
    {
      NotificationChain msgs = null;
      if (column != null)
        msgs = ((InternalEObject)column).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - WorkflowDSLPackage.BINNER__COLUMN, null, msgs);
      if (newColumn != null)
        msgs = ((InternalEObject)newColumn).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - WorkflowDSLPackage.BINNER__COLUMN, null, msgs);
      msgs = basicSetColumn(newColumn, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowDSLPackage.BINNER__COLUMN, newColumn, newColumn));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BinDefinitions getDefinitions()
  {
    return definitions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDefinitions(BinDefinitions newDefinitions, NotificationChain msgs)
  {
    BinDefinitions oldDefinitions = definitions;
    definitions = newDefinitions;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, WorkflowDSLPackage.BINNER__DEFINITIONS, oldDefinitions, newDefinitions);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDefinitions(BinDefinitions newDefinitions)
  {
    if (newDefinitions != definitions)
    {
      NotificationChain msgs = null;
      if (definitions != null)
        msgs = ((InternalEObject)definitions).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - WorkflowDSLPackage.BINNER__DEFINITIONS, null, msgs);
      if (newDefinitions != null)
        msgs = ((InternalEObject)newDefinitions).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - WorkflowDSLPackage.BINNER__DEFINITIONS, null, msgs);
      msgs = basicSetDefinitions(newDefinitions, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowDSLPackage.BINNER__DEFINITIONS, newDefinitions, newDefinitions));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BinMode getMode()
  {
    return mode;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMode(BinMode newMode, NotificationChain msgs)
  {
    BinMode oldMode = mode;
    mode = newMode;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, WorkflowDSLPackage.BINNER__MODE, oldMode, newMode);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMode(BinMode newMode)
  {
    if (newMode != mode)
    {
      NotificationChain msgs = null;
      if (mode != null)
        msgs = ((InternalEObject)mode).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - WorkflowDSLPackage.BINNER__MODE, null, msgs);
      if (newMode != null)
        msgs = ((InternalEObject)newMode).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - WorkflowDSLPackage.BINNER__MODE, null, msgs);
      msgs = basicSetMode(newMode, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowDSLPackage.BINNER__MODE, newMode, newMode));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case WorkflowDSLPackage.BINNER__COLUMN:
        return basicSetColumn(null, msgs);
      case WorkflowDSLPackage.BINNER__DEFINITIONS:
        return basicSetDefinitions(null, msgs);
      case WorkflowDSLPackage.BINNER__MODE:
        return basicSetMode(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case WorkflowDSLPackage.BINNER__COLUMN:
        return getColumn();
      case WorkflowDSLPackage.BINNER__DEFINITIONS:
        return getDefinitions();
      case WorkflowDSLPackage.BINNER__MODE:
        return getMode();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case WorkflowDSLPackage.BINNER__COLUMN:
        setColumn((Column)newValue);
        return;
      case WorkflowDSLPackage.BINNER__DEFINITIONS:
        setDefinitions((BinDefinitions)newValue);
        return;
      case WorkflowDSLPackage.BINNER__MODE:
        setMode((BinMode)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case WorkflowDSLPackage.BINNER__COLUMN:
        setColumn((Column)null);
        return;
      case WorkflowDSLPackage.BINNER__DEFINITIONS:
        setDefinitions((BinDefinitions)null);
        return;
      case WorkflowDSLPackage.BINNER__MODE:
        setMode((BinMode)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case WorkflowDSLPackage.BINNER__COLUMN:
        return column != null;
      case WorkflowDSLPackage.BINNER__DEFINITIONS:
        return definitions != null;
      case WorkflowDSLPackage.BINNER__MODE:
        return mode != null;
    }
    return super.eIsSet(featureID);
  }

} //BinnerImpl

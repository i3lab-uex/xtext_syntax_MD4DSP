/**
 * generated by Xtext 2.40.0
 */
package xtext.json.workflowDSL.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import xtext.json.workflowDSL.JoinOptions;
import xtext.json.workflowDSL.WorkflowDSLPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Join Options</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link xtext.json.workflowDSL.impl.JoinOptionsImpl#getLeftSuffix <em>Left Suffix</em>}</li>
 *   <li>{@link xtext.json.workflowDSL.impl.JoinOptionsImpl#getRightSuffix <em>Right Suffix</em>}</li>
 * </ul>
 *
 * @generated
 */
public class JoinOptionsImpl extends MinimalEObjectImpl.Container implements JoinOptions
{
  /**
   * The default value of the '{@link #getLeftSuffix() <em>Left Suffix</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLeftSuffix()
   * @generated
   * @ordered
   */
  protected static final String LEFT_SUFFIX_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getLeftSuffix() <em>Left Suffix</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLeftSuffix()
   * @generated
   * @ordered
   */
  protected String leftSuffix = LEFT_SUFFIX_EDEFAULT;

  /**
   * The default value of the '{@link #getRightSuffix() <em>Right Suffix</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRightSuffix()
   * @generated
   * @ordered
   */
  protected static final String RIGHT_SUFFIX_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getRightSuffix() <em>Right Suffix</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRightSuffix()
   * @generated
   * @ordered
   */
  protected String rightSuffix = RIGHT_SUFFIX_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected JoinOptionsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return WorkflowDSLPackage.Literals.JOIN_OPTIONS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLeftSuffix()
  {
    return leftSuffix;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLeftSuffix(String newLeftSuffix)
  {
    String oldLeftSuffix = leftSuffix;
    leftSuffix = newLeftSuffix;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowDSLPackage.JOIN_OPTIONS__LEFT_SUFFIX, oldLeftSuffix, leftSuffix));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getRightSuffix()
  {
    return rightSuffix;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRightSuffix(String newRightSuffix)
  {
    String oldRightSuffix = rightSuffix;
    rightSuffix = newRightSuffix;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowDSLPackage.JOIN_OPTIONS__RIGHT_SUFFIX, oldRightSuffix, rightSuffix));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case WorkflowDSLPackage.JOIN_OPTIONS__LEFT_SUFFIX:
        return getLeftSuffix();
      case WorkflowDSLPackage.JOIN_OPTIONS__RIGHT_SUFFIX:
        return getRightSuffix();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case WorkflowDSLPackage.JOIN_OPTIONS__LEFT_SUFFIX:
        setLeftSuffix((String)newValue);
        return;
      case WorkflowDSLPackage.JOIN_OPTIONS__RIGHT_SUFFIX:
        setRightSuffix((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case WorkflowDSLPackage.JOIN_OPTIONS__LEFT_SUFFIX:
        setLeftSuffix(LEFT_SUFFIX_EDEFAULT);
        return;
      case WorkflowDSLPackage.JOIN_OPTIONS__RIGHT_SUFFIX:
        setRightSuffix(RIGHT_SUFFIX_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case WorkflowDSLPackage.JOIN_OPTIONS__LEFT_SUFFIX:
        return LEFT_SUFFIX_EDEFAULT == null ? leftSuffix != null : !LEFT_SUFFIX_EDEFAULT.equals(leftSuffix);
      case WorkflowDSLPackage.JOIN_OPTIONS__RIGHT_SUFFIX:
        return RIGHT_SUFFIX_EDEFAULT == null ? rightSuffix != null : !RIGHT_SUFFIX_EDEFAULT.equals(rightSuffix);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (leftSuffix: ");
    result.append(leftSuffix);
    result.append(", rightSuffix: ");
    result.append(rightSuffix);
    result.append(')');
    return result.toString();
  }

} //JoinOptionsImpl

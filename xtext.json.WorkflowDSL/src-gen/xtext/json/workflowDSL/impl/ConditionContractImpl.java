/**
 * generated by Xtext 2.40.0
 */
package xtext.json.workflowDSL.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import xtext.json.workflowDSL.ConditionContract;
import xtext.json.workflowDSL.IfClause;
import xtext.json.workflowDSL.ThenClause;
import xtext.json.workflowDSL.WorkflowDSLPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Condition Contract</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link xtext.json.workflowDSL.impl.ConditionContractImpl#getIfClause <em>If Clause</em>}</li>
 *   <li>{@link xtext.json.workflowDSL.impl.ConditionContractImpl#getThenClause <em>Then Clause</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ConditionContractImpl extends ContractTypeImpl implements ConditionContract
{
  /**
   * The cached value of the '{@link #getIfClause() <em>If Clause</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIfClause()
   * @generated
   * @ordered
   */
  protected IfClause ifClause;

  /**
   * The cached value of the '{@link #getThenClause() <em>Then Clause</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getThenClause()
   * @generated
   * @ordered
   */
  protected ThenClause thenClause;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ConditionContractImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return WorkflowDSLPackage.Literals.CONDITION_CONTRACT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public IfClause getIfClause()
  {
    return ifClause;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetIfClause(IfClause newIfClause, NotificationChain msgs)
  {
    IfClause oldIfClause = ifClause;
    ifClause = newIfClause;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, WorkflowDSLPackage.CONDITION_CONTRACT__IF_CLAUSE, oldIfClause, newIfClause);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIfClause(IfClause newIfClause)
  {
    if (newIfClause != ifClause)
    {
      NotificationChain msgs = null;
      if (ifClause != null)
        msgs = ((InternalEObject)ifClause).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - WorkflowDSLPackage.CONDITION_CONTRACT__IF_CLAUSE, null, msgs);
      if (newIfClause != null)
        msgs = ((InternalEObject)newIfClause).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - WorkflowDSLPackage.CONDITION_CONTRACT__IF_CLAUSE, null, msgs);
      msgs = basicSetIfClause(newIfClause, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowDSLPackage.CONDITION_CONTRACT__IF_CLAUSE, newIfClause, newIfClause));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ThenClause getThenClause()
  {
    return thenClause;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetThenClause(ThenClause newThenClause, NotificationChain msgs)
  {
    ThenClause oldThenClause = thenClause;
    thenClause = newThenClause;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, WorkflowDSLPackage.CONDITION_CONTRACT__THEN_CLAUSE, oldThenClause, newThenClause);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setThenClause(ThenClause newThenClause)
  {
    if (newThenClause != thenClause)
    {
      NotificationChain msgs = null;
      if (thenClause != null)
        msgs = ((InternalEObject)thenClause).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - WorkflowDSLPackage.CONDITION_CONTRACT__THEN_CLAUSE, null, msgs);
      if (newThenClause != null)
        msgs = ((InternalEObject)newThenClause).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - WorkflowDSLPackage.CONDITION_CONTRACT__THEN_CLAUSE, null, msgs);
      msgs = basicSetThenClause(newThenClause, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WorkflowDSLPackage.CONDITION_CONTRACT__THEN_CLAUSE, newThenClause, newThenClause));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case WorkflowDSLPackage.CONDITION_CONTRACT__IF_CLAUSE:
        return basicSetIfClause(null, msgs);
      case WorkflowDSLPackage.CONDITION_CONTRACT__THEN_CLAUSE:
        return basicSetThenClause(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case WorkflowDSLPackage.CONDITION_CONTRACT__IF_CLAUSE:
        return getIfClause();
      case WorkflowDSLPackage.CONDITION_CONTRACT__THEN_CLAUSE:
        return getThenClause();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case WorkflowDSLPackage.CONDITION_CONTRACT__IF_CLAUSE:
        setIfClause((IfClause)newValue);
        return;
      case WorkflowDSLPackage.CONDITION_CONTRACT__THEN_CLAUSE:
        setThenClause((ThenClause)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case WorkflowDSLPackage.CONDITION_CONTRACT__IF_CLAUSE:
        setIfClause((IfClause)null);
        return;
      case WorkflowDSLPackage.CONDITION_CONTRACT__THEN_CLAUSE:
        setThenClause((ThenClause)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case WorkflowDSLPackage.CONDITION_CONTRACT__IF_CLAUSE:
        return ifClause != null;
      case WorkflowDSLPackage.CONDITION_CONTRACT__THEN_CLAUSE:
        return thenClause != null;
    }
    return super.eIsSet(featureID);
  }

} //ConditionContractImpl

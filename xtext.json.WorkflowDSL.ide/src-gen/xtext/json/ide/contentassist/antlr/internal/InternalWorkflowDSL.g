/*
 * generated by Xtext 2.40.0
 */
grammar InternalWorkflowDSL;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package xtext.json.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package xtext.json.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import xtext.json.services.WorkflowDSLGrammarAccess;

}
@parser::members {
	private WorkflowDSLGrammarAccess grammarAccess;

	public void setGrammarAccess(WorkflowDSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleWorkflow
entryRuleWorkflow
:
{ before(grammarAccess.getWorkflowRule()); }
	 ruleWorkflow
{ after(grammarAccess.getWorkflowRule()); } 
	 EOF 
;

// Rule Workflow
ruleWorkflow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWorkflowAccess().getGroup()); }
		(rule__Workflow__Group__0)
		{ after(grammarAccess.getWorkflowAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataSource
entryRuleDataSource
:
{ before(grammarAccess.getDataSourceRule()); }
	 ruleDataSource
{ after(grammarAccess.getDataSourceRule()); } 
	 EOF 
;

// Rule DataSource
ruleDataSource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataSourceAccess().getGroup()); }
		(rule__DataSource__Group__0)
		{ after(grammarAccess.getDataSourceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataReader
entryRuleDataReader
:
{ before(grammarAccess.getDataReaderRule()); }
	 ruleDataReader
{ after(grammarAccess.getDataReaderRule()); } 
	 EOF 
;

// Rule DataReader
ruleDataReader 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataReaderAccess().getAlternatives()); }
		(rule__DataReader__Alternatives)
		{ after(grammarAccess.getDataReaderAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCSVReader
entryRuleCSVReader
:
{ before(grammarAccess.getCSVReaderRule()); }
	 ruleCSVReader
{ after(grammarAccess.getCSVReaderRule()); } 
	 EOF 
;

// Rule CSVReader
ruleCSVReader 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCSVReaderAccess().getGroup()); }
		(rule__CSVReader__Group__0)
		{ after(grammarAccess.getCSVReaderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFileReader
entryRuleFileReader
:
{ before(grammarAccess.getFileReaderRule()); }
	 ruleFileReader
{ after(grammarAccess.getFileReaderRule()); } 
	 EOF 
;

// Rule FileReader
ruleFileReader 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFileReaderAccess().getGroup()); }
		(rule__FileReader__Group__0)
		{ after(grammarAccess.getFileReaderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFilePath
entryRuleFilePath
:
{ before(grammarAccess.getFilePathRule()); }
	 ruleFilePath
{ after(grammarAccess.getFilePathRule()); } 
	 EOF 
;

// Rule FilePath
ruleFilePath 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFilePathAccess().getPathAssignment()); }
		(rule__FilePath__PathAssignment)
		{ after(grammarAccess.getFilePathAccess().getPathAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDelimiter
entryRuleDelimiter
:
{ before(grammarAccess.getDelimiterRule()); }
	 ruleDelimiter
{ after(grammarAccess.getDelimiterRule()); } 
	 EOF 
;

// Rule Delimiter
ruleDelimiter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDelimiterAccess().getAlternatives()); }
		(rule__Delimiter__Alternatives)
		{ after(grammarAccess.getDelimiterAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWorkflowBody
entryRuleWorkflowBody
:
{ before(grammarAccess.getWorkflowBodyRule()); }
	 ruleWorkflowBody
{ after(grammarAccess.getWorkflowBodyRule()); } 
	 EOF 
;

// Rule WorkflowBody
ruleWorkflowBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWorkflowBodyAccess().getStepsAssignment()); }
		(rule__WorkflowBody__StepsAssignment)*
		{ after(grammarAccess.getWorkflowBodyAccess().getStepsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStep
entryRuleStep
:
{ before(grammarAccess.getStepRule()); }
	 ruleStep
{ after(grammarAccess.getStepRule()); } 
	 EOF 
;

// Rule Step
ruleStep 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStepAccess().getGroup()); }
		(rule__Step__Group__0)
		{ after(grammarAccess.getStepAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContractBlock
entryRuleContractBlock
:
{ before(grammarAccess.getContractBlockRule()); }
	 ruleContractBlock
{ after(grammarAccess.getContractBlockRule()); } 
	 EOF 
;

// Rule ContractBlock
ruleContractBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContractBlockAccess().getGroup()); }
		(rule__ContractBlock__Group__0)
		{ after(grammarAccess.getContractBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContract
entryRuleContract
:
{ before(grammarAccess.getContractRule()); }
	 ruleContract
{ after(grammarAccess.getContractRule()); } 
	 EOF 
;

// Rule Contract
ruleContract 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContractAccess().getAlternatives()); }
		(rule__Contract__Alternatives)
		{ after(grammarAccess.getContractAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrecondition
entryRulePrecondition
:
{ before(grammarAccess.getPreconditionRule()); }
	 rulePrecondition
{ after(grammarAccess.getPreconditionRule()); } 
	 EOF 
;

// Rule Precondition
rulePrecondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPreconditionAccess().getGroup()); }
		(rule__Precondition__Group__0)
		{ after(grammarAccess.getPreconditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePostcondition
entryRulePostcondition
:
{ before(grammarAccess.getPostconditionRule()); }
	 rulePostcondition
{ after(grammarAccess.getPostconditionRule()); } 
	 EOF 
;

// Rule Postcondition
rulePostcondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPostconditionAccess().getGroup()); }
		(rule__Postcondition__Group__0)
		{ after(grammarAccess.getPostconditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInvariant
entryRuleInvariant
:
{ before(grammarAccess.getInvariantRule()); }
	 ruleInvariant
{ after(grammarAccess.getInvariantRule()); } 
	 EOF 
;

// Rule Invariant
ruleInvariant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInvariantAccess().getGroup()); }
		(rule__Invariant__Group__0)
		{ after(grammarAccess.getInvariantAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContractName
entryRuleContractName
:
{ before(grammarAccess.getContractNameRule()); }
	 ruleContractName
{ after(grammarAccess.getContractNameRule()); } 
	 EOF 
;

// Rule ContractName
ruleContractName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContractNameAccess().getAlternatives()); }
		(rule__ContractName__Alternatives)
		{ after(grammarAccess.getContractNameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContractBody
entryRuleContractBody
:
{ before(grammarAccess.getContractBodyRule()); }
	 ruleContractBody
{ after(grammarAccess.getContractBodyRule()); } 
	 EOF 
;

// Rule ContractBody
ruleContractBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContractBodyAccess().getTypeAssignment()); }
		(rule__ContractBody__TypeAssignment)
		{ after(grammarAccess.getContractBodyAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContractType
entryRuleContractType
:
{ before(grammarAccess.getContractTypeRule()); }
	 ruleContractType
{ after(grammarAccess.getContractTypeRule()); } 
	 EOF 
;

// Rule ContractType
ruleContractType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContractTypeAccess().getAlternatives()); }
		(rule__ContractType__Alternatives)
		{ after(grammarAccess.getContractTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValueRangeContract
entryRuleValueRangeContract
:
{ before(grammarAccess.getValueRangeContractRule()); }
	 ruleValueRangeContract
{ after(grammarAccess.getValueRangeContractRule()); } 
	 EOF 
;

// Rule ValueRangeContract
ruleValueRangeContract 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueRangeContractAccess().getGroup()); }
		(rule__ValueRangeContract__Group__0)
		{ after(grammarAccess.getValueRangeContractAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContractField
entryRuleContractField
:
{ before(grammarAccess.getContractFieldRule()); }
	 ruleContractField
{ after(grammarAccess.getContractFieldRule()); } 
	 EOF 
;

// Rule ContractField
ruleContractField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContractFieldAccess().getAlternatives()); }
		(rule__ContractField__Alternatives)
		{ after(grammarAccess.getContractFieldAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContractValue
entryRuleContractValue
:
{ before(grammarAccess.getContractValueRule()); }
	 ruleContractValue
{ after(grammarAccess.getContractValueRule()); } 
	 EOF 
;

// Rule ContractValue
ruleContractValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContractValueAccess().getAlternatives()); }
		(rule__ContractValue__Alternatives)
		{ after(grammarAccess.getContractValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionContract
entryRuleConditionContract
:
{ before(grammarAccess.getConditionContractRule()); }
	 ruleConditionContract
{ after(grammarAccess.getConditionContractRule()); } 
	 EOF 
;

// Rule ConditionContract
ruleConditionContract 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionContractAccess().getGroup()); }
		(rule__ConditionContract__Group__0)
		{ after(grammarAccess.getConditionContractAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfClause
entryRuleIfClause
:
{ before(grammarAccess.getIfClauseRule()); }
	 ruleIfClause
{ after(grammarAccess.getIfClauseRule()); } 
	 EOF 
;

// Rule IfClause
ruleIfClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfClauseAccess().getGroup()); }
		(rule__IfClause__Group__0)
		{ after(grammarAccess.getIfClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleThenClause
entryRuleThenClause
:
{ before(grammarAccess.getThenClauseRule()); }
	 ruleThenClause
{ after(grammarAccess.getThenClauseRule()); } 
	 EOF 
;

// Rule ThenClause
ruleThenClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getThenClauseAccess().getGroup()); }
		(rule__ThenClause__Group__0)
		{ after(grammarAccess.getThenClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBelongOp
entryRuleBelongOp
:
{ before(grammarAccess.getBelongOpRule()); }
	 ruleBelongOp
{ after(grammarAccess.getBelongOpRule()); } 
	 EOF 
;

// Rule BelongOp
ruleBelongOp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBelongOpAccess().getAlternatives()); }
		(rule__BelongOp__Alternatives)
		{ after(grammarAccess.getBelongOpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataCondition
entryRuleDataCondition
:
{ before(grammarAccess.getDataConditionRule()); }
	 ruleDataCondition
{ after(grammarAccess.getDataConditionRule()); } 
	 EOF 
;

// Rule DataCondition
ruleDataCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataConditionAccess().getAlternatives()); }
		(rule__DataCondition__Alternatives)
		{ after(grammarAccess.getDataConditionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSpecialValueCheck
entryRuleSpecialValueCheck
:
{ before(grammarAccess.getSpecialValueCheckRule()); }
	 ruleSpecialValueCheck
{ after(grammarAccess.getSpecialValueCheckRule()); } 
	 EOF 
;

// Rule SpecialValueCheck
ruleSpecialValueCheck 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSpecialValueCheckAccess().getSpecial_valuesKeyword()); }
		'special_values'
		{ after(grammarAccess.getSpecialValueCheckAccess().getSpecial_valuesKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCastTypeCheck
entryRuleCastTypeCheck
:
{ before(grammarAccess.getCastTypeCheckRule()); }
	 ruleCastTypeCheck
{ after(grammarAccess.getCastTypeCheckRule()); } 
	 EOF 
;

// Rule CastTypeCheck
ruleCastTypeCheck 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCastTypeCheckAccess().getGroup()); }
		(rule__CastTypeCheck__Group__0)
		{ after(grammarAccess.getCastTypeCheckAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValueCheck
entryRuleValueCheck
:
{ before(grammarAccess.getValueCheckRule()); }
	 ruleValueCheck
{ after(grammarAccess.getValueCheckRule()); } 
	 EOF 
;

// Rule ValueCheck
ruleValueCheck 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueCheckAccess().getGroup()); }
		(rule__ValueCheck__Group__0)
		{ after(grammarAccess.getValueCheckAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataResult
entryRuleDataResult
:
{ before(grammarAccess.getDataResultRule()); }
	 ruleDataResult
{ after(grammarAccess.getDataResultRule()); } 
	 EOF 
;

// Rule DataResult
ruleDataResult 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataResultAccess().getAlternatives()); }
		(rule__DataResult__Alternatives)
		{ after(grammarAccess.getDataResultAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSpecialValueContract
entryRuleSpecialValueContract
:
{ before(grammarAccess.getSpecialValueContractRule()); }
	 ruleSpecialValueContract
{ after(grammarAccess.getSpecialValueContractRule()); } 
	 EOF 
;

// Rule SpecialValueContract
ruleSpecialValueContract 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSpecialValueContractAccess().getAlternatives()); }
		(rule__SpecialValueContract__Alternatives)
		{ after(grammarAccess.getSpecialValueContractAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCastTypeContract
entryRuleCastTypeContract
:
{ before(grammarAccess.getCastTypeContractRule()); }
	 ruleCastTypeContract
{ after(grammarAccess.getCastTypeContractRule()); } 
	 EOF 
;

// Rule CastTypeContract
ruleCastTypeContract 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCastTypeContractAccess().getAlternatives()); }
		(rule__CastTypeContract__Alternatives)
		{ after(grammarAccess.getCastTypeContractAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTransformation
entryRuleTransformation
:
{ before(grammarAccess.getTransformationRule()); }
	 ruleTransformation
{ after(grammarAccess.getTransformationRule()); } 
	 EOF 
;

// Rule Transformation
ruleTransformation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTransformationAccess().getAlternatives()); }
		(rule__Transformation__Alternatives)
		{ after(grammarAccess.getTransformationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRowFilter
entryRuleRowFilter
:
{ before(grammarAccess.getRowFilterRule()); }
	 ruleRowFilter
{ after(grammarAccess.getRowFilterRule()); } 
	 EOF 
;

// Rule RowFilter
ruleRowFilter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRowFilterAccess().getGroup()); }
		(rule__RowFilter__Group__0)
		{ after(grammarAccess.getRowFilterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFilterCondition
entryRuleFilterCondition
:
{ before(grammarAccess.getFilterConditionRule()); }
	 ruleFilterCondition
{ after(grammarAccess.getFilterConditionRule()); } 
	 EOF 
;

// Rule FilterCondition
ruleFilterCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFilterConditionAccess().getAlternatives()); }
		(rule__FilterCondition__Alternatives)
		{ after(grammarAccess.getFilterConditionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMissingFilter
entryRuleMissingFilter
:
{ before(grammarAccess.getMissingFilterRule()); }
	 ruleMissingFilter
{ after(grammarAccess.getMissingFilterRule()); } 
	 EOF 
;

// Rule MissingFilter
ruleMissingFilter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMissingFilterAccess().getGroup()); }
		(rule__MissingFilter__Group__0)
		{ after(grammarAccess.getMissingFilterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRangeFilter
entryRuleRangeFilter
:
{ before(grammarAccess.getRangeFilterRule()); }
	 ruleRangeFilter
{ after(grammarAccess.getRangeFilterRule()); } 
	 EOF 
;

// Rule RangeFilter
ruleRangeFilter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRangeFilterAccess().getGroup()); }
		(rule__RangeFilter__Group__0)
		{ after(grammarAccess.getRangeFilterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRangeBounds
entryRuleRangeBounds
:
{ before(grammarAccess.getRangeBoundsRule()); }
	 ruleRangeBounds
{ after(grammarAccess.getRangeBoundsRule()); } 
	 EOF 
;

// Rule RangeBounds
ruleRangeBounds 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRangeBoundsAccess().getAlternatives()); }
		(rule__RangeBounds__Alternatives)
		{ after(grammarAccess.getRangeBoundsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBoundValue
entryRuleBoundValue
:
{ before(grammarAccess.getBoundValueRule()); }
	 ruleBoundValue
{ after(grammarAccess.getBoundValueRule()); } 
	 EOF 
;

// Rule BoundValue
ruleBoundValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoundValueAccess().getAlternatives()); }
		(rule__BoundValue__Alternatives)
		{ after(grammarAccess.getBoundValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringFilter
entryRuleStringFilter
:
{ before(grammarAccess.getStringFilterRule()); }
	 ruleStringFilter
{ after(grammarAccess.getStringFilterRule()); } 
	 EOF 
;

// Rule StringFilter
ruleStringFilter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringFilterAccess().getAlternatives()); }
		(rule__StringFilter__Alternatives)
		{ after(grammarAccess.getStringFilterAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePattern
entryRulePattern
:
{ before(grammarAccess.getPatternRule()); }
	 rulePattern
{ after(grammarAccess.getPatternRule()); } 
	 EOF 
;

// Rule Pattern
rulePattern 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPatternAccess().getAlternatives()); }
		(rule__Pattern__Alternatives)
		{ after(grammarAccess.getPatternAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIncludeExclude
entryRuleIncludeExclude
:
{ before(grammarAccess.getIncludeExcludeRule()); }
	 ruleIncludeExclude
{ after(grammarAccess.getIncludeExcludeRule()); } 
	 EOF 
;

// Rule IncludeExclude
ruleIncludeExclude 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIncludeExcludeAccess().getAlternatives()); }
		(rule__IncludeExclude__Alternatives)
		{ after(grammarAccess.getIncludeExcludeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColumnFilter
entryRuleColumnFilter
:
{ before(grammarAccess.getColumnFilterRule()); }
	 ruleColumnFilter
{ after(grammarAccess.getColumnFilterRule()); } 
	 EOF 
;

// Rule ColumnFilter
ruleColumnFilter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColumnFilterAccess().getAlternatives()); }
		(rule__ColumnFilter__Alternatives)
		{ after(grammarAccess.getColumnFilterAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMapping
entryRuleMapping
:
{ before(grammarAccess.getMappingRule()); }
	 ruleMapping
{ after(grammarAccess.getMappingRule()); } 
	 EOF 
;

// Rule Mapping
ruleMapping 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMappingAccess().getAlternatives()); }
		(rule__Mapping__Alternatives)
		{ after(grammarAccess.getMappingAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValueMapping
entryRuleValueMapping
:
{ before(grammarAccess.getValueMappingRule()); }
	 ruleValueMapping
{ after(grammarAccess.getValueMappingRule()); } 
	 EOF 
;

// Rule ValueMapping
ruleValueMapping 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueMappingAccess().getGroup()); }
		(rule__ValueMapping__Group__0)
		{ after(grammarAccess.getValueMappingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMappingRules
entryRuleMappingRules
:
{ before(grammarAccess.getMappingRulesRule()); }
	 ruleMappingRules
{ after(grammarAccess.getMappingRulesRule()); } 
	 EOF 
;

// Rule MappingRules
ruleMappingRules 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMappingRulesAccess().getGroup()); }
		(rule__MappingRules__Group__0)?
		{ after(grammarAccess.getMappingRulesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMappingRule
entryRuleMappingRule
:
{ before(grammarAccess.getMappingRuleRule()); }
	 ruleMappingRule
{ after(grammarAccess.getMappingRuleRule()); } 
	 EOF 
;

// Rule MappingRule
ruleMappingRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMappingRuleAccess().getAlternatives()); }
		(rule__MappingRule__Alternatives)
		{ after(grammarAccess.getMappingRuleAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubstringMapping
entryRuleSubstringMapping
:
{ before(grammarAccess.getSubstringMappingRule()); }
	 ruleSubstringMapping
{ after(grammarAccess.getSubstringMappingRule()); } 
	 EOF 
;

// Rule SubstringMapping
ruleSubstringMapping 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubstringMappingAccess().getGroup()); }
		(rule__SubstringMapping__Group__0)
		{ after(grammarAccess.getSubstringMappingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMappingMode
entryRuleMappingMode
:
{ before(grammarAccess.getMappingModeRule()); }
	 ruleMappingMode
{ after(grammarAccess.getMappingModeRule()); } 
	 EOF 
;

// Rule MappingMode
ruleMappingMode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMappingModeAccess().getAlternatives()); }
		(rule__MappingMode__Alternatives)
		{ after(grammarAccess.getMappingModeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMathOp
entryRuleMathOp
:
{ before(grammarAccess.getMathOpRule()); }
	 ruleMathOp
{ after(grammarAccess.getMathOpRule()); } 
	 EOF 
;

// Rule MathOp
ruleMathOp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMathOpAccess().getGroup()); }
		(rule__MathOp__Group__0)
		{ after(grammarAccess.getMathOpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMathExpression
entryRuleMathExpression
:
{ before(grammarAccess.getMathExpressionRule()); }
	 ruleMathExpression
{ after(grammarAccess.getMathExpressionRule()); } 
	 EOF 
;

// Rule MathExpression
ruleMathExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMathExpressionAccess().getGroup()); }
		(rule__MathExpression__Group__0)
		{ after(grammarAccess.getMathExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary
entryRulePrimary
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
		(rule__Primary__Alternatives)
		{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionCall
entryRuleFunctionCall
:
{ before(grammarAccess.getFunctionCallRule()); }
	 ruleFunctionCall
{ after(grammarAccess.getFunctionCallRule()); } 
	 EOF 
;

// Rule FunctionCall
ruleFunctionCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionCallAccess().getGroup()); }
		(rule__FunctionCall__Group__0)
		{ after(grammarAccess.getFunctionCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunction
entryRuleFunction
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionAccess().getAlternatives()); }
		(rule__Function__Alternatives)
		{ after(grammarAccess.getFunctionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperand
entryRuleOperand
:
{ before(grammarAccess.getOperandRule()); }
	 ruleOperand
{ after(grammarAccess.getOperandRule()); } 
	 EOF 
;

// Rule Operand
ruleOperand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperandAccess().getAlternatives()); }
		(rule__Operand__Alternatives)
		{ after(grammarAccess.getOperandAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperator
entryRuleOperator
:
{ before(grammarAccess.getOperatorRule()); }
	 ruleOperator
{ after(grammarAccess.getOperatorRule()); } 
	 EOF 
;

// Rule Operator
ruleOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperatorAccess().getAlternatives()); }
		(rule__Operator__Alternatives)
		{ after(grammarAccess.getOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBinner
entryRuleBinner
:
{ before(grammarAccess.getBinnerRule()); }
	 ruleBinner
{ after(grammarAccess.getBinnerRule()); } 
	 EOF 
;

// Rule Binner
ruleBinner 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBinnerAccess().getGroup()); }
		(rule__Binner__Group__0)
		{ after(grammarAccess.getBinnerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBinDefinitions
entryRuleBinDefinitions
:
{ before(grammarAccess.getBinDefinitionsRule()); }
	 ruleBinDefinitions
{ after(grammarAccess.getBinDefinitionsRule()); } 
	 EOF 
;

// Rule BinDefinitions
ruleBinDefinitions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBinDefinitionsAccess().getGroup()); }
		(rule__BinDefinitions__Group__0)?
		{ after(grammarAccess.getBinDefinitionsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBinDef
entryRuleBinDef
:
{ before(grammarAccess.getBinDefRule()); }
	 ruleBinDef
{ after(grammarAccess.getBinDefRule()); } 
	 EOF 
;

// Rule BinDef
ruleBinDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBinDefAccess().getGroup()); }
		(rule__BinDef__Group__0)
		{ after(grammarAccess.getBinDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBinName
entryRuleBinName
:
{ before(grammarAccess.getBinNameRule()); }
	 ruleBinName
{ after(grammarAccess.getBinNameRule()); } 
	 EOF 
;

// Rule BinName
ruleBinName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBinNameAccess().getNameAssignment()); }
		(rule__BinName__NameAssignment)
		{ after(grammarAccess.getBinNameAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInterval
entryRuleInterval
:
{ before(grammarAccess.getIntervalRule()); }
	 ruleInterval
{ after(grammarAccess.getIntervalRule()); } 
	 EOF 
;

// Rule Interval
ruleInterval 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntervalAccess().getAlternatives()); }
		(rule__Interval__Alternatives)
		{ after(grammarAccess.getIntervalAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntervalBound
entryRuleIntervalBound
:
{ before(grammarAccess.getIntervalBoundRule()); }
	 ruleIntervalBound
{ after(grammarAccess.getIntervalBoundRule()); } 
	 EOF 
;

// Rule IntervalBound
ruleIntervalBound 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntervalBoundAccess().getAlternatives()); }
		(rule__IntervalBound__Alternatives)
		{ after(grammarAccess.getIntervalBoundAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBinMode
entryRuleBinMode
:
{ before(grammarAccess.getBinModeRule()); }
	 ruleBinMode
{ after(grammarAccess.getBinModeRule()); } 
	 EOF 
;

// Rule BinMode
ruleBinMode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBinModeAccess().getAlternatives()); }
		(rule__BinMode__Alternatives)
		{ after(grammarAccess.getBinModeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeConversion
entryRuleTypeConversion
:
{ before(grammarAccess.getTypeConversionRule()); }
	 ruleTypeConversion
{ after(grammarAccess.getTypeConversionRule()); } 
	 EOF 
;

// Rule TypeConversion
ruleTypeConversion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeConversionAccess().getAlternatives()); }
		(rule__TypeConversion__Alternatives)
		{ after(grammarAccess.getTypeConversionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDecimalSeparator
entryRuleDecimalSeparator
:
{ before(grammarAccess.getDecimalSeparatorRule()); }
	 ruleDecimalSeparator
{ after(grammarAccess.getDecimalSeparatorRule()); } 
	 EOF 
;

// Rule DecimalSeparator
ruleDecimalSeparator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDecimalSeparatorAccess().getGroup()); }
		(rule__DecimalSeparator__Group__0)
		{ after(grammarAccess.getDecimalSeparatorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDateFormat
entryRuleDateFormat
:
{ before(grammarAccess.getDateFormatRule()); }
	 ruleDateFormat
{ after(grammarAccess.getDateFormatRule()); } 
	 EOF 
;

// Rule DateFormat
ruleDateFormat 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDateFormatAccess().getGroup()); }
		(rule__DateFormat__Group__0)
		{ after(grammarAccess.getDateFormatAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImputation
entryRuleImputation
:
{ before(grammarAccess.getImputationRule()); }
	 ruleImputation
{ after(grammarAccess.getImputationRule()); } 
	 EOF 
;

// Rule Imputation
ruleImputation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImputationAccess().getGroup()); }
		(rule__Imputation__Group__0)
		{ after(grammarAccess.getImputationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImputeMethod
entryRuleImputeMethod
:
{ before(grammarAccess.getImputeMethodRule()); }
	 ruleImputeMethod
{ after(grammarAccess.getImputeMethodRule()); } 
	 EOF 
;

// Rule ImputeMethod
ruleImputeMethod 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImputeMethodAccess().getAlternatives()); }
		(rule__ImputeMethod__Alternatives)
		{ after(grammarAccess.getImputeMethodAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFixedImpute
entryRuleFixedImpute
:
{ before(grammarAccess.getFixedImputeRule()); }
	 ruleFixedImpute
{ after(grammarAccess.getFixedImputeRule()); } 
	 EOF 
;

// Rule FixedImpute
ruleFixedImpute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFixedImputeAccess().getGroup()); }
		(rule__FixedImpute__Group__0)
		{ after(grammarAccess.getFixedImputeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValueList
entryRuleValueList
:
{ before(grammarAccess.getValueListRule()); }
	 ruleValueList
{ after(grammarAccess.getValueListRule()); } 
	 EOF 
;

// Rule ValueList
ruleValueList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueListAccess().getAlternatives()); }
		(rule__ValueList__Alternatives)
		{ after(grammarAccess.getValueListAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValue
entryRuleValue
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueAccess().getAlternatives()); }
		(rule__Value__Alternatives)
		{ after(grammarAccess.getValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatisticalImpute
entryRuleStatisticalImpute
:
{ before(grammarAccess.getStatisticalImputeRule()); }
	 ruleStatisticalImpute
{ after(grammarAccess.getStatisticalImputeRule()); } 
	 EOF 
;

// Rule StatisticalImpute
ruleStatisticalImpute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatisticalImputeAccess().getAlternatives()); }
		(rule__StatisticalImpute__Alternatives)
		{ after(grammarAccess.getStatisticalImputeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSequentialImpute
entryRuleSequentialImpute
:
{ before(grammarAccess.getSequentialImputeRule()); }
	 ruleSequentialImpute
{ after(grammarAccess.getSequentialImputeRule()); } 
	 EOF 
;

// Rule SequentialImpute
ruleSequentialImpute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSequentialImputeAccess().getAlternatives()); }
		(rule__SequentialImpute__Alternatives)
		{ after(grammarAccess.getSequentialImputeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdvancedImpute
entryRuleAdvancedImpute
:
{ before(grammarAccess.getAdvancedImputeRule()); }
	 ruleAdvancedImpute
{ after(grammarAccess.getAdvancedImputeRule()); } 
	 EOF 
;

// Rule AdvancedImpute
ruleAdvancedImpute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdvancedImputeAccess().getAlternatives()); }
		(rule__AdvancedImpute__Alternatives)
		{ after(grammarAccess.getAdvancedImputeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInterpolationType
entryRuleInterpolationType
:
{ before(grammarAccess.getInterpolationTypeRule()); }
	 ruleInterpolationType
{ after(grammarAccess.getInterpolationTypeRule()); } 
	 EOF 
;

// Rule InterpolationType
ruleInterpolationType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInterpolationTypeAccess().getAlternatives()); }
		(rule__InterpolationType__Alternatives)
		{ after(grammarAccess.getInterpolationTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutlierTreatment
entryRuleOutlierTreatment
:
{ before(grammarAccess.getOutlierTreatmentRule()); }
	 ruleOutlierTreatment
{ after(grammarAccess.getOutlierTreatmentRule()); } 
	 EOF 
;

// Rule OutlierTreatment
ruleOutlierTreatment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutlierTreatmentAccess().getGroup()); }
		(rule__OutlierTreatment__Group__0)
		{ after(grammarAccess.getOutlierTreatmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutlierStrategy
entryRuleOutlierStrategy
:
{ before(grammarAccess.getOutlierStrategyRule()); }
	 ruleOutlierStrategy
{ after(grammarAccess.getOutlierStrategyRule()); } 
	 EOF 
;

// Rule OutlierStrategy
ruleOutlierStrategy 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutlierStrategyAccess().getGroup()); }
		(rule__OutlierStrategy__Group__0)
		{ after(grammarAccess.getOutlierStrategyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReplacementStrategy
entryRuleReplacementStrategy
:
{ before(grammarAccess.getReplacementStrategyRule()); }
	 ruleReplacementStrategy
{ after(grammarAccess.getReplacementStrategyRule()); } 
	 EOF 
;

// Rule ReplacementStrategy
ruleReplacementStrategy 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReplacementStrategyAccess().getAlternatives()); }
		(rule__ReplacementStrategy__Alternatives)
		{ after(grammarAccess.getReplacementStrategyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDetectionMethod
entryRuleDetectionMethod
:
{ before(grammarAccess.getDetectionMethodRule()); }
	 ruleDetectionMethod
{ after(grammarAccess.getDetectionMethodRule()); } 
	 EOF 
;

// Rule DetectionMethod
ruleDetectionMethod 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDetectionMethodAccess().getAlternatives()); }
		(rule__DetectionMethod__Alternatives)
		{ after(grammarAccess.getDetectionMethodAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIQRMethod
entryRuleIQRMethod
:
{ before(grammarAccess.getIQRMethodRule()); }
	 ruleIQRMethod
{ after(grammarAccess.getIQRMethodRule()); } 
	 EOF 
;

// Rule IQRMethod
ruleIQRMethod 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIQRMethodAccess().getGroup()); }
		(rule__IQRMethod__Group__0)
		{ after(grammarAccess.getIQRMethodAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIQRParams
entryRuleIQRParams
:
{ before(grammarAccess.getIQRParamsRule()); }
	 ruleIQRParams
{ after(grammarAccess.getIQRParamsRule()); } 
	 EOF 
;

// Rule IQRParams
ruleIQRParams 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIQRParamsAccess().getAlternatives()); }
		(rule__IQRParams__Alternatives)
		{ after(grammarAccess.getIQRParamsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEstimationType
entryRuleEstimationType
:
{ before(grammarAccess.getEstimationTypeRule()); }
	 ruleEstimationType
{ after(grammarAccess.getEstimationTypeRule()); } 
	 EOF 
;

// Rule EstimationType
ruleEstimationType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEstimationTypeAccess().getAlternatives()); }
		(rule__EstimationType__Alternatives)
		{ after(grammarAccess.getEstimationTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleZScoreMethod
entryRuleZScoreMethod
:
{ before(grammarAccess.getZScoreMethodRule()); }
	 ruleZScoreMethod
{ after(grammarAccess.getZScoreMethodRule()); } 
	 EOF 
;

// Rule ZScoreMethod
ruleZScoreMethod 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getZScoreMethodAccess().getGroup()); }
		(rule__ZScoreMethod__Group__0)
		{ after(grammarAccess.getZScoreMethodAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePercentileMethod
entryRulePercentileMethod
:
{ before(grammarAccess.getPercentileMethodRule()); }
	 rulePercentileMethod
{ after(grammarAccess.getPercentileMethodRule()); } 
	 EOF 
;

// Rule PercentileMethod
rulePercentileMethod 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPercentileMethodAccess().getGroup()); }
		(rule__PercentileMethod__Group__0)
		{ after(grammarAccess.getPercentileMethodAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutlierOptions
entryRuleOutlierOptions
:
{ before(grammarAccess.getOutlierOptionsRule()); }
	 ruleOutlierOptions
{ after(grammarAccess.getOutlierOptionsRule()); } 
	 EOF 
;

// Rule OutlierOptions
ruleOutlierOptions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutlierOptionsAccess().getGroup()); }
		(rule__OutlierOptions__Group__0)
		{ after(grammarAccess.getOutlierOptionsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutlierScope
entryRuleOutlierScope
:
{ before(grammarAccess.getOutlierScopeRule()); }
	 ruleOutlierScope
{ after(grammarAccess.getOutlierScopeRule()); } 
	 EOF 
;

// Rule OutlierScope
ruleOutlierScope 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutlierScopeAccess().getAlternatives()); }
		(rule__OutlierScope__Alternatives)
		{ after(grammarAccess.getOutlierScopeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJoin
entryRuleJoin
:
{ before(grammarAccess.getJoinRule()); }
	 ruleJoin
{ after(grammarAccess.getJoinRule()); } 
	 EOF 
;

// Rule Join
ruleJoin 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJoinAccess().getGroup()); }
		(rule__Join__Group__0)
		{ after(grammarAccess.getJoinAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJoinSpec
entryRuleJoinSpec
:
{ before(grammarAccess.getJoinSpecRule()); }
	 ruleJoinSpec
{ after(grammarAccess.getJoinSpecRule()); } 
	 EOF 
;

// Rule JoinSpec
ruleJoinSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJoinSpecAccess().getGroup()); }
		(rule__JoinSpec__Group__0)
		{ after(grammarAccess.getJoinSpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJoinType
entryRuleJoinType
:
{ before(grammarAccess.getJoinTypeRule()); }
	 ruleJoinType
{ after(grammarAccess.getJoinTypeRule()); } 
	 EOF 
;

// Rule JoinType
ruleJoinType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJoinTypeAccess().getAlternatives()); }
		(rule__JoinType__Alternatives)
		{ after(grammarAccess.getJoinTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJoinConditions
entryRuleJoinConditions
:
{ before(grammarAccess.getJoinConditionsRule()); }
	 ruleJoinConditions
{ after(grammarAccess.getJoinConditionsRule()); } 
	 EOF 
;

// Rule JoinConditions
ruleJoinConditions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJoinConditionsAccess().getGroup()); }
		(rule__JoinConditions__Group__0)
		{ after(grammarAccess.getJoinConditionsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJoinCondition
entryRuleJoinCondition
:
{ before(grammarAccess.getJoinConditionRule()); }
	 ruleJoinCondition
{ after(grammarAccess.getJoinConditionRule()); } 
	 EOF 
;

// Rule JoinCondition
ruleJoinCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJoinConditionAccess().getAlternatives()); }
		(rule__JoinCondition__Alternatives)
		{ after(grammarAccess.getJoinConditionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparator
entryRuleComparator
:
{ before(grammarAccess.getComparatorRule()); }
	 ruleComparator
{ after(grammarAccess.getComparatorRule()); } 
	 EOF 
;

// Rule Comparator
ruleComparator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparatorAccess().getAlternatives()); }
		(rule__Comparator__Alternatives)
		{ after(grammarAccess.getComparatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJoinOptions
entryRuleJoinOptions
:
{ before(grammarAccess.getJoinOptionsRule()); }
	 ruleJoinOptions
{ after(grammarAccess.getJoinOptionsRule()); } 
	 EOF 
;

// Rule JoinOptions
ruleJoinOptions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJoinOptionsAccess().getGroup()); }
		(rule__JoinOptions__Group__0)
		{ after(grammarAccess.getJoinOptionsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColumn
entryRuleColumn
:
{ before(grammarAccess.getColumnRule()); }
	 ruleColumn
{ after(grammarAccess.getColumnRule()); } 
	 EOF 
;

// Rule Column
ruleColumn 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColumnAccess().getAlternatives()); }
		(rule__Column__Alternatives)
		{ after(grammarAccess.getColumnAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColumnList
entryRuleColumnList
:
{ before(grammarAccess.getColumnListRule()); }
	 ruleColumnList
{ after(grammarAccess.getColumnListRule()); } 
	 EOF 
;

// Rule ColumnList
ruleColumnList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColumnListAccess().getAlternatives()); }
		(rule__ColumnList__Alternatives)
		{ after(grammarAccess.getColumnListAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumber
entryRuleNumber
:
{ before(grammarAccess.getNumberRule()); }
	 ruleNumber
{ after(grammarAccess.getNumberRule()); } 
	 EOF 
;

// Rule Number
ruleNumber 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumberAccess().getAlternatives()); }
		(rule__Number__Alternatives)
		{ after(grammarAccess.getNumberAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRegex
entryRuleRegex
:
{ before(grammarAccess.getRegexRule()); }
	 ruleRegex
{ after(grammarAccess.getRegexRule()); } 
	 EOF 
;

// Rule Regex
ruleRegex 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRegexAccess().getGroup()); }
		(rule__Regex__Group__0)
		{ after(grammarAccess.getRegexAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataReader__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataReaderAccess().getCSVReaderParserRuleCall_0()); }
		ruleCSVReader
		{ after(grammarAccess.getDataReaderAccess().getCSVReaderParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDataReaderAccess().getFileReaderParserRuleCall_1()); }
		ruleFileReader
		{ after(grammarAccess.getDataReaderAccess().getFileReaderParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delimiter__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDelimiterAccess().getCommaKeyword_0()); }
		','
		{ after(grammarAccess.getDelimiterAccess().getCommaKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getDelimiterAccess().getSemicolonKeyword_1()); }
		';'
		{ after(grammarAccess.getDelimiterAccess().getSemicolonKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getDelimiterAccess().getTabKeyword_2()); }
		'\t'
		{ after(grammarAccess.getDelimiterAccess().getTabKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getDelimiterAccess().getVerticalLineKeyword_3()); }
		'|'
		{ after(grammarAccess.getDelimiterAccess().getVerticalLineKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getDelimiterAccess().getValueAssignment_4()); }
		(rule__Delimiter__ValueAssignment_4)
		{ after(grammarAccess.getDelimiterAccess().getValueAssignment_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContractAccess().getPreconditionParserRuleCall_0()); }
		rulePrecondition
		{ after(grammarAccess.getContractAccess().getPreconditionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getContractAccess().getPostconditionParserRuleCall_1()); }
		rulePostcondition
		{ after(grammarAccess.getContractAccess().getPostconditionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getContractAccess().getInvariantParserRuleCall_2()); }
		ruleInvariant
		{ after(grammarAccess.getContractAccess().getInvariantParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractName__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContractNameAccess().getNameAssignment_0()); }
		(rule__ContractName__NameAssignment_0)
		{ after(grammarAccess.getContractNameAccess().getNameAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getContractNameAccess().getNameAssignment_1()); }
		(rule__ContractName__NameAssignment_1)
		{ after(grammarAccess.getContractNameAccess().getNameAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContractTypeAccess().getValueRangeContractParserRuleCall_0()); }
		ruleValueRangeContract
		{ after(grammarAccess.getContractTypeAccess().getValueRangeContractParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getContractTypeAccess().getConditionContractParserRuleCall_1()); }
		ruleConditionContract
		{ after(grammarAccess.getContractTypeAccess().getConditionContractParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getContractTypeAccess().getSpecialValueContractParserRuleCall_2()); }
		ruleSpecialValueContract
		{ after(grammarAccess.getContractTypeAccess().getSpecialValueContractParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getContractTypeAccess().getCastTypeContractParserRuleCall_3()); }
		ruleCastTypeContract
		{ after(grammarAccess.getContractTypeAccess().getCastTypeContractParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractField__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContractFieldAccess().getGroup_0()); }
		(rule__ContractField__Group_0__0)
		{ after(grammarAccess.getContractFieldAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getContractFieldAccess().getGroup_1()); }
		(rule__ContractField__Group_1__0)
		{ after(grammarAccess.getContractFieldAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContractValueAccess().getGroup_0()); }
		(rule__ContractValue__Group_0__0)
		{ after(grammarAccess.getContractValueAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getContractValueAccess().getGroup_1()); }
		(rule__ContractValue__Group_1__0)
		{ after(grammarAccess.getContractValueAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getContractValueAccess().getGroup_2()); }
		(rule__ContractValue__Group_2__0)
		{ after(grammarAccess.getContractValueAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getIntegerKeyword_0()); }
		'Integer'
		{ after(grammarAccess.getTypeAccess().getIntegerKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getDoubleKeyword_1()); }
		'Double'
		{ after(grammarAccess.getTypeAccess().getDoubleKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getStringKeyword_2()); }
		'String'
		{ after(grammarAccess.getTypeAccess().getStringKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getBooleanKeyword_3()); }
		'Boolean'
		{ after(grammarAccess.getTypeAccess().getBooleanKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BelongOp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBelongOpAccess().getBelongs_toKeyword_0()); }
		'belongs_to'
		{ after(grammarAccess.getBelongOpAccess().getBelongs_toKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getBelongOpAccess().getNot_belongs_toKeyword_1()); }
		'not_belongs_to'
		{ after(grammarAccess.getBelongOpAccess().getNot_belongs_toKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataCondition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataConditionAccess().getSpecialValueCheckParserRuleCall_0()); }
		ruleSpecialValueCheck
		{ after(grammarAccess.getDataConditionAccess().getSpecialValueCheckParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDataConditionAccess().getCastTypeCheckParserRuleCall_1()); }
		ruleCastTypeCheck
		{ after(grammarAccess.getDataConditionAccess().getCastTypeCheckParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getDataConditionAccess().getValueCheckParserRuleCall_2()); }
		ruleValueCheck
		{ after(grammarAccess.getDataConditionAccess().getValueCheckParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataResult__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataResultAccess().getSpecialValueCheckParserRuleCall_0()); }
		ruleSpecialValueCheck
		{ after(grammarAccess.getDataResultAccess().getSpecialValueCheckParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDataResultAccess().getCastTypeCheckParserRuleCall_1()); }
		ruleCastTypeCheck
		{ after(grammarAccess.getDataResultAccess().getCastTypeCheckParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getDataResultAccess().getValueCheckParserRuleCall_2()); }
		ruleValueCheck
		{ after(grammarAccess.getDataResultAccess().getValueCheckParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialValueContract__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecialValueContractAccess().getGroup_0()); }
		(rule__SpecialValueContract__Group_0__0)
		{ after(grammarAccess.getSpecialValueContractAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSpecialValueContractAccess().getGroup_1()); }
		(rule__SpecialValueContract__Group_1__0)
		{ after(grammarAccess.getSpecialValueContractAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastTypeContract__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCastTypeContractAccess().getGroup_0()); }
		(rule__CastTypeContract__Group_0__0)
		{ after(grammarAccess.getCastTypeContractAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getCastTypeContractAccess().getGroup_1()); }
		(rule__CastTypeContract__Group_1__0)
		{ after(grammarAccess.getCastTypeContractAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransformationAccess().getRowFilterParserRuleCall_0()); }
		ruleRowFilter
		{ after(grammarAccess.getTransformationAccess().getRowFilterParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTransformationAccess().getColumnFilterParserRuleCall_1()); }
		ruleColumnFilter
		{ after(grammarAccess.getTransformationAccess().getColumnFilterParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTransformationAccess().getMappingParserRuleCall_2()); }
		ruleMapping
		{ after(grammarAccess.getTransformationAccess().getMappingParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getTransformationAccess().getMathOpParserRuleCall_3()); }
		ruleMathOp
		{ after(grammarAccess.getTransformationAccess().getMathOpParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getTransformationAccess().getBinnerParserRuleCall_4()); }
		ruleBinner
		{ after(grammarAccess.getTransformationAccess().getBinnerParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getTransformationAccess().getTypeConversionParserRuleCall_5()); }
		ruleTypeConversion
		{ after(grammarAccess.getTransformationAccess().getTypeConversionParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getTransformationAccess().getImputationParserRuleCall_6()); }
		ruleImputation
		{ after(grammarAccess.getTransformationAccess().getImputationParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getTransformationAccess().getOutlierTreatmentParserRuleCall_7()); }
		ruleOutlierTreatment
		{ after(grammarAccess.getTransformationAccess().getOutlierTreatmentParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getTransformationAccess().getJoinParserRuleCall_8()); }
		ruleJoin
		{ after(grammarAccess.getTransformationAccess().getJoinParserRuleCall_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterCondition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilterConditionAccess().getMissingFilterParserRuleCall_0()); }
		ruleMissingFilter
		{ after(grammarAccess.getFilterConditionAccess().getMissingFilterParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFilterConditionAccess().getRangeFilterParserRuleCall_1()); }
		ruleRangeFilter
		{ after(grammarAccess.getFilterConditionAccess().getRangeFilterParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getFilterConditionAccess().getStringFilterParserRuleCall_2()); }
		ruleStringFilter
		{ after(grammarAccess.getFilterConditionAccess().getStringFilterParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeBoundsAccess().getGroup_0()); }
		(rule__RangeBounds__Group_0__0)
		{ after(grammarAccess.getRangeBoundsAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getRangeBoundsAccess().getGroup_1()); }
		(rule__RangeBounds__Group_1__0)
		{ after(grammarAccess.getRangeBoundsAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getRangeBoundsAccess().getGroup_2()); }
		(rule__RangeBounds__Group_2__0)
		{ after(grammarAccess.getRangeBoundsAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getRangeBoundsAccess().getGroup_3()); }
		(rule__RangeBounds__Group_3__0)
		{ after(grammarAccess.getRangeBoundsAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoundValueAccess().getValueAssignment_0()); }
		(rule__BoundValue__ValueAssignment_0)
		{ after(grammarAccess.getBoundValueAccess().getValueAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getBoundValueAccess().getAsteriskKeyword_1()); }
		'*'
		{ after(grammarAccess.getBoundValueAccess().getAsteriskKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getBoundValueAccess().getInfKeyword_2()); }
		'inf'
		{ after(grammarAccess.getBoundValueAccess().getInfKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getBoundValueAccess().getInfKeyword_3()); }
		'-inf'
		{ after(grammarAccess.getBoundValueAccess().getInfKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFilter__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringFilterAccess().getGroup_0()); }
		(rule__StringFilter__Group_0__0)
		{ after(grammarAccess.getStringFilterAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getStringFilterAccess().getGroup_1()); }
		(rule__StringFilter__Group_1__0)
		{ after(grammarAccess.getStringFilterAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternAccess().getValueAssignment_0()); }
		(rule__Pattern__ValueAssignment_0)
		{ after(grammarAccess.getPatternAccess().getValueAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getPatternAccess().getRegexAssignment_1()); }
		(rule__Pattern__RegexAssignment_1)
		{ after(grammarAccess.getPatternAccess().getRegexAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeExclude__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIncludeExcludeAccess().getIncludeKeyword_0()); }
		'include'
		{ after(grammarAccess.getIncludeExcludeAccess().getIncludeKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getIncludeExcludeAccess().getExcludeKeyword_1()); }
		'exclude'
		{ after(grammarAccess.getIncludeExcludeAccess().getExcludeKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnFilter__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnFilterAccess().getGroup_0()); }
		(rule__ColumnFilter__Group_0__0)
		{ after(grammarAccess.getColumnFilterAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getColumnFilterAccess().getGroup_1()); }
		(rule__ColumnFilter__Group_1__0)
		{ after(grammarAccess.getColumnFilterAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getColumnFilterAccess().getGroup_2()); }
		(rule__ColumnFilter__Group_2__0)
		{ after(grammarAccess.getColumnFilterAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getColumnFilterAccess().getGroup_3()); }
		(rule__ColumnFilter__Group_3__0)
		{ after(grammarAccess.getColumnFilterAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingAccess().getValueMappingParserRuleCall_0()); }
		ruleValueMapping
		{ after(grammarAccess.getMappingAccess().getValueMappingParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getMappingAccess().getSubstringMappingParserRuleCall_1()); }
		ruleSubstringMapping
		{ after(grammarAccess.getMappingAccess().getSubstringMappingParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingRule__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingRuleAccess().getGroup_0()); }
		(rule__MappingRule__Group_0__0)
		{ after(grammarAccess.getMappingRuleAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getMappingRuleAccess().getGroup_1()); }
		(rule__MappingRule__Group_1__0)
		{ after(grammarAccess.getMappingRuleAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingMode__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingModeAccess().getReplaceKeyword_0()); }
		'replace'
		{ after(grammarAccess.getMappingModeAccess().getReplaceKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getMappingModeAccess().getGroup_1()); }
		(rule__MappingMode__Group_1__0)
		{ after(grammarAccess.getMappingModeAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getOperandAssignment_0()); }
		(rule__Primary__OperandAssignment_0)
		{ after(grammarAccess.getPrimaryAccess().getOperandAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_1()); }
		(rule__Primary__Group_1__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getCallAssignment_2()); }
		(rule__Primary__CallAssignment_2)
		{ after(grammarAccess.getPrimaryAccess().getCallAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getAbsKeyword_0()); }
		'abs'
		{ after(grammarAccess.getFunctionAccess().getAbsKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionAccess().getSqrtKeyword_1()); }
		'sqrt'
		{ after(grammarAccess.getFunctionAccess().getSqrtKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionAccess().getPowKeyword_2()); }
		'pow'
		{ after(grammarAccess.getFunctionAccess().getPowKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionAccess().getLogKeyword_3()); }
		'log'
		{ after(grammarAccess.getFunctionAccess().getLogKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionAccess().getExpKeyword_4()); }
		'exp'
		{ after(grammarAccess.getFunctionAccess().getExpKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionAccess().getSinKeyword_5()); }
		'sin'
		{ after(grammarAccess.getFunctionAccess().getSinKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionAccess().getCosKeyword_6()); }
		'cos'
		{ after(grammarAccess.getFunctionAccess().getCosKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionAccess().getTanKeyword_7()); }
		'tan'
		{ after(grammarAccess.getFunctionAccess().getTanKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionAccess().getRoundKeyword_8()); }
		'round'
		{ after(grammarAccess.getFunctionAccess().getRoundKeyword_8()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionAccess().getCeilKeyword_9()); }
		'ceil'
		{ after(grammarAccess.getFunctionAccess().getCeilKeyword_9()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionAccess().getFloorKeyword_10()); }
		'floor'
		{ after(grammarAccess.getFunctionAccess().getFloorKeyword_10()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperandAccess().getColumnAssignment_0()); }
		(rule__Operand__ColumnAssignment_0)
		{ after(grammarAccess.getOperandAccess().getColumnAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperandAccess().getNumberAssignment_1()); }
		(rule__Operand__NumberAssignment_1)
		{ after(grammarAccess.getOperandAccess().getNumberAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperandAccess().getStringAssignment_2()); }
		(rule__Operand__StringAssignment_2)
		{ after(grammarAccess.getOperandAccess().getStringAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorAccess().getPlusSignKeyword_0()); }
		'+'
		{ after(grammarAccess.getOperatorAccess().getPlusSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getHyphenMinusKeyword_1()); }
		'-'
		{ after(grammarAccess.getOperatorAccess().getHyphenMinusKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getAsteriskKeyword_2()); }
		'*'
		{ after(grammarAccess.getOperatorAccess().getAsteriskKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getSolidusKeyword_3()); }
		'/'
		{ after(grammarAccess.getOperatorAccess().getSolidusKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getPercentSignKeyword_4()); }
		'%'
		{ after(grammarAccess.getOperatorAccess().getPercentSignKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getCircumflexAccentKeyword_5()); }
		'^'
		{ after(grammarAccess.getOperatorAccess().getCircumflexAccentKeyword_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntervalAccess().getGroup_0()); }
		(rule__Interval__Group_0__0)
		{ after(grammarAccess.getIntervalAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getIntervalAccess().getGroup_1()); }
		(rule__Interval__Group_1__0)
		{ after(grammarAccess.getIntervalAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getIntervalAccess().getGroup_2()); }
		(rule__Interval__Group_2__0)
		{ after(grammarAccess.getIntervalAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getIntervalAccess().getGroup_3()); }
		(rule__Interval__Group_3__0)
		{ after(grammarAccess.getIntervalAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntervalBound__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntervalBoundAccess().getValueAssignment_0()); }
		(rule__IntervalBound__ValueAssignment_0)
		{ after(grammarAccess.getIntervalBoundAccess().getValueAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getIntervalBoundAccess().getInfKeyword_1()); }
		'-inf'
		{ after(grammarAccess.getIntervalBoundAccess().getInfKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getIntervalBoundAccess().getInfKeyword_2()); }
		'inf'
		{ after(grammarAccess.getIntervalBoundAccess().getInfKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getIntervalBoundAccess().getInfinityKeyword_3()); }
		'-Infinity'
		{ after(grammarAccess.getIntervalBoundAccess().getInfinityKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getIntervalBoundAccess().getInfinityKeyword_4()); }
		'Infinity'
		{ after(grammarAccess.getIntervalBoundAccess().getInfinityKeyword_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinMode__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinModeAccess().getReplaceKeyword_0()); }
		'replace'
		{ after(grammarAccess.getBinModeAccess().getReplaceKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getBinModeAccess().getGroup_1()); }
		(rule__BinMode__Group_1__0)
		{ after(grammarAccess.getBinModeAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeConversionAccess().getGroup_0()); }
		(rule__TypeConversion__Group_0__0)
		{ after(grammarAccess.getTypeConversionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeConversionAccess().getGroup_1()); }
		(rule__TypeConversion__Group_1__0)
		{ after(grammarAccess.getTypeConversionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeConversionAccess().getGroup_2()); }
		(rule__TypeConversion__Group_2__0)
		{ after(grammarAccess.getTypeConversionAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypeConversionAccess().getGroup_3()); }
		(rule__TypeConversion__Group_3__0)
		{ after(grammarAccess.getTypeConversionAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getTypeConversionAccess().getGroup_4()); }
		(rule__TypeConversion__Group_4__0)
		{ after(grammarAccess.getTypeConversionAccess().getGroup_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalSeparator__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDecimalSeparatorAccess().getFullStopKeyword_2_0()); }
		'.'
		{ after(grammarAccess.getDecimalSeparatorAccess().getFullStopKeyword_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getDecimalSeparatorAccess().getCommaKeyword_2_1()); }
		','
		{ after(grammarAccess.getDecimalSeparatorAccess().getCommaKeyword_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImputeMethod__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImputeMethodAccess().getFixedImputeParserRuleCall_0()); }
		ruleFixedImpute
		{ after(grammarAccess.getImputeMethodAccess().getFixedImputeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getImputeMethodAccess().getStatisticalImputeParserRuleCall_1()); }
		ruleStatisticalImpute
		{ after(grammarAccess.getImputeMethodAccess().getStatisticalImputeParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getImputeMethodAccess().getSequentialImputeParserRuleCall_2()); }
		ruleSequentialImpute
		{ after(grammarAccess.getImputeMethodAccess().getSequentialImputeParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getImputeMethodAccess().getAdvancedImputeParserRuleCall_3()); }
		ruleAdvancedImpute
		{ after(grammarAccess.getImputeMethodAccess().getAdvancedImputeParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueList__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueListAccess().getValueAssignment_0()); }
		(rule__ValueList__ValueAssignment_0)
		{ after(grammarAccess.getValueListAccess().getValueAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getValueListAccess().getGroup_1()); }
		(rule__ValueList__Group_1__0)
		{ after(grammarAccess.getValueListAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getNumberAssignment_0()); }
		(rule__Value__NumberAssignment_0)
		{ after(grammarAccess.getValueAccess().getNumberAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getStringAssignment_1()); }
		(rule__Value__StringAssignment_1)
		{ after(grammarAccess.getValueAccess().getStringAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getNullKeyword_2()); }
		'null'
		{ after(grammarAccess.getValueAccess().getNullKeyword_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatisticalImpute__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatisticalImputeAccess().getMeanKeyword_0()); }
		'mean'
		{ after(grammarAccess.getStatisticalImputeAccess().getMeanKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatisticalImputeAccess().getMedianKeyword_1()); }
		'median'
		{ after(grammarAccess.getStatisticalImputeAccess().getMedianKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatisticalImputeAccess().getModeKeyword_2()); }
		'mode'
		{ after(grammarAccess.getStatisticalImputeAccess().getModeKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatisticalImputeAccess().getMost_frequentKeyword_3()); }
		'most_frequent'
		{ after(grammarAccess.getStatisticalImputeAccess().getMost_frequentKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getStatisticalImputeAccess().getMaxKeyword_4()); }
		'max'
		{ after(grammarAccess.getStatisticalImputeAccess().getMaxKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getStatisticalImputeAccess().getMinKeyword_5()); }
		'min'
		{ after(grammarAccess.getStatisticalImputeAccess().getMinKeyword_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequentialImpute__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequentialImputeAccess().getForward_fillKeyword_0()); }
		'forward_fill'
		{ after(grammarAccess.getSequentialImputeAccess().getForward_fillKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getSequentialImputeAccess().getBackward_fillKeyword_1()); }
		'backward_fill'
		{ after(grammarAccess.getSequentialImputeAccess().getBackward_fillKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getSequentialImputeAccess().getPrevious_valueKeyword_2()); }
		'previous_value'
		{ after(grammarAccess.getSequentialImputeAccess().getPrevious_valueKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getSequentialImputeAccess().getNext_valueKeyword_3()); }
		'next_value'
		{ after(grammarAccess.getSequentialImputeAccess().getNext_valueKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdvancedImpute__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdvancedImputeAccess().getGroup_0()); }
		(rule__AdvancedImpute__Group_0__0)
		{ after(grammarAccess.getAdvancedImputeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdvancedImputeAccess().getGroup_1()); }
		(rule__AdvancedImpute__Group_1__0)
		{ after(grammarAccess.getAdvancedImputeAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getAdvancedImputeAccess().getLinearKeyword_2()); }
		'linear'
		{ after(grammarAccess.getAdvancedImputeAccess().getLinearKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getAdvancedImputeAccess().getGroup_3()); }
		(rule__AdvancedImpute__Group_3__0)
		{ after(grammarAccess.getAdvancedImputeAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getAdvancedImputeAccess().getSplineKeyword_4()); }
		'spline'
		{ after(grammarAccess.getAdvancedImputeAccess().getSplineKeyword_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterpolationType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterpolationTypeAccess().getLinearKeyword_0()); }
		'linear'
		{ after(grammarAccess.getInterpolationTypeAccess().getLinearKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getInterpolationTypeAccess().getPolynomialKeyword_1()); }
		'polynomial'
		{ after(grammarAccess.getInterpolationTypeAccess().getPolynomialKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getInterpolationTypeAccess().getSplineKeyword_2()); }
		'spline'
		{ after(grammarAccess.getInterpolationTypeAccess().getSplineKeyword_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplacementStrategy__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReplacementStrategyAccess().getReplace_closestKeyword_0()); }
		'replace_closest'
		{ after(grammarAccess.getReplacementStrategyAccess().getReplace_closestKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getReplacementStrategyAccess().getReplace_missingKeyword_1()); }
		'replace_missing'
		{ after(grammarAccess.getReplacementStrategyAccess().getReplace_missingKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getReplacementStrategyAccess().getReplace_by_closestKeyword_2()); }
		'replace_by_closest'
		{ after(grammarAccess.getReplacementStrategyAccess().getReplace_by_closestKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getReplacementStrategyAccess().getGroup_3()); }
		(rule__ReplacementStrategy__Group_3__0)
		{ after(grammarAccess.getReplacementStrategyAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getReplacementStrategyAccess().getRemoveKeyword_4()); }
		'remove'
		{ after(grammarAccess.getReplacementStrategyAccess().getRemoveKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getReplacementStrategyAccess().getCapKeyword_5()); }
		'cap'
		{ after(grammarAccess.getReplacementStrategyAccess().getCapKeyword_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DetectionMethod__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDetectionMethodAccess().getIQRMethodParserRuleCall_0()); }
		ruleIQRMethod
		{ after(grammarAccess.getDetectionMethodAccess().getIQRMethodParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDetectionMethodAccess().getZScoreMethodParserRuleCall_1()); }
		ruleZScoreMethod
		{ after(grammarAccess.getDetectionMethodAccess().getZScoreMethodParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getDetectionMethodAccess().getPercentileMethodParserRuleCall_2()); }
		rulePercentileMethod
		{ after(grammarAccess.getDetectionMethodAccess().getPercentileMethodParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IQRParams__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIQRParamsAccess().getGroup_0()); }
		(rule__IQRParams__Group_0__0)
		{ after(grammarAccess.getIQRParamsAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getIQRParamsAccess().getGroup_1()); }
		(rule__IQRParams__Group_1__0)
		{ after(grammarAccess.getIQRParamsAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EstimationType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEstimationTypeAccess().getR_4Keyword_0()); }
		'R_4'
		{ after(grammarAccess.getEstimationTypeAccess().getR_4Keyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getEstimationTypeAccess().getR_7Keyword_1()); }
		'R_7'
		{ after(grammarAccess.getEstimationTypeAccess().getR_7Keyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getEstimationTypeAccess().getR_8Keyword_2()); }
		'R_8'
		{ after(grammarAccess.getEstimationTypeAccess().getR_8Keyword_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutlierScope__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutlierScopeAccess().getAllKeyword_0()); }
		'all'
		{ after(grammarAccess.getOutlierScopeAccess().getAllKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getOutlierScopeAccess().getAll_outliersKeyword_1()); }
		'all_outliers'
		{ after(grammarAccess.getOutlierScopeAccess().getAll_outliersKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getOutlierScopeAccess().getLower_onlyKeyword_2()); }
		'lower_only'
		{ after(grammarAccess.getOutlierScopeAccess().getLower_onlyKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getOutlierScopeAccess().getUpper_onlyKeyword_3()); }
		'upper_only'
		{ after(grammarAccess.getOutlierScopeAccess().getUpper_onlyKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinTypeAccess().getInnerKeyword_0()); }
		'inner'
		{ after(grammarAccess.getJoinTypeAccess().getInnerKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getJoinTypeAccess().getLeftKeyword_1()); }
		'left'
		{ after(grammarAccess.getJoinTypeAccess().getLeftKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getJoinTypeAccess().getRightKeyword_2()); }
		'right'
		{ after(grammarAccess.getJoinTypeAccess().getRightKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getJoinTypeAccess().getFullKeyword_3()); }
		'full'
		{ after(grammarAccess.getJoinTypeAccess().getFullKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getJoinTypeAccess().getCrossKeyword_4()); }
		'cross'
		{ after(grammarAccess.getJoinTypeAccess().getCrossKeyword_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinCondition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinConditionAccess().getGroup_0()); }
		(rule__JoinCondition__Group_0__0)
		{ after(grammarAccess.getJoinConditionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getJoinConditionAccess().getGroup_1()); }
		(rule__JoinCondition__Group_1__0)
		{ after(grammarAccess.getJoinConditionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparatorAccess().getEqualsSignKeyword_0()); }
		'='
		{ after(grammarAccess.getComparatorAccess().getEqualsSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparatorAccess().getEqualsSignEqualsSignKeyword_1()); }
		'=='
		{ after(grammarAccess.getComparatorAccess().getEqualsSignEqualsSignKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getComparatorAccess().getExclamationMarkEqualsSignKeyword_2()); }
		'!='
		{ after(grammarAccess.getComparatorAccess().getExclamationMarkEqualsSignKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getComparatorAccess().getLessThanSignKeyword_3()); }
		'<'
		{ after(grammarAccess.getComparatorAccess().getLessThanSignKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getComparatorAccess().getGreaterThanSignKeyword_4()); }
		'>'
		{ after(grammarAccess.getComparatorAccess().getGreaterThanSignKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getComparatorAccess().getLessThanSignEqualsSignKeyword_5()); }
		'<='
		{ after(grammarAccess.getComparatorAccess().getLessThanSignEqualsSignKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getComparatorAccess().getGreaterThanSignEqualsSignKeyword_6()); }
		'>='
		{ after(grammarAccess.getComparatorAccess().getGreaterThanSignEqualsSignKeyword_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnAccess().getNameAssignment_0()); }
		(rule__Column__NameAssignment_0)
		{ after(grammarAccess.getColumnAccess().getNameAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getColumnAccess().getGroup_1()); }
		(rule__Column__Group_1__0)
		{ after(grammarAccess.getColumnAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnList__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnListAccess().getGroup_0()); }
		(rule__ColumnList__Group_0__0)
		{ after(grammarAccess.getColumnListAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getColumnListAccess().getAsteriskKeyword_1()); }
		'*'
		{ after(grammarAccess.getColumnListAccess().getAsteriskKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getGroup_0()); }
		(rule__Number__Group_0__0)
		{ after(grammarAccess.getNumberAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumberAccess().getGroup_1()); }
		(rule__Number__Group_1__0)
		{ after(grammarAccess.getNumberAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group__0__Impl
	rule__Workflow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getWorkflowKeyword_0()); }
	'workflow'
	{ after(grammarAccess.getWorkflowAccess().getWorkflowKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group__1__Impl
	rule__Workflow__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getNameAssignment_1()); }
	(rule__Workflow__NameAssignment_1)
	{ after(grammarAccess.getWorkflowAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group__2__Impl
	rule__Workflow__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getWorkflowAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group__3__Impl
	rule__Workflow__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getSourceAssignment_3()); }
	(rule__Workflow__SourceAssignment_3)
	{ after(grammarAccess.getWorkflowAccess().getSourceAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group__4__Impl
	rule__Workflow__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getBodyAssignment_4()); }
	(rule__Workflow__BodyAssignment_4)
	{ after(grammarAccess.getWorkflowAccess().getBodyAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getWorkflowAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataSource__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataSource__Group__0__Impl
	rule__DataSource__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataSourceAccess().getSourceKeyword_0()); }
	'source'
	{ after(grammarAccess.getDataSourceAccess().getSourceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataSource__Group__1__Impl
	rule__DataSource__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataSourceAccess().getNameAssignment_1()); }
	(rule__DataSource__NameAssignment_1)
	{ after(grammarAccess.getDataSourceAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataSource__Group__2__Impl
	rule__DataSource__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataSourceAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getDataSourceAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataSource__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataSourceAccess().getReaderAssignment_3()); }
	(rule__DataSource__ReaderAssignment_3)
	{ after(grammarAccess.getDataSourceAccess().getReaderAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CSVReader__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CSVReader__Group__0__Impl
	rule__CSVReader__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CSVReader__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCSVReaderAccess().getRead_csvKeyword_0()); }
	'read_csv'
	{ after(grammarAccess.getCSVReaderAccess().getRead_csvKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CSVReader__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CSVReader__Group__1__Impl
	rule__CSVReader__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CSVReader__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCSVReaderAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getCSVReaderAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CSVReader__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CSVReader__Group__2__Impl
	rule__CSVReader__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CSVReader__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCSVReaderAccess().getFilePathAssignment_2()); }
	(rule__CSVReader__FilePathAssignment_2)
	{ after(grammarAccess.getCSVReaderAccess().getFilePathAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CSVReader__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CSVReader__Group__3__Impl
	rule__CSVReader__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CSVReader__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCSVReaderAccess().getGroup_3()); }
	(rule__CSVReader__Group_3__0)?
	{ after(grammarAccess.getCSVReaderAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CSVReader__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CSVReader__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CSVReader__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCSVReaderAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getCSVReaderAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CSVReader__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CSVReader__Group_3__0__Impl
	rule__CSVReader__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CSVReader__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCSVReaderAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getCSVReaderAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CSVReader__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CSVReader__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CSVReader__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCSVReaderAccess().getDelimiterAssignment_3_1()); }
	(rule__CSVReader__DelimiterAssignment_3_1)
	{ after(grammarAccess.getCSVReaderAccess().getDelimiterAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FileReader__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FileReader__Group__0__Impl
	rule__FileReader__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FileReader__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFileReaderAccess().getRead_fileKeyword_0()); }
	'read_file'
	{ after(grammarAccess.getFileReaderAccess().getRead_fileKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FileReader__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FileReader__Group__1__Impl
	rule__FileReader__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FileReader__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFileReaderAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getFileReaderAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FileReader__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FileReader__Group__2__Impl
	rule__FileReader__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FileReader__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFileReaderAccess().getFilePathAssignment_2()); }
	(rule__FileReader__FilePathAssignment_2)
	{ after(grammarAccess.getFileReaderAccess().getFilePathAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FileReader__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FileReader__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FileReader__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFileReaderAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getFileReaderAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Step__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group__0__Impl
	rule__Step__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getNameAssignment_0()); }
	(rule__Step__NameAssignment_0)
	{ after(grammarAccess.getStepAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group__1__Impl
	rule__Step__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getStepAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group__2__Impl
	rule__Step__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getTransformationAssignment_2()); }
	(rule__Step__TransformationAssignment_2)
	{ after(grammarAccess.getStepAccess().getTransformationAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group__3__Impl
	rule__Step__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getGroup_3()); }
	(rule__Step__Group_3__0)?
	{ after(grammarAccess.getStepAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getContractsAssignment_4()); }
	(rule__Step__ContractsAssignment_4)?
	{ after(grammarAccess.getStepAccess().getContractsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Step__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group_3__0__Impl
	rule__Step__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getVerticalLineGreaterThanSignKeyword_3_0()); }
	'|>'
	{ after(grammarAccess.getStepAccess().getVerticalLineGreaterThanSignKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getTargetAssignment_3_1()); }
	(rule__Step__TargetAssignment_3_1)
	{ after(grammarAccess.getStepAccess().getTargetAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ContractBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContractBlock__Group__0__Impl
	rule__ContractBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractBlockAccess().getContractsKeyword_0()); }
	'contracts'
	{ after(grammarAccess.getContractBlockAccess().getContractsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContractBlock__Group__1__Impl
	rule__ContractBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractBlockAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getContractBlockAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContractBlock__Group__2__Impl
	rule__ContractBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractBlockAccess().getContractsAssignment_2()); }
	(rule__ContractBlock__ContractsAssignment_2)*
	{ after(grammarAccess.getContractBlockAccess().getContractsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractBlock__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContractBlock__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractBlock__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractBlockAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getContractBlockAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Precondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Precondition__Group__0__Impl
	rule__Precondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Precondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreconditionAccess().getPreconditionKeyword_0()); }
	'precondition'
	{ after(grammarAccess.getPreconditionAccess().getPreconditionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Precondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Precondition__Group__1__Impl
	rule__Precondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Precondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreconditionAccess().getNameAssignment_1()); }
	(rule__Precondition__NameAssignment_1)
	{ after(grammarAccess.getPreconditionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Precondition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Precondition__Group__2__Impl
	rule__Precondition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Precondition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreconditionAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getPreconditionAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Precondition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Precondition__Group__3__Impl
	rule__Precondition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Precondition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreconditionAccess().getBodyAssignment_3()); }
	(rule__Precondition__BodyAssignment_3)
	{ after(grammarAccess.getPreconditionAccess().getBodyAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Precondition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Precondition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Precondition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreconditionAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getPreconditionAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Postcondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postcondition__Group__0__Impl
	rule__Postcondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Postcondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostconditionAccess().getPostconditionKeyword_0()); }
	'postcondition'
	{ after(grammarAccess.getPostconditionAccess().getPostconditionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postcondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postcondition__Group__1__Impl
	rule__Postcondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Postcondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostconditionAccess().getNameAssignment_1()); }
	(rule__Postcondition__NameAssignment_1)
	{ after(grammarAccess.getPostconditionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postcondition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postcondition__Group__2__Impl
	rule__Postcondition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Postcondition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostconditionAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getPostconditionAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postcondition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postcondition__Group__3__Impl
	rule__Postcondition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Postcondition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostconditionAccess().getBodyAssignment_3()); }
	(rule__Postcondition__BodyAssignment_3)
	{ after(grammarAccess.getPostconditionAccess().getBodyAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postcondition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postcondition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Postcondition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostconditionAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getPostconditionAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Invariant__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Invariant__Group__0__Impl
	rule__Invariant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantAccess().getInvariantKeyword_0()); }
	'invariant'
	{ after(grammarAccess.getInvariantAccess().getInvariantKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Invariant__Group__1__Impl
	rule__Invariant__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantAccess().getNameAssignment_1()); }
	(rule__Invariant__NameAssignment_1)
	{ after(grammarAccess.getInvariantAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Invariant__Group__2__Impl
	rule__Invariant__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getInvariantAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Invariant__Group__3__Impl
	rule__Invariant__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantAccess().getBodyAssignment_3()); }
	(rule__Invariant__BodyAssignment_3)
	{ after(grammarAccess.getInvariantAccess().getBodyAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Invariant__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getInvariantAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValueRangeContract__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueRangeContract__Group__0__Impl
	rule__ValueRangeContract__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueRangeContract__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueRangeContractAccess().getValue_rangeKeyword_0()); }
	'value_range'
	{ after(grammarAccess.getValueRangeContractAccess().getValue_rangeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueRangeContract__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueRangeContract__Group__1__Impl
	rule__ValueRangeContract__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueRangeContract__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueRangeContractAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getValueRangeContractAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueRangeContract__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueRangeContract__Group__2__Impl
	rule__ValueRangeContract__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueRangeContract__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueRangeContractAccess().getFieldAssignment_2()); }
	(rule__ValueRangeContract__FieldAssignment_2)
	{ after(grammarAccess.getValueRangeContractAccess().getFieldAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueRangeContract__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueRangeContract__Group__3__Impl
	rule__ValueRangeContract__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueRangeContract__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueRangeContractAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getValueRangeContractAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueRangeContract__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueRangeContract__Group__4__Impl
	rule__ValueRangeContract__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueRangeContract__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueRangeContractAccess().getValueAssignment_4()); }
	(rule__ValueRangeContract__ValueAssignment_4)
	{ after(grammarAccess.getValueRangeContractAccess().getValueAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueRangeContract__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueRangeContract__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueRangeContract__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueRangeContractAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getValueRangeContractAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ContractField__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContractField__Group_0__0__Impl
	rule__ContractField__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractField__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractFieldAccess().getInputKeyword_0_0()); }
	'input'
	{ after(grammarAccess.getContractFieldAccess().getInputKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractField__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContractField__Group_0__1__Impl
	rule__ContractField__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractField__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractFieldAccess().getFullStopKeyword_0_1()); }
	'.'
	{ after(grammarAccess.getContractFieldAccess().getFullStopKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractField__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContractField__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractField__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractFieldAccess().getColumnAssignment_0_2()); }
	(rule__ContractField__ColumnAssignment_0_2)
	{ after(grammarAccess.getContractFieldAccess().getColumnAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ContractField__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContractField__Group_1__0__Impl
	rule__ContractField__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractField__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractFieldAccess().getOutputKeyword_1_0()); }
	'output'
	{ after(grammarAccess.getContractFieldAccess().getOutputKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractField__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContractField__Group_1__1__Impl
	rule__ContractField__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractField__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractFieldAccess().getFullStopKeyword_1_1()); }
	'.'
	{ after(grammarAccess.getContractFieldAccess().getFullStopKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractField__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContractField__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractField__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractFieldAccess().getColumnAssignment_1_2()); }
	(rule__ContractField__ColumnAssignment_1_2)
	{ after(grammarAccess.getContractFieldAccess().getColumnAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ContractValue__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContractValue__Group_0__0__Impl
	rule__ContractValue__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractValue__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractValueAccess().getCastable_toKeyword_0_0()); }
	'castable_to'
	{ after(grammarAccess.getContractValueAccess().getCastable_toKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractValue__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContractValue__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractValue__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractValueAccess().getTypeAssignment_0_1()); }
	(rule__ContractValue__TypeAssignment_0_1)
	{ after(grammarAccess.getContractValueAccess().getTypeAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ContractValue__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContractValue__Group_1__0__Impl
	rule__ContractValue__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractValue__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractValueAccess().getIn_rangeKeyword_1_0()); }
	'in_range'
	{ after(grammarAccess.getContractValueAccess().getIn_rangeKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractValue__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContractValue__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractValue__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractValueAccess().getBoundsAssignment_1_1()); }
	(rule__ContractValue__BoundsAssignment_1_1)
	{ after(grammarAccess.getContractValueAccess().getBoundsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ContractValue__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContractValue__Group_2__0__Impl
	rule__ContractValue__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractValue__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractValueAccess().getMatchesKeyword_2_0()); }
	'matches'
	{ after(grammarAccess.getContractValueAccess().getMatchesKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractValue__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContractValue__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractValue__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractValueAccess().getValueAssignment_2_1()); }
	(rule__ContractValue__ValueAssignment_2_1)
	{ after(grammarAccess.getContractValueAccess().getValueAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionContract__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionContract__Group__0__Impl
	rule__ConditionContract__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionContract__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionContractAccess().getConditionKeyword_0()); }
	'condition'
	{ after(grammarAccess.getConditionContractAccess().getConditionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionContract__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionContract__Group__1__Impl
	rule__ConditionContract__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionContract__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionContractAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getConditionContractAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionContract__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionContract__Group__2__Impl
	rule__ConditionContract__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionContract__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionContractAccess().getIfClauseAssignment_2()); }
	(rule__ConditionContract__IfClauseAssignment_2)
	{ after(grammarAccess.getConditionContractAccess().getIfClauseAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionContract__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionContract__Group__3__Impl
	rule__ConditionContract__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionContract__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionContractAccess().getThenClauseAssignment_3()); }
	(rule__ConditionContract__ThenClauseAssignment_3)
	{ after(grammarAccess.getConditionContractAccess().getThenClauseAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionContract__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionContract__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionContract__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionContractAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getConditionContractAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfClause__Group__0__Impl
	rule__IfClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfClauseAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getIfClauseAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfClause__Group__1__Impl
	rule__IfClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfClauseAccess().getFieldAssignment_1()); }
	(rule__IfClause__FieldAssignment_1)
	{ after(grammarAccess.getIfClauseAccess().getFieldAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfClause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfClause__Group__2__Impl
	rule__IfClause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfClause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfClauseAccess().getOpAssignment_2()); }
	(rule__IfClause__OpAssignment_2)
	{ after(grammarAccess.getIfClauseAccess().getOpAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfClause__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfClause__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfClause__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfClauseAccess().getConditionAssignment_3()); }
	(rule__IfClause__ConditionAssignment_3)
	{ after(grammarAccess.getIfClauseAccess().getConditionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ThenClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ThenClause__Group__0__Impl
	rule__ThenClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ThenClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThenClauseAccess().getThenKeyword_0()); }
	'then'
	{ after(grammarAccess.getThenClauseAccess().getThenKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ThenClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ThenClause__Group__1__Impl
	rule__ThenClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ThenClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThenClauseAccess().getFieldAssignment_1()); }
	(rule__ThenClause__FieldAssignment_1)
	{ after(grammarAccess.getThenClauseAccess().getFieldAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ThenClause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ThenClause__Group__2__Impl
	rule__ThenClause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ThenClause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThenClauseAccess().getOpAssignment_2()); }
	(rule__ThenClause__OpAssignment_2)
	{ after(grammarAccess.getThenClauseAccess().getOpAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ThenClause__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ThenClause__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ThenClause__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThenClauseAccess().getResultAssignment_3()); }
	(rule__ThenClause__ResultAssignment_3)
	{ after(grammarAccess.getThenClauseAccess().getResultAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CastTypeCheck__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CastTypeCheck__Group__0__Impl
	rule__CastTypeCheck__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CastTypeCheck__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastTypeCheckAccess().getTypeKeyword_0()); }
	'type'
	{ after(grammarAccess.getCastTypeCheckAccess().getTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastTypeCheck__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CastTypeCheck__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CastTypeCheck__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastTypeCheckAccess().getTypeAssignment_1()); }
	(rule__CastTypeCheck__TypeAssignment_1)
	{ after(grammarAccess.getCastTypeCheckAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValueCheck__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueCheck__Group__0__Impl
	rule__ValueCheck__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueCheck__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueCheckAccess().getValueKeyword_0()); }
	'value'
	{ after(grammarAccess.getValueCheckAccess().getValueKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueCheck__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueCheck__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueCheck__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueCheckAccess().getValueAssignment_1()); }
	(rule__ValueCheck__ValueAssignment_1)
	{ after(grammarAccess.getValueCheckAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SpecialValueContract__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpecialValueContract__Group_0__0__Impl
	rule__SpecialValueContract__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialValueContract__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecialValueContractAccess().getNo_special_valuesKeyword_0_0()); }
	'no_special_values'
	{ after(grammarAccess.getSpecialValueContractAccess().getNo_special_valuesKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialValueContract__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpecialValueContract__Group_0__1__Impl
	rule__SpecialValueContract__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialValueContract__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecialValueContractAccess().getLeftParenthesisKeyword_0_1()); }
	'('
	{ after(grammarAccess.getSpecialValueContractAccess().getLeftParenthesisKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialValueContract__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpecialValueContract__Group_0__2__Impl
	rule__SpecialValueContract__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialValueContract__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecialValueContractAccess().getFieldAssignment_0_2()); }
	(rule__SpecialValueContract__FieldAssignment_0_2)
	{ after(grammarAccess.getSpecialValueContractAccess().getFieldAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialValueContract__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpecialValueContract__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialValueContract__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecialValueContractAccess().getRightParenthesisKeyword_0_3()); }
	')'
	{ after(grammarAccess.getSpecialValueContractAccess().getRightParenthesisKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SpecialValueContract__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpecialValueContract__Group_1__0__Impl
	rule__SpecialValueContract__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialValueContract__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecialValueContractAccess().getHas_special_valuesKeyword_1_0()); }
	'has_special_values'
	{ after(grammarAccess.getSpecialValueContractAccess().getHas_special_valuesKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialValueContract__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpecialValueContract__Group_1__1__Impl
	rule__SpecialValueContract__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialValueContract__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecialValueContractAccess().getLeftParenthesisKeyword_1_1()); }
	'('
	{ after(grammarAccess.getSpecialValueContractAccess().getLeftParenthesisKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialValueContract__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpecialValueContract__Group_1__2__Impl
	rule__SpecialValueContract__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialValueContract__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecialValueContractAccess().getFieldAssignment_1_2()); }
	(rule__SpecialValueContract__FieldAssignment_1_2)
	{ after(grammarAccess.getSpecialValueContractAccess().getFieldAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialValueContract__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpecialValueContract__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialValueContract__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecialValueContractAccess().getRightParenthesisKeyword_1_3()); }
	')'
	{ after(grammarAccess.getSpecialValueContractAccess().getRightParenthesisKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CastTypeContract__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CastTypeContract__Group_0__0__Impl
	rule__CastTypeContract__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CastTypeContract__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastTypeContractAccess().getCastable_toKeyword_0_0()); }
	'castable_to'
	{ after(grammarAccess.getCastTypeContractAccess().getCastable_toKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastTypeContract__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CastTypeContract__Group_0__1__Impl
	rule__CastTypeContract__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CastTypeContract__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastTypeContractAccess().getTypeAssignment_0_1()); }
	(rule__CastTypeContract__TypeAssignment_0_1)
	{ after(grammarAccess.getCastTypeContractAccess().getTypeAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastTypeContract__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CastTypeContract__Group_0__2__Impl
	rule__CastTypeContract__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CastTypeContract__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastTypeContractAccess().getLeftParenthesisKeyword_0_2()); }
	'('
	{ after(grammarAccess.getCastTypeContractAccess().getLeftParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastTypeContract__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CastTypeContract__Group_0__3__Impl
	rule__CastTypeContract__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CastTypeContract__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastTypeContractAccess().getFieldAssignment_0_3()); }
	(rule__CastTypeContract__FieldAssignment_0_3)
	{ after(grammarAccess.getCastTypeContractAccess().getFieldAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastTypeContract__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CastTypeContract__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CastTypeContract__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastTypeContractAccess().getRightParenthesisKeyword_0_4()); }
	')'
	{ after(grammarAccess.getCastTypeContractAccess().getRightParenthesisKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CastTypeContract__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CastTypeContract__Group_1__0__Impl
	rule__CastTypeContract__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CastTypeContract__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastTypeContractAccess().getIs_typeKeyword_1_0()); }
	'is_type'
	{ after(grammarAccess.getCastTypeContractAccess().getIs_typeKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastTypeContract__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CastTypeContract__Group_1__1__Impl
	rule__CastTypeContract__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CastTypeContract__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastTypeContractAccess().getTypeAssignment_1_1()); }
	(rule__CastTypeContract__TypeAssignment_1_1)
	{ after(grammarAccess.getCastTypeContractAccess().getTypeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastTypeContract__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CastTypeContract__Group_1__2__Impl
	rule__CastTypeContract__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CastTypeContract__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastTypeContractAccess().getLeftParenthesisKeyword_1_2()); }
	'('
	{ after(grammarAccess.getCastTypeContractAccess().getLeftParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastTypeContract__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CastTypeContract__Group_1__3__Impl
	rule__CastTypeContract__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CastTypeContract__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastTypeContractAccess().getFieldAssignment_1_3()); }
	(rule__CastTypeContract__FieldAssignment_1_3)
	{ after(grammarAccess.getCastTypeContractAccess().getFieldAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastTypeContract__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CastTypeContract__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CastTypeContract__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastTypeContractAccess().getRightParenthesisKeyword_1_4()); }
	')'
	{ after(grammarAccess.getCastTypeContractAccess().getRightParenthesisKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RowFilter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RowFilter__Group__0__Impl
	rule__RowFilter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RowFilter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowFilterAccess().getFilter_rowsKeyword_0()); }
	'filter_rows'
	{ after(grammarAccess.getRowFilterAccess().getFilter_rowsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RowFilter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RowFilter__Group__1__Impl
	rule__RowFilter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RowFilter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowFilterAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getRowFilterAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RowFilter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RowFilter__Group__2__Impl
	rule__RowFilter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RowFilter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowFilterAccess().getConditionAssignment_2()); }
	(rule__RowFilter__ConditionAssignment_2)
	{ after(grammarAccess.getRowFilterAccess().getConditionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RowFilter__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RowFilter__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RowFilter__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowFilterAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getRowFilterAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MissingFilter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissingFilter__Group__0__Impl
	rule__MissingFilter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MissingFilter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissingFilterAccess().getMissingKeyword_0()); }
	'missing'
	{ after(grammarAccess.getMissingFilterAccess().getMissingKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissingFilter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissingFilter__Group__1__Impl
	rule__MissingFilter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MissingFilter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissingFilterAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getMissingFilterAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissingFilter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissingFilter__Group__2__Impl
	rule__MissingFilter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MissingFilter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissingFilterAccess().getColumnsAssignment_2()); }
	(rule__MissingFilter__ColumnsAssignment_2)
	{ after(grammarAccess.getMissingFilterAccess().getColumnsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissingFilter__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissingFilter__Group__3__Impl
	rule__MissingFilter__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MissingFilter__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissingFilterAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getMissingFilterAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissingFilter__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissingFilter__Group__4__Impl
	rule__MissingFilter__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MissingFilter__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissingFilterAccess().getIncludeExcludeAssignment_4()); }
	(rule__MissingFilter__IncludeExcludeAssignment_4)
	{ after(grammarAccess.getMissingFilterAccess().getIncludeExcludeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissingFilter__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissingFilter__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MissingFilter__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissingFilterAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getMissingFilterAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RangeFilter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeFilter__Group__0__Impl
	rule__RangeFilter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeFilter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeFilterAccess().getRangeKeyword_0()); }
	'range'
	{ after(grammarAccess.getRangeFilterAccess().getRangeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeFilter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeFilter__Group__1__Impl
	rule__RangeFilter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeFilter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeFilterAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getRangeFilterAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeFilter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeFilter__Group__2__Impl
	rule__RangeFilter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeFilter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeFilterAccess().getColumnAssignment_2()); }
	(rule__RangeFilter__ColumnAssignment_2)
	{ after(grammarAccess.getRangeFilterAccess().getColumnAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeFilter__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeFilter__Group__3__Impl
	rule__RangeFilter__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeFilter__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeFilterAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getRangeFilterAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeFilter__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeFilter__Group__4__Impl
	rule__RangeFilter__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeFilter__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeFilterAccess().getBoundsAssignment_4()); }
	(rule__RangeFilter__BoundsAssignment_4)
	{ after(grammarAccess.getRangeFilterAccess().getBoundsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeFilter__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeFilter__Group__5__Impl
	rule__RangeFilter__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeFilter__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeFilterAccess().getCommaKeyword_5()); }
	','
	{ after(grammarAccess.getRangeFilterAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeFilter__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeFilter__Group__6__Impl
	rule__RangeFilter__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeFilter__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeFilterAccess().getIncludeExcludeAssignment_6()); }
	(rule__RangeFilter__IncludeExcludeAssignment_6)
	{ after(grammarAccess.getRangeFilterAccess().getIncludeExcludeAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeFilter__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeFilter__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeFilter__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeFilterAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getRangeFilterAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RangeBounds__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeBounds__Group_0__0__Impl
	rule__RangeBounds__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeBoundsAccess().getLeftSquareBracketKeyword_0_0()); }
	'['
	{ after(grammarAccess.getRangeBoundsAccess().getLeftSquareBracketKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeBounds__Group_0__1__Impl
	rule__RangeBounds__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeBoundsAccess().getLowerAssignment_0_1()); }
	(rule__RangeBounds__LowerAssignment_0_1)
	{ after(grammarAccess.getRangeBoundsAccess().getLowerAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeBounds__Group_0__2__Impl
	rule__RangeBounds__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeBoundsAccess().getCommaKeyword_0_2()); }
	','
	{ after(grammarAccess.getRangeBoundsAccess().getCommaKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeBounds__Group_0__3__Impl
	rule__RangeBounds__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeBoundsAccess().getUpperAssignment_0_3()); }
	(rule__RangeBounds__UpperAssignment_0_3)
	{ after(grammarAccess.getRangeBoundsAccess().getUpperAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeBounds__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeBoundsAccess().getRightSquareBracketKeyword_0_4()); }
	']'
	{ after(grammarAccess.getRangeBoundsAccess().getRightSquareBracketKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RangeBounds__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeBounds__Group_1__0__Impl
	rule__RangeBounds__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeBoundsAccess().getLeftSquareBracketKeyword_1_0()); }
	'['
	{ after(grammarAccess.getRangeBoundsAccess().getLeftSquareBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeBounds__Group_1__1__Impl
	rule__RangeBounds__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeBoundsAccess().getLowerAssignment_1_1()); }
	(rule__RangeBounds__LowerAssignment_1_1)
	{ after(grammarAccess.getRangeBoundsAccess().getLowerAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeBounds__Group_1__2__Impl
	rule__RangeBounds__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeBoundsAccess().getCommaKeyword_1_2()); }
	','
	{ after(grammarAccess.getRangeBoundsAccess().getCommaKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeBounds__Group_1__3__Impl
	rule__RangeBounds__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeBoundsAccess().getUpperAssignment_1_3()); }
	(rule__RangeBounds__UpperAssignment_1_3)
	{ after(grammarAccess.getRangeBoundsAccess().getUpperAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeBounds__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeBoundsAccess().getRightParenthesisKeyword_1_4()); }
	')'
	{ after(grammarAccess.getRangeBoundsAccess().getRightParenthesisKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RangeBounds__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeBounds__Group_2__0__Impl
	rule__RangeBounds__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeBoundsAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getRangeBoundsAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeBounds__Group_2__1__Impl
	rule__RangeBounds__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeBoundsAccess().getLowerAssignment_2_1()); }
	(rule__RangeBounds__LowerAssignment_2_1)
	{ after(grammarAccess.getRangeBoundsAccess().getLowerAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeBounds__Group_2__2__Impl
	rule__RangeBounds__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeBoundsAccess().getCommaKeyword_2_2()); }
	','
	{ after(grammarAccess.getRangeBoundsAccess().getCommaKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeBounds__Group_2__3__Impl
	rule__RangeBounds__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeBoundsAccess().getUpperAssignment_2_3()); }
	(rule__RangeBounds__UpperAssignment_2_3)
	{ after(grammarAccess.getRangeBoundsAccess().getUpperAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeBounds__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeBoundsAccess().getRightSquareBracketKeyword_2_4()); }
	']'
	{ after(grammarAccess.getRangeBoundsAccess().getRightSquareBracketKeyword_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RangeBounds__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeBounds__Group_3__0__Impl
	rule__RangeBounds__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeBoundsAccess().getLeftParenthesisKeyword_3_0()); }
	'('
	{ after(grammarAccess.getRangeBoundsAccess().getLeftParenthesisKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeBounds__Group_3__1__Impl
	rule__RangeBounds__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeBoundsAccess().getLowerAssignment_3_1()); }
	(rule__RangeBounds__LowerAssignment_3_1)
	{ after(grammarAccess.getRangeBoundsAccess().getLowerAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeBounds__Group_3__2__Impl
	rule__RangeBounds__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeBoundsAccess().getCommaKeyword_3_2()); }
	','
	{ after(grammarAccess.getRangeBoundsAccess().getCommaKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeBounds__Group_3__3__Impl
	rule__RangeBounds__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeBoundsAccess().getUpperAssignment_3_3()); }
	(rule__RangeBounds__UpperAssignment_3_3)
	{ after(grammarAccess.getRangeBoundsAccess().getUpperAssignment_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeBounds__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeBoundsAccess().getRightParenthesisKeyword_3_4()); }
	')'
	{ after(grammarAccess.getRangeBoundsAccess().getRightParenthesisKeyword_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringFilter__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringFilter__Group_0__0__Impl
	rule__StringFilter__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFilter__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringFilterAccess().getMatchesKeyword_0_0()); }
	'matches'
	{ after(grammarAccess.getStringFilterAccess().getMatchesKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFilter__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringFilter__Group_0__1__Impl
	rule__StringFilter__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFilter__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringFilterAccess().getLeftParenthesisKeyword_0_1()); }
	'('
	{ after(grammarAccess.getStringFilterAccess().getLeftParenthesisKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFilter__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringFilter__Group_0__2__Impl
	rule__StringFilter__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFilter__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringFilterAccess().getColumnAssignment_0_2()); }
	(rule__StringFilter__ColumnAssignment_0_2)
	{ after(grammarAccess.getStringFilterAccess().getColumnAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFilter__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringFilter__Group_0__3__Impl
	rule__StringFilter__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFilter__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringFilterAccess().getCommaKeyword_0_3()); }
	','
	{ after(grammarAccess.getStringFilterAccess().getCommaKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFilter__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringFilter__Group_0__4__Impl
	rule__StringFilter__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFilter__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringFilterAccess().getPatternAssignment_0_4()); }
	(rule__StringFilter__PatternAssignment_0_4)
	{ after(grammarAccess.getStringFilterAccess().getPatternAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFilter__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringFilter__Group_0__5__Impl
	rule__StringFilter__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFilter__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringFilterAccess().getCommaKeyword_0_5()); }
	','
	{ after(grammarAccess.getStringFilterAccess().getCommaKeyword_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFilter__Group_0__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringFilter__Group_0__6__Impl
	rule__StringFilter__Group_0__7
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFilter__Group_0__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringFilterAccess().getIncludeExcludeAssignment_0_6()); }
	(rule__StringFilter__IncludeExcludeAssignment_0_6)
	{ after(grammarAccess.getStringFilterAccess().getIncludeExcludeAssignment_0_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFilter__Group_0__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringFilter__Group_0__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFilter__Group_0__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringFilterAccess().getRightParenthesisKeyword_0_7()); }
	')'
	{ after(grammarAccess.getStringFilterAccess().getRightParenthesisKeyword_0_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringFilter__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringFilter__Group_1__0__Impl
	rule__StringFilter__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFilter__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringFilterAccess().getLikeKeyword_1_0()); }
	'like'
	{ after(grammarAccess.getStringFilterAccess().getLikeKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFilter__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringFilter__Group_1__1__Impl
	rule__StringFilter__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFilter__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringFilterAccess().getLeftParenthesisKeyword_1_1()); }
	'('
	{ after(grammarAccess.getStringFilterAccess().getLeftParenthesisKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFilter__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringFilter__Group_1__2__Impl
	rule__StringFilter__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFilter__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringFilterAccess().getColumnAssignment_1_2()); }
	(rule__StringFilter__ColumnAssignment_1_2)
	{ after(grammarAccess.getStringFilterAccess().getColumnAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFilter__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringFilter__Group_1__3__Impl
	rule__StringFilter__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFilter__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringFilterAccess().getCommaKeyword_1_3()); }
	','
	{ after(grammarAccess.getStringFilterAccess().getCommaKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFilter__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringFilter__Group_1__4__Impl
	rule__StringFilter__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFilter__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringFilterAccess().getPatternAssignment_1_4()); }
	(rule__StringFilter__PatternAssignment_1_4)
	{ after(grammarAccess.getStringFilterAccess().getPatternAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFilter__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringFilter__Group_1__5__Impl
	rule__StringFilter__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFilter__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringFilterAccess().getCommaKeyword_1_5()); }
	','
	{ after(grammarAccess.getStringFilterAccess().getCommaKeyword_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFilter__Group_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringFilter__Group_1__6__Impl
	rule__StringFilter__Group_1__7
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFilter__Group_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringFilterAccess().getIncludeExcludeAssignment_1_6()); }
	(rule__StringFilter__IncludeExcludeAssignment_1_6)
	{ after(grammarAccess.getStringFilterAccess().getIncludeExcludeAssignment_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFilter__Group_1__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringFilter__Group_1__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFilter__Group_1__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringFilterAccess().getRightParenthesisKeyword_1_7()); }
	')'
	{ after(grammarAccess.getStringFilterAccess().getRightParenthesisKeyword_1_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ColumnFilter__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnFilter__Group_0__0__Impl
	rule__ColumnFilter__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnFilter__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnFilterAccess().getSelect_columnsKeyword_0_0()); }
	'select_columns'
	{ after(grammarAccess.getColumnFilterAccess().getSelect_columnsKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnFilter__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnFilter__Group_0__1__Impl
	rule__ColumnFilter__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnFilter__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnFilterAccess().getLeftCurlyBracketKeyword_0_1()); }
	'{'
	{ after(grammarAccess.getColumnFilterAccess().getLeftCurlyBracketKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnFilter__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnFilter__Group_0__2__Impl
	rule__ColumnFilter__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnFilter__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnFilterAccess().getColumnsAssignment_0_2()); }
	(rule__ColumnFilter__ColumnsAssignment_0_2)
	{ after(grammarAccess.getColumnFilterAccess().getColumnsAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnFilter__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnFilter__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnFilter__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnFilterAccess().getRightCurlyBracketKeyword_0_3()); }
	'}'
	{ after(grammarAccess.getColumnFilterAccess().getRightCurlyBracketKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ColumnFilter__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnFilter__Group_1__0__Impl
	rule__ColumnFilter__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnFilter__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnFilterAccess().getDrop_columnsKeyword_1_0()); }
	'drop_columns'
	{ after(grammarAccess.getColumnFilterAccess().getDrop_columnsKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnFilter__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnFilter__Group_1__1__Impl
	rule__ColumnFilter__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnFilter__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnFilterAccess().getLeftCurlyBracketKeyword_1_1()); }
	'{'
	{ after(grammarAccess.getColumnFilterAccess().getLeftCurlyBracketKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnFilter__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnFilter__Group_1__2__Impl
	rule__ColumnFilter__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnFilter__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnFilterAccess().getColumnsAssignment_1_2()); }
	(rule__ColumnFilter__ColumnsAssignment_1_2)
	{ after(grammarAccess.getColumnFilterAccess().getColumnsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnFilter__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnFilter__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnFilter__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnFilterAccess().getRightCurlyBracketKeyword_1_3()); }
	'}'
	{ after(grammarAccess.getColumnFilterAccess().getRightCurlyBracketKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ColumnFilter__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnFilter__Group_2__0__Impl
	rule__ColumnFilter__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnFilter__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnFilterAccess().getKeepKeyword_2_0()); }
	'keep'
	{ after(grammarAccess.getColumnFilterAccess().getKeepKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnFilter__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnFilter__Group_2__1__Impl
	rule__ColumnFilter__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnFilter__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnFilterAccess().getLeftCurlyBracketKeyword_2_1()); }
	'{'
	{ after(grammarAccess.getColumnFilterAccess().getLeftCurlyBracketKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnFilter__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnFilter__Group_2__2__Impl
	rule__ColumnFilter__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnFilter__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnFilterAccess().getColumnsAssignment_2_2()); }
	(rule__ColumnFilter__ColumnsAssignment_2_2)
	{ after(grammarAccess.getColumnFilterAccess().getColumnsAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnFilter__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnFilter__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnFilter__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnFilterAccess().getRightCurlyBracketKeyword_2_3()); }
	'}'
	{ after(grammarAccess.getColumnFilterAccess().getRightCurlyBracketKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ColumnFilter__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnFilter__Group_3__0__Impl
	rule__ColumnFilter__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnFilter__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnFilterAccess().getRemoveKeyword_3_0()); }
	'remove'
	{ after(grammarAccess.getColumnFilterAccess().getRemoveKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnFilter__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnFilter__Group_3__1__Impl
	rule__ColumnFilter__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnFilter__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnFilterAccess().getLeftCurlyBracketKeyword_3_1()); }
	'{'
	{ after(grammarAccess.getColumnFilterAccess().getLeftCurlyBracketKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnFilter__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnFilter__Group_3__2__Impl
	rule__ColumnFilter__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnFilter__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnFilterAccess().getColumnsAssignment_3_2()); }
	(rule__ColumnFilter__ColumnsAssignment_3_2)
	{ after(grammarAccess.getColumnFilterAccess().getColumnsAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnFilter__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnFilter__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnFilter__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnFilterAccess().getRightCurlyBracketKeyword_3_3()); }
	'}'
	{ after(grammarAccess.getColumnFilterAccess().getRightCurlyBracketKeyword_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValueMapping__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueMapping__Group__0__Impl
	rule__ValueMapping__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueMapping__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueMappingAccess().getMapKeyword_0()); }
	'map'
	{ after(grammarAccess.getValueMappingAccess().getMapKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueMapping__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueMapping__Group__1__Impl
	rule__ValueMapping__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueMapping__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueMappingAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getValueMappingAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueMapping__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueMapping__Group__2__Impl
	rule__ValueMapping__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueMapping__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueMappingAccess().getColumnAssignment_2()); }
	(rule__ValueMapping__ColumnAssignment_2)
	{ after(grammarAccess.getValueMappingAccess().getColumnAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueMapping__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueMapping__Group__3__Impl
	rule__ValueMapping__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueMapping__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueMappingAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getValueMappingAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueMapping__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueMapping__Group__4__Impl
	rule__ValueMapping__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueMapping__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueMappingAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getValueMappingAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueMapping__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueMapping__Group__5__Impl
	rule__ValueMapping__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueMapping__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueMappingAccess().getRulesAssignment_5()); }
	(rule__ValueMapping__RulesAssignment_5)
	{ after(grammarAccess.getValueMappingAccess().getRulesAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueMapping__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueMapping__Group__6__Impl
	rule__ValueMapping__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueMapping__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueMappingAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getValueMappingAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueMapping__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueMapping__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueMapping__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueMappingAccess().getModeAssignment_7()); }
	(rule__ValueMapping__ModeAssignment_7)
	{ after(grammarAccess.getValueMappingAccess().getModeAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MappingRules__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingRules__Group__0__Impl
	rule__MappingRules__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingRules__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingRulesAccess().getRulesAssignment_0()); }
	(rule__MappingRules__RulesAssignment_0)
	{ after(grammarAccess.getMappingRulesAccess().getRulesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingRules__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingRules__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingRules__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingRulesAccess().getGroup_1()); }
	(rule__MappingRules__Group_1__0)*
	{ after(grammarAccess.getMappingRulesAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MappingRules__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingRules__Group_1__0__Impl
	rule__MappingRules__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingRules__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingRulesAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getMappingRulesAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingRules__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingRules__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingRules__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingRulesAccess().getRulesAssignment_1_1()); }
	(rule__MappingRules__RulesAssignment_1_1)
	{ after(grammarAccess.getMappingRulesAccess().getRulesAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MappingRule__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingRule__Group_0__0__Impl
	rule__MappingRule__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingRule__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingRuleAccess().getFromAssignment_0_0()); }
	(rule__MappingRule__FromAssignment_0_0)
	{ after(grammarAccess.getMappingRuleAccess().getFromAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingRule__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingRule__Group_0__1__Impl
	rule__MappingRule__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingRule__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingRuleAccess().getHyphenMinusGreaterThanSignKeyword_0_1()); }
	'->'
	{ after(grammarAccess.getMappingRuleAccess().getHyphenMinusGreaterThanSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingRule__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingRule__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingRule__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingRuleAccess().getToAssignment_0_2()); }
	(rule__MappingRule__ToAssignment_0_2)
	{ after(grammarAccess.getMappingRuleAccess().getToAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MappingRule__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingRule__Group_1__0__Impl
	rule__MappingRule__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingRule__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingRuleAccess().getPatternAssignment_1_0()); }
	(rule__MappingRule__PatternAssignment_1_0)
	{ after(grammarAccess.getMappingRuleAccess().getPatternAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingRule__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingRule__Group_1__1__Impl
	rule__MappingRule__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingRule__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingRuleAccess().getEqualsSignGreaterThanSignKeyword_1_1()); }
	'=>'
	{ after(grammarAccess.getMappingRuleAccess().getEqualsSignGreaterThanSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingRule__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingRule__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingRule__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingRuleAccess().getToAssignment_1_2()); }
	(rule__MappingRule__ToAssignment_1_2)
	{ after(grammarAccess.getMappingRuleAccess().getToAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SubstringMapping__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubstringMapping__Group__0__Impl
	rule__SubstringMapping__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubstringMapping__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubstringMappingAccess().getReplaceKeyword_0()); }
	'replace'
	{ after(grammarAccess.getSubstringMappingAccess().getReplaceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubstringMapping__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubstringMapping__Group__1__Impl
	rule__SubstringMapping__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SubstringMapping__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubstringMappingAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getSubstringMappingAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubstringMapping__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubstringMapping__Group__2__Impl
	rule__SubstringMapping__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SubstringMapping__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubstringMappingAccess().getColumnAssignment_2()); }
	(rule__SubstringMapping__ColumnAssignment_2)
	{ after(grammarAccess.getSubstringMappingAccess().getColumnAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubstringMapping__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubstringMapping__Group__3__Impl
	rule__SubstringMapping__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SubstringMapping__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubstringMappingAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getSubstringMappingAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubstringMapping__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubstringMapping__Group__4__Impl
	rule__SubstringMapping__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SubstringMapping__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubstringMappingAccess().getFromAssignment_4()); }
	(rule__SubstringMapping__FromAssignment_4)
	{ after(grammarAccess.getSubstringMappingAccess().getFromAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubstringMapping__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubstringMapping__Group__5__Impl
	rule__SubstringMapping__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SubstringMapping__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubstringMappingAccess().getCommaKeyword_5()); }
	','
	{ after(grammarAccess.getSubstringMappingAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubstringMapping__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubstringMapping__Group__6__Impl
	rule__SubstringMapping__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__SubstringMapping__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubstringMappingAccess().getToAssignment_6()); }
	(rule__SubstringMapping__ToAssignment_6)
	{ after(grammarAccess.getSubstringMappingAccess().getToAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubstringMapping__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubstringMapping__Group__7__Impl
	rule__SubstringMapping__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__SubstringMapping__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubstringMappingAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getSubstringMappingAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubstringMapping__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubstringMapping__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubstringMapping__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubstringMappingAccess().getModeAssignment_8()); }
	(rule__SubstringMapping__ModeAssignment_8)
	{ after(grammarAccess.getSubstringMappingAccess().getModeAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MappingMode__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingMode__Group_1__0__Impl
	rule__MappingMode__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingMode__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingModeAccess().getAsKeyword_1_0()); }
	'as'
	{ after(grammarAccess.getMappingModeAccess().getAsKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingMode__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingMode__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingMode__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingModeAccess().getNewNameAssignment_1_1()); }
	(rule__MappingMode__NewNameAssignment_1_1)
	{ after(grammarAccess.getMappingModeAccess().getNewNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MathOp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathOp__Group__0__Impl
	rule__MathOp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MathOp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathOpAccess().getMathKeyword_0()); }
	'math'
	{ after(grammarAccess.getMathOpAccess().getMathKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathOp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathOp__Group__1__Impl
	rule__MathOp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MathOp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathOpAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getMathOpAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathOp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathOp__Group__2__Impl
	rule__MathOp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MathOp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathOpAccess().getExpressionAssignment_2()); }
	(rule__MathOp__ExpressionAssignment_2)
	{ after(grammarAccess.getMathOpAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathOp__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathOp__Group__3__Impl
	rule__MathOp__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MathOp__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathOpAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getMathOpAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathOp__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathOp__Group__4__Impl
	rule__MathOp__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MathOp__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathOpAccess().getAsKeyword_4()); }
	'as'
	{ after(grammarAccess.getMathOpAccess().getAsKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathOp__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathOp__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MathOp__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathOpAccess().getNewNameAssignment_5()); }
	(rule__MathOp__NewNameAssignment_5)
	{ after(grammarAccess.getMathOpAccess().getNewNameAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MathExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathExpression__Group__0__Impl
	rule__MathExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MathExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathExpressionAccess().getPrimaryParserRuleCall_0()); }
	rulePrimary
	{ after(grammarAccess.getMathExpressionAccess().getPrimaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MathExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathExpressionAccess().getGroup_1()); }
	(rule__MathExpression__Group_1__0)*
	{ after(grammarAccess.getMathExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MathExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathExpression__Group_1__0__Impl
	rule__MathExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MathExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathExpressionAccess().getOperatorAssignment_1_0()); }
	(rule__MathExpression__OperatorAssignment_1_0)
	{ after(grammarAccess.getMathExpressionAccess().getOperatorAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MathExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathExpressionAccess().getRightAssignment_1_1()); }
	(rule__MathExpression__RightAssignment_1_1)
	{ after(grammarAccess.getMathExpressionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__0__Impl
	rule__Primary__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__1__Impl
	rule__Primary__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExpressionAssignment_1_1()); }
	(rule__Primary__ExpressionAssignment_1_1)
	{ after(grammarAccess.getPrimaryAccess().getExpressionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_1_2()); }
	')'
	{ after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__0__Impl
	rule__FunctionCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getFunctionAssignment_0()); }
	(rule__FunctionCall__FunctionAssignment_0)
	{ after(grammarAccess.getFunctionCallAccess().getFunctionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__1__Impl
	rule__FunctionCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__2__Impl
	rule__FunctionCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getGroup_2()); }
	(rule__FunctionCall__Group_2__0)?
	{ after(grammarAccess.getFunctionCallAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group_2__0__Impl
	rule__FunctionCall__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getOperandsAssignment_2_0()); }
	(rule__FunctionCall__OperandsAssignment_2_0)
	{ after(grammarAccess.getFunctionCallAccess().getOperandsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getGroup_2_1()); }
	(rule__FunctionCall__Group_2_1__0)*
	{ after(grammarAccess.getFunctionCallAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group_2_1__0__Impl
	rule__FunctionCall__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getFunctionCallAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getOperandsAssignment_2_1_1()); }
	(rule__FunctionCall__OperandsAssignment_2_1_1)
	{ after(grammarAccess.getFunctionCallAccess().getOperandsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Binner__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binner__Group__0__Impl
	rule__Binner__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Binner__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinnerAccess().getBinKeyword_0()); }
	'bin'
	{ after(grammarAccess.getBinnerAccess().getBinKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binner__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binner__Group__1__Impl
	rule__Binner__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Binner__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinnerAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getBinnerAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binner__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binner__Group__2__Impl
	rule__Binner__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Binner__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinnerAccess().getColumnAssignment_2()); }
	(rule__Binner__ColumnAssignment_2)
	{ after(grammarAccess.getBinnerAccess().getColumnAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binner__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binner__Group__3__Impl
	rule__Binner__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Binner__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinnerAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getBinnerAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binner__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binner__Group__4__Impl
	rule__Binner__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Binner__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinnerAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getBinnerAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binner__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binner__Group__5__Impl
	rule__Binner__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Binner__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinnerAccess().getDefinitionsAssignment_5()); }
	(rule__Binner__DefinitionsAssignment_5)
	{ after(grammarAccess.getBinnerAccess().getDefinitionsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binner__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binner__Group__6__Impl
	rule__Binner__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Binner__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinnerAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getBinnerAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binner__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binner__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Binner__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinnerAccess().getModeAssignment_7()); }
	(rule__Binner__ModeAssignment_7)
	{ after(grammarAccess.getBinnerAccess().getModeAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BinDefinitions__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinDefinitions__Group__0__Impl
	rule__BinDefinitions__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinDefinitions__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinDefinitionsAccess().getDefinitionsAssignment_0()); }
	(rule__BinDefinitions__DefinitionsAssignment_0)
	{ after(grammarAccess.getBinDefinitionsAccess().getDefinitionsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinDefinitions__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinDefinitions__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinDefinitions__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinDefinitionsAccess().getGroup_1()); }
	(rule__BinDefinitions__Group_1__0)*
	{ after(grammarAccess.getBinDefinitionsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BinDefinitions__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinDefinitions__Group_1__0__Impl
	rule__BinDefinitions__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinDefinitions__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinDefinitionsAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getBinDefinitionsAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinDefinitions__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinDefinitions__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinDefinitions__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinDefinitionsAccess().getDefinitionsAssignment_1_1()); }
	(rule__BinDefinitions__DefinitionsAssignment_1_1)
	{ after(grammarAccess.getBinDefinitionsAccess().getDefinitionsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BinDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinDef__Group__0__Impl
	rule__BinDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinDefAccess().getNameAssignment_0()); }
	(rule__BinDef__NameAssignment_0)
	{ after(grammarAccess.getBinDefAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinDef__Group__1__Impl
	rule__BinDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BinDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinDefAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getBinDefAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinDef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinDef__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinDef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinDefAccess().getIntervalAssignment_2()); }
	(rule__BinDef__IntervalAssignment_2)
	{ after(grammarAccess.getBinDefAccess().getIntervalAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Interval__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interval__Group_0__0__Impl
	rule__Interval__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalAccess().getLeftSquareBracketKeyword_0_0()); }
	'['
	{ after(grammarAccess.getIntervalAccess().getLeftSquareBracketKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interval__Group_0__1__Impl
	rule__Interval__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalAccess().getLowerAssignment_0_1()); }
	(rule__Interval__LowerAssignment_0_1)
	{ after(grammarAccess.getIntervalAccess().getLowerAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interval__Group_0__2__Impl
	rule__Interval__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalAccess().getCommaKeyword_0_2()); }
	','
	{ after(grammarAccess.getIntervalAccess().getCommaKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interval__Group_0__3__Impl
	rule__Interval__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalAccess().getUpperAssignment_0_3()); }
	(rule__Interval__UpperAssignment_0_3)
	{ after(grammarAccess.getIntervalAccess().getUpperAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interval__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalAccess().getRightSquareBracketKeyword_0_4()); }
	']'
	{ after(grammarAccess.getIntervalAccess().getRightSquareBracketKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Interval__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interval__Group_1__0__Impl
	rule__Interval__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalAccess().getLeftSquareBracketKeyword_1_0()); }
	'['
	{ after(grammarAccess.getIntervalAccess().getLeftSquareBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interval__Group_1__1__Impl
	rule__Interval__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalAccess().getLowerAssignment_1_1()); }
	(rule__Interval__LowerAssignment_1_1)
	{ after(grammarAccess.getIntervalAccess().getLowerAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interval__Group_1__2__Impl
	rule__Interval__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalAccess().getCommaKeyword_1_2()); }
	','
	{ after(grammarAccess.getIntervalAccess().getCommaKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interval__Group_1__3__Impl
	rule__Interval__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalAccess().getUpperAssignment_1_3()); }
	(rule__Interval__UpperAssignment_1_3)
	{ after(grammarAccess.getIntervalAccess().getUpperAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interval__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalAccess().getRightParenthesisKeyword_1_4()); }
	')'
	{ after(grammarAccess.getIntervalAccess().getRightParenthesisKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Interval__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interval__Group_2__0__Impl
	rule__Interval__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getIntervalAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interval__Group_2__1__Impl
	rule__Interval__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalAccess().getLowerAssignment_2_1()); }
	(rule__Interval__LowerAssignment_2_1)
	{ after(grammarAccess.getIntervalAccess().getLowerAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interval__Group_2__2__Impl
	rule__Interval__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalAccess().getCommaKeyword_2_2()); }
	','
	{ after(grammarAccess.getIntervalAccess().getCommaKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interval__Group_2__3__Impl
	rule__Interval__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalAccess().getUpperAssignment_2_3()); }
	(rule__Interval__UpperAssignment_2_3)
	{ after(grammarAccess.getIntervalAccess().getUpperAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interval__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalAccess().getRightSquareBracketKeyword_2_4()); }
	']'
	{ after(grammarAccess.getIntervalAccess().getRightSquareBracketKeyword_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Interval__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interval__Group_3__0__Impl
	rule__Interval__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalAccess().getLeftParenthesisKeyword_3_0()); }
	'('
	{ after(grammarAccess.getIntervalAccess().getLeftParenthesisKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interval__Group_3__1__Impl
	rule__Interval__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalAccess().getLowerAssignment_3_1()); }
	(rule__Interval__LowerAssignment_3_1)
	{ after(grammarAccess.getIntervalAccess().getLowerAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interval__Group_3__2__Impl
	rule__Interval__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalAccess().getCommaKeyword_3_2()); }
	','
	{ after(grammarAccess.getIntervalAccess().getCommaKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interval__Group_3__3__Impl
	rule__Interval__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalAccess().getUpperAssignment_3_3()); }
	(rule__Interval__UpperAssignment_3_3)
	{ after(grammarAccess.getIntervalAccess().getUpperAssignment_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interval__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalAccess().getRightParenthesisKeyword_3_4()); }
	')'
	{ after(grammarAccess.getIntervalAccess().getRightParenthesisKeyword_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BinMode__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinMode__Group_1__0__Impl
	rule__BinMode__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinMode__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinModeAccess().getAsKeyword_1_0()); }
	'as'
	{ after(grammarAccess.getBinModeAccess().getAsKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinMode__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinMode__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinMode__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinModeAccess().getNewNameAssignment_1_1()); }
	(rule__BinMode__NewNameAssignment_1_1)
	{ after(grammarAccess.getBinModeAccess().getNewNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeConversion__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeConversion__Group_0__0__Impl
	rule__TypeConversion__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeConversionAccess().getTo_numericKeyword_0_0()); }
	'to_numeric'
	{ after(grammarAccess.getTypeConversionAccess().getTo_numericKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeConversion__Group_0__1__Impl
	rule__TypeConversion__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeConversionAccess().getLeftParenthesisKeyword_0_1()); }
	'('
	{ after(grammarAccess.getTypeConversionAccess().getLeftParenthesisKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeConversion__Group_0__2__Impl
	rule__TypeConversion__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeConversionAccess().getColumnsAssignment_0_2()); }
	(rule__TypeConversion__ColumnsAssignment_0_2)
	{ after(grammarAccess.getTypeConversionAccess().getColumnsAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeConversion__Group_0__3__Impl
	rule__TypeConversion__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeConversionAccess().getRightParenthesisKeyword_0_3()); }
	')'
	{ after(grammarAccess.getTypeConversionAccess().getRightParenthesisKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeConversion__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeConversionAccess().getSeparatorAssignment_0_4()); }
	(rule__TypeConversion__SeparatorAssignment_0_4)?
	{ after(grammarAccess.getTypeConversionAccess().getSeparatorAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeConversion__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeConversion__Group_1__0__Impl
	rule__TypeConversion__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeConversionAccess().getTo_stringKeyword_1_0()); }
	'to_string'
	{ after(grammarAccess.getTypeConversionAccess().getTo_stringKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeConversion__Group_1__1__Impl
	rule__TypeConversion__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeConversionAccess().getLeftParenthesisKeyword_1_1()); }
	'('
	{ after(grammarAccess.getTypeConversionAccess().getLeftParenthesisKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeConversion__Group_1__2__Impl
	rule__TypeConversion__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeConversionAccess().getColumnsAssignment_1_2()); }
	(rule__TypeConversion__ColumnsAssignment_1_2)
	{ after(grammarAccess.getTypeConversionAccess().getColumnsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeConversion__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeConversionAccess().getRightParenthesisKeyword_1_3()); }
	')'
	{ after(grammarAccess.getTypeConversionAccess().getRightParenthesisKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeConversion__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeConversion__Group_2__0__Impl
	rule__TypeConversion__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeConversionAccess().getTo_categoricalKeyword_2_0()); }
	'to_categorical'
	{ after(grammarAccess.getTypeConversionAccess().getTo_categoricalKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeConversion__Group_2__1__Impl
	rule__TypeConversion__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeConversionAccess().getLeftParenthesisKeyword_2_1()); }
	'('
	{ after(grammarAccess.getTypeConversionAccess().getLeftParenthesisKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeConversion__Group_2__2__Impl
	rule__TypeConversion__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeConversionAccess().getColumnsAssignment_2_2()); }
	(rule__TypeConversion__ColumnsAssignment_2_2)
	{ after(grammarAccess.getTypeConversionAccess().getColumnsAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeConversion__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeConversionAccess().getRightParenthesisKeyword_2_3()); }
	')'
	{ after(grammarAccess.getTypeConversionAccess().getRightParenthesisKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeConversion__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeConversion__Group_3__0__Impl
	rule__TypeConversion__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeConversionAccess().getTo_booleanKeyword_3_0()); }
	'to_boolean'
	{ after(grammarAccess.getTypeConversionAccess().getTo_booleanKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeConversion__Group_3__1__Impl
	rule__TypeConversion__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeConversionAccess().getLeftParenthesisKeyword_3_1()); }
	'('
	{ after(grammarAccess.getTypeConversionAccess().getLeftParenthesisKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeConversion__Group_3__2__Impl
	rule__TypeConversion__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeConversionAccess().getColumnsAssignment_3_2()); }
	(rule__TypeConversion__ColumnsAssignment_3_2)
	{ after(grammarAccess.getTypeConversionAccess().getColumnsAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeConversion__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeConversionAccess().getRightParenthesisKeyword_3_3()); }
	')'
	{ after(grammarAccess.getTypeConversionAccess().getRightParenthesisKeyword_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeConversion__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeConversion__Group_4__0__Impl
	rule__TypeConversion__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeConversionAccess().getTo_dateKeyword_4_0()); }
	'to_date'
	{ after(grammarAccess.getTypeConversionAccess().getTo_dateKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeConversion__Group_4__1__Impl
	rule__TypeConversion__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeConversionAccess().getLeftParenthesisKeyword_4_1()); }
	'('
	{ after(grammarAccess.getTypeConversionAccess().getLeftParenthesisKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeConversion__Group_4__2__Impl
	rule__TypeConversion__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeConversionAccess().getColumnsAssignment_4_2()); }
	(rule__TypeConversion__ColumnsAssignment_4_2)
	{ after(grammarAccess.getTypeConversionAccess().getColumnsAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeConversion__Group_4__3__Impl
	rule__TypeConversion__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeConversionAccess().getCommaKeyword_4_3()); }
	','
	{ after(grammarAccess.getTypeConversionAccess().getCommaKeyword_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeConversion__Group_4__4__Impl
	rule__TypeConversion__Group_4__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeConversionAccess().getFormatAssignment_4_4()); }
	(rule__TypeConversion__FormatAssignment_4_4)?
	{ after(grammarAccess.getTypeConversionAccess().getFormatAssignment_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__Group_4__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeConversion__Group_4__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__Group_4__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeConversionAccess().getRightParenthesisKeyword_4_5()); }
	')'
	{ after(grammarAccess.getTypeConversionAccess().getRightParenthesisKeyword_4_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DecimalSeparator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DecimalSeparator__Group__0__Impl
	rule__DecimalSeparator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalSeparator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecimalSeparatorAccess().getSeparatorKeyword_0()); }
	'separator'
	{ after(grammarAccess.getDecimalSeparatorAccess().getSeparatorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalSeparator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DecimalSeparator__Group__1__Impl
	rule__DecimalSeparator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalSeparator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecimalSeparatorAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getDecimalSeparatorAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalSeparator__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DecimalSeparator__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalSeparator__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecimalSeparatorAccess().getAlternatives_2()); }
	(rule__DecimalSeparator__Alternatives_2)
	{ after(grammarAccess.getDecimalSeparatorAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DateFormat__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateFormat__Group__0__Impl
	rule__DateFormat__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DateFormat__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateFormatAccess().getFormatKeyword_0()); }
	'format'
	{ after(grammarAccess.getDateFormatAccess().getFormatKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateFormat__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateFormat__Group__1__Impl
	rule__DateFormat__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DateFormat__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateFormatAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getDateFormatAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateFormat__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateFormat__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DateFormat__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateFormatAccess().getFormatAssignment_2()); }
	(rule__DateFormat__FormatAssignment_2)
	{ after(grammarAccess.getDateFormatAccess().getFormatAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Imputation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Imputation__Group__0__Impl
	rule__Imputation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Imputation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImputationAccess().getImputeKeyword_0()); }
	'impute'
	{ after(grammarAccess.getImputationAccess().getImputeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Imputation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Imputation__Group__1__Impl
	rule__Imputation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Imputation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImputationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getImputationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Imputation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Imputation__Group__2__Impl
	rule__Imputation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Imputation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImputationAccess().getColumnsAssignment_2()); }
	(rule__Imputation__ColumnsAssignment_2)
	{ after(grammarAccess.getImputationAccess().getColumnsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Imputation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Imputation__Group__3__Impl
	rule__Imputation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Imputation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImputationAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getImputationAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Imputation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Imputation__Group__4__Impl
	rule__Imputation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Imputation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImputationAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getImputationAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Imputation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Imputation__Group__5__Impl
	rule__Imputation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Imputation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImputationAccess().getMethodAssignment_5()); }
	(rule__Imputation__MethodAssignment_5)
	{ after(grammarAccess.getImputationAccess().getMethodAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Imputation__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Imputation__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Imputation__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImputationAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getImputationAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FixedImpute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FixedImpute__Group__0__Impl
	rule__FixedImpute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FixedImpute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFixedImputeAccess().getFixedKeyword_0()); }
	'fixed'
	{ after(grammarAccess.getFixedImputeAccess().getFixedKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FixedImpute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FixedImpute__Group__1__Impl
	rule__FixedImpute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FixedImpute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFixedImputeAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getFixedImputeAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FixedImpute__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FixedImpute__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FixedImpute__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFixedImputeAccess().getValuesAssignment_2()); }
	(rule__FixedImpute__ValuesAssignment_2)
	{ after(grammarAccess.getFixedImputeAccess().getValuesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValueList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueList__Group_1__0__Impl
	rule__ValueList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueListAccess().getLeftSquareBracketKeyword_1_0()); }
	'['
	{ after(grammarAccess.getValueListAccess().getLeftSquareBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueList__Group_1__1__Impl
	rule__ValueList__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueListAccess().getGroup_1_1()); }
	(rule__ValueList__Group_1_1__0)?
	{ after(grammarAccess.getValueListAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueList__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueList__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueList__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueListAccess().getRightSquareBracketKeyword_1_2()); }
	']'
	{ after(grammarAccess.getValueListAccess().getRightSquareBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValueList__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueList__Group_1_1__0__Impl
	rule__ValueList__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueList__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueListAccess().getValuesAssignment_1_1_0()); }
	(rule__ValueList__ValuesAssignment_1_1_0)
	{ after(grammarAccess.getValueListAccess().getValuesAssignment_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueList__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueList__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueList__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueListAccess().getGroup_1_1_1()); }
	(rule__ValueList__Group_1_1_1__0)*
	{ after(grammarAccess.getValueListAccess().getGroup_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValueList__Group_1_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueList__Group_1_1_1__0__Impl
	rule__ValueList__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueList__Group_1_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueListAccess().getCommaKeyword_1_1_1_0()); }
	','
	{ after(grammarAccess.getValueListAccess().getCommaKeyword_1_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueList__Group_1_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueList__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueList__Group_1_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueListAccess().getValuesAssignment_1_1_1_1()); }
	(rule__ValueList__ValuesAssignment_1_1_1_1)
	{ after(grammarAccess.getValueListAccess().getValuesAssignment_1_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdvancedImpute__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdvancedImpute__Group_0__0__Impl
	rule__AdvancedImpute__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdvancedImpute__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdvancedImputeAccess().getInterpolationKeyword_0_0()); }
	'interpolation'
	{ after(grammarAccess.getAdvancedImputeAccess().getInterpolationKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdvancedImpute__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdvancedImpute__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdvancedImpute__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdvancedImputeAccess().getTypeAssignment_0_1()); }
	(rule__AdvancedImpute__TypeAssignment_0_1)?
	{ after(grammarAccess.getAdvancedImputeAccess().getTypeAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdvancedImpute__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdvancedImpute__Group_1__0__Impl
	rule__AdvancedImpute__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdvancedImpute__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdvancedImputeAccess().getMoving_averageKeyword_1_0()); }
	'moving_average'
	{ after(grammarAccess.getAdvancedImputeAccess().getMoving_averageKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdvancedImpute__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdvancedImpute__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdvancedImpute__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdvancedImputeAccess().getGroup_1_1()); }
	(rule__AdvancedImpute__Group_1_1__0)?
	{ after(grammarAccess.getAdvancedImputeAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdvancedImpute__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdvancedImpute__Group_1_1__0__Impl
	rule__AdvancedImpute__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdvancedImpute__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdvancedImputeAccess().getWindowKeyword_1_1_0()); }
	'window'
	{ after(grammarAccess.getAdvancedImputeAccess().getWindowKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdvancedImpute__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdvancedImpute__Group_1_1__1__Impl
	rule__AdvancedImpute__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AdvancedImpute__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdvancedImputeAccess().getEqualsSignKeyword_1_1_1()); }
	'='
	{ after(grammarAccess.getAdvancedImputeAccess().getEqualsSignKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdvancedImpute__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdvancedImpute__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdvancedImpute__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdvancedImputeAccess().getWindowSizeAssignment_1_1_2()); }
	(rule__AdvancedImpute__WindowSizeAssignment_1_1_2)
	{ after(grammarAccess.getAdvancedImputeAccess().getWindowSizeAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdvancedImpute__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdvancedImpute__Group_3__0__Impl
	rule__AdvancedImpute__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdvancedImpute__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdvancedImputeAccess().getPolynomialKeyword_3_0()); }
	'polynomial'
	{ after(grammarAccess.getAdvancedImputeAccess().getPolynomialKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdvancedImpute__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdvancedImpute__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdvancedImpute__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdvancedImputeAccess().getGroup_3_1()); }
	(rule__AdvancedImpute__Group_3_1__0)?
	{ after(grammarAccess.getAdvancedImputeAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdvancedImpute__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdvancedImpute__Group_3_1__0__Impl
	rule__AdvancedImpute__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdvancedImpute__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdvancedImputeAccess().getDegreeKeyword_3_1_0()); }
	'degree'
	{ after(grammarAccess.getAdvancedImputeAccess().getDegreeKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdvancedImpute__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdvancedImpute__Group_3_1__1__Impl
	rule__AdvancedImpute__Group_3_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AdvancedImpute__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdvancedImputeAccess().getEqualsSignKeyword_3_1_1()); }
	'='
	{ after(grammarAccess.getAdvancedImputeAccess().getEqualsSignKeyword_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdvancedImpute__Group_3_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdvancedImpute__Group_3_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdvancedImpute__Group_3_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdvancedImputeAccess().getDegreeAssignment_3_1_2()); }
	(rule__AdvancedImpute__DegreeAssignment_3_1_2)
	{ after(grammarAccess.getAdvancedImputeAccess().getDegreeAssignment_3_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutlierTreatment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutlierTreatment__Group__0__Impl
	rule__OutlierTreatment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutlierTreatment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutlierTreatmentAccess().getOutliersKeyword_0()); }
	'outliers'
	{ after(grammarAccess.getOutlierTreatmentAccess().getOutliersKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutlierTreatment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutlierTreatment__Group__1__Impl
	rule__OutlierTreatment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OutlierTreatment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutlierTreatmentAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getOutlierTreatmentAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutlierTreatment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutlierTreatment__Group__2__Impl
	rule__OutlierTreatment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OutlierTreatment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutlierTreatmentAccess().getColumnsAssignment_2()); }
	(rule__OutlierTreatment__ColumnsAssignment_2)
	{ after(grammarAccess.getOutlierTreatmentAccess().getColumnsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutlierTreatment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutlierTreatment__Group__3__Impl
	rule__OutlierTreatment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OutlierTreatment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutlierTreatmentAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getOutlierTreatmentAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutlierTreatment__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutlierTreatment__Group__4__Impl
	rule__OutlierTreatment__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__OutlierTreatment__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutlierTreatmentAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getOutlierTreatmentAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutlierTreatment__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutlierTreatment__Group__5__Impl
	rule__OutlierTreatment__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__OutlierTreatment__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutlierTreatmentAccess().getStrategyAssignment_5()); }
	(rule__OutlierTreatment__StrategyAssignment_5)
	{ after(grammarAccess.getOutlierTreatmentAccess().getStrategyAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutlierTreatment__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutlierTreatment__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutlierTreatment__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutlierTreatmentAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getOutlierTreatmentAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutlierStrategy__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutlierStrategy__Group__0__Impl
	rule__OutlierStrategy__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutlierStrategy__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutlierStrategyAccess().getReplacementAssignment_0()); }
	(rule__OutlierStrategy__ReplacementAssignment_0)
	{ after(grammarAccess.getOutlierStrategyAccess().getReplacementAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutlierStrategy__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutlierStrategy__Group__1__Impl
	rule__OutlierStrategy__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OutlierStrategy__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutlierStrategyAccess().getMethodAssignment_1()); }
	(rule__OutlierStrategy__MethodAssignment_1)
	{ after(grammarAccess.getOutlierStrategyAccess().getMethodAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutlierStrategy__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutlierStrategy__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutlierStrategy__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutlierStrategyAccess().getOptionsAssignment_2()); }
	(rule__OutlierStrategy__OptionsAssignment_2)?
	{ after(grammarAccess.getOutlierStrategyAccess().getOptionsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReplacementStrategy__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplacementStrategy__Group_3__0__Impl
	rule__ReplacementStrategy__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplacementStrategy__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplacementStrategyAccess().getReplace_withKeyword_3_0()); }
	'replace_with'
	{ after(grammarAccess.getReplacementStrategyAccess().getReplace_withKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplacementStrategy__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplacementStrategy__Group_3__1__Impl
	rule__ReplacementStrategy__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplacementStrategy__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplacementStrategyAccess().getEqualsSignKeyword_3_1()); }
	'='
	{ after(grammarAccess.getReplacementStrategyAccess().getEqualsSignKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplacementStrategy__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplacementStrategy__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplacementStrategy__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplacementStrategyAccess().getValueAssignment_3_2()); }
	(rule__ReplacementStrategy__ValueAssignment_3_2)
	{ after(grammarAccess.getReplacementStrategyAccess().getValueAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IQRMethod__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IQRMethod__Group__0__Impl
	rule__IQRMethod__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IQRMethod__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIQRMethodAccess().getIqrKeyword_0()); }
	'iqr'
	{ after(grammarAccess.getIQRMethodAccess().getIqrKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IQRMethod__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IQRMethod__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IQRMethod__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIQRMethodAccess().getParamsAssignment_1()); }
	(rule__IQRMethod__ParamsAssignment_1)?
	{ after(grammarAccess.getIQRMethodAccess().getParamsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IQRParams__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IQRParams__Group_0__0__Impl
	rule__IQRParams__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IQRParams__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIQRParamsAccess().getScalarKeyword_0_0()); }
	'scalar'
	{ after(grammarAccess.getIQRParamsAccess().getScalarKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IQRParams__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IQRParams__Group_0__1__Impl
	rule__IQRParams__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IQRParams__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIQRParamsAccess().getEqualsSignKeyword_0_1()); }
	'='
	{ after(grammarAccess.getIQRParamsAccess().getEqualsSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IQRParams__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IQRParams__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IQRParams__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIQRParamsAccess().getScalarAssignment_0_2()); }
	(rule__IQRParams__ScalarAssignment_0_2)
	{ after(grammarAccess.getIQRParamsAccess().getScalarAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IQRParams__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IQRParams__Group_1__0__Impl
	rule__IQRParams__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IQRParams__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIQRParamsAccess().getEstimationKeyword_1_0()); }
	'estimation'
	{ after(grammarAccess.getIQRParamsAccess().getEstimationKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IQRParams__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IQRParams__Group_1__1__Impl
	rule__IQRParams__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IQRParams__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIQRParamsAccess().getEqualsSignKeyword_1_1()); }
	'='
	{ after(grammarAccess.getIQRParamsAccess().getEqualsSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IQRParams__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IQRParams__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IQRParams__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIQRParamsAccess().getEstimationAssignment_1_2()); }
	(rule__IQRParams__EstimationAssignment_1_2)
	{ after(grammarAccess.getIQRParamsAccess().getEstimationAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ZScoreMethod__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ZScoreMethod__Group__0__Impl
	rule__ZScoreMethod__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ZScoreMethod__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getZScoreMethodAccess().getZscoreKeyword_0()); }
	'zscore'
	{ after(grammarAccess.getZScoreMethodAccess().getZscoreKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZScoreMethod__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ZScoreMethod__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ZScoreMethod__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getZScoreMethodAccess().getGroup_1()); }
	(rule__ZScoreMethod__Group_1__0)?
	{ after(grammarAccess.getZScoreMethodAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ZScoreMethod__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ZScoreMethod__Group_1__0__Impl
	rule__ZScoreMethod__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ZScoreMethod__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getZScoreMethodAccess().getThresholdKeyword_1_0()); }
	'threshold'
	{ after(grammarAccess.getZScoreMethodAccess().getThresholdKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZScoreMethod__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ZScoreMethod__Group_1__1__Impl
	rule__ZScoreMethod__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ZScoreMethod__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getZScoreMethodAccess().getEqualsSignKeyword_1_1()); }
	'='
	{ after(grammarAccess.getZScoreMethodAccess().getEqualsSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZScoreMethod__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ZScoreMethod__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ZScoreMethod__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getZScoreMethodAccess().getThresholdAssignment_1_2()); }
	(rule__ZScoreMethod__ThresholdAssignment_1_2)
	{ after(grammarAccess.getZScoreMethodAccess().getThresholdAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PercentileMethod__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PercentileMethod__Group__0__Impl
	rule__PercentileMethod__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PercentileMethod__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPercentileMethodAccess().getPercentileKeyword_0()); }
	'percentile'
	{ after(grammarAccess.getPercentileMethodAccess().getPercentileKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PercentileMethod__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PercentileMethod__Group__1__Impl
	rule__PercentileMethod__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PercentileMethod__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPercentileMethodAccess().getLowerKeyword_1()); }
	'lower'
	{ after(grammarAccess.getPercentileMethodAccess().getLowerKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PercentileMethod__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PercentileMethod__Group__2__Impl
	rule__PercentileMethod__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PercentileMethod__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPercentileMethodAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getPercentileMethodAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PercentileMethod__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PercentileMethod__Group__3__Impl
	rule__PercentileMethod__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PercentileMethod__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPercentileMethodAccess().getLowerAssignment_3()); }
	(rule__PercentileMethod__LowerAssignment_3)
	{ after(grammarAccess.getPercentileMethodAccess().getLowerAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PercentileMethod__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PercentileMethod__Group__4__Impl
	rule__PercentileMethod__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PercentileMethod__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPercentileMethodAccess().getUpperKeyword_4()); }
	'upper'
	{ after(grammarAccess.getPercentileMethodAccess().getUpperKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PercentileMethod__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PercentileMethod__Group__5__Impl
	rule__PercentileMethod__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__PercentileMethod__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPercentileMethodAccess().getEqualsSignKeyword_5()); }
	'='
	{ after(grammarAccess.getPercentileMethodAccess().getEqualsSignKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PercentileMethod__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PercentileMethod__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PercentileMethod__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPercentileMethodAccess().getUpperAssignment_6()); }
	(rule__PercentileMethod__UpperAssignment_6)
	{ after(grammarAccess.getPercentileMethodAccess().getUpperAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutlierOptions__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutlierOptions__Group__0__Impl
	rule__OutlierOptions__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutlierOptions__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutlierOptionsAccess().getScopeKeyword_0()); }
	'scope'
	{ after(grammarAccess.getOutlierOptionsAccess().getScopeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutlierOptions__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutlierOptions__Group__1__Impl
	rule__OutlierOptions__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OutlierOptions__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutlierOptionsAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getOutlierOptionsAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutlierOptions__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutlierOptions__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutlierOptions__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutlierOptionsAccess().getScopeAssignment_2()); }
	(rule__OutlierOptions__ScopeAssignment_2)
	{ after(grammarAccess.getOutlierOptionsAccess().getScopeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Join__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Join__Group__0__Impl
	rule__Join__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinAccess().getJoinKeyword_0()); }
	'join'
	{ after(grammarAccess.getJoinAccess().getJoinKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Join__Group__1__Impl
	rule__Join__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getJoinAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Join__Group__2__Impl
	rule__Join__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinAccess().getLeftAssignment_2()); }
	(rule__Join__LeftAssignment_2)
	{ after(grammarAccess.getJoinAccess().getLeftAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Join__Group__3__Impl
	rule__Join__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getJoinAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Join__Group__4__Impl
	rule__Join__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinAccess().getRightAssignment_4()); }
	(rule__Join__RightAssignment_4)
	{ after(grammarAccess.getJoinAccess().getRightAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Join__Group__5__Impl
	rule__Join__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getJoinAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Join__Group__6__Impl
	rule__Join__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinAccess().getLeftCurlyBracketKeyword_6()); }
	'{'
	{ after(grammarAccess.getJoinAccess().getLeftCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Join__Group__7__Impl
	rule__Join__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinAccess().getSpecAssignment_7()); }
	(rule__Join__SpecAssignment_7)
	{ after(grammarAccess.getJoinAccess().getSpecAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Join__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getJoinAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JoinSpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinSpec__Group__0__Impl
	rule__JoinSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinSpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinSpecAccess().getTypeAssignment_0()); }
	(rule__JoinSpec__TypeAssignment_0)
	{ after(grammarAccess.getJoinSpecAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinSpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinSpec__Group__1__Impl
	rule__JoinSpec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinSpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinSpecAccess().getOnKeyword_1()); }
	'on'
	{ after(grammarAccess.getJoinSpecAccess().getOnKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinSpec__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinSpec__Group__2__Impl
	rule__JoinSpec__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinSpec__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinSpecAccess().getConditionsAssignment_2()); }
	(rule__JoinSpec__ConditionsAssignment_2)
	{ after(grammarAccess.getJoinSpecAccess().getConditionsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinSpec__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinSpec__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinSpec__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinSpecAccess().getOptionsAssignment_3()); }
	(rule__JoinSpec__OptionsAssignment_3)?
	{ after(grammarAccess.getJoinSpecAccess().getOptionsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JoinConditions__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinConditions__Group__0__Impl
	rule__JoinConditions__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinConditions__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinConditionsAccess().getConditionsAssignment_0()); }
	(rule__JoinConditions__ConditionsAssignment_0)
	{ after(grammarAccess.getJoinConditionsAccess().getConditionsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinConditions__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinConditions__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinConditions__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinConditionsAccess().getGroup_1()); }
	(rule__JoinConditions__Group_1__0)*
	{ after(grammarAccess.getJoinConditionsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JoinConditions__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinConditions__Group_1__0__Impl
	rule__JoinConditions__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinConditions__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinConditionsAccess().getAndKeyword_1_0()); }
	'and'
	{ after(grammarAccess.getJoinConditionsAccess().getAndKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinConditions__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinConditions__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinConditions__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinConditionsAccess().getConditionsAssignment_1_1()); }
	(rule__JoinConditions__ConditionsAssignment_1_1)
	{ after(grammarAccess.getJoinConditionsAccess().getConditionsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JoinCondition__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinCondition__Group_0__0__Impl
	rule__JoinCondition__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinCondition__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinConditionAccess().getLeftAssignment_0_0()); }
	(rule__JoinCondition__LeftAssignment_0_0)
	{ after(grammarAccess.getJoinConditionAccess().getLeftAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinCondition__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinCondition__Group_0__1__Impl
	rule__JoinCondition__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinCondition__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinConditionAccess().getEqualsSignKeyword_0_1()); }
	'='
	{ after(grammarAccess.getJoinConditionAccess().getEqualsSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinCondition__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinCondition__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinCondition__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinConditionAccess().getRightAssignment_0_2()); }
	(rule__JoinCondition__RightAssignment_0_2)
	{ after(grammarAccess.getJoinConditionAccess().getRightAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JoinCondition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinCondition__Group_1__0__Impl
	rule__JoinCondition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinCondition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinConditionAccess().getLeftAssignment_1_0()); }
	(rule__JoinCondition__LeftAssignment_1_0)
	{ after(grammarAccess.getJoinConditionAccess().getLeftAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinCondition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinCondition__Group_1__1__Impl
	rule__JoinCondition__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinCondition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinConditionAccess().getComparatorAssignment_1_1()); }
	(rule__JoinCondition__ComparatorAssignment_1_1)
	{ after(grammarAccess.getJoinConditionAccess().getComparatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinCondition__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinCondition__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinCondition__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinConditionAccess().getRightAssignment_1_2()); }
	(rule__JoinCondition__RightAssignment_1_2)
	{ after(grammarAccess.getJoinConditionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JoinOptions__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinOptions__Group__0__Impl
	rule__JoinOptions__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinOptions__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinOptionsAccess().getSuffixKeyword_0()); }
	'suffix'
	{ after(grammarAccess.getJoinOptionsAccess().getSuffixKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinOptions__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinOptions__Group__1__Impl
	rule__JoinOptions__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinOptions__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinOptionsAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getJoinOptionsAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinOptions__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinOptions__Group__2__Impl
	rule__JoinOptions__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinOptions__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinOptionsAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getJoinOptionsAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinOptions__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinOptions__Group__3__Impl
	rule__JoinOptions__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinOptions__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinOptionsAccess().getLeftSuffixAssignment_3()); }
	(rule__JoinOptions__LeftSuffixAssignment_3)
	{ after(grammarAccess.getJoinOptionsAccess().getLeftSuffixAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinOptions__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinOptions__Group__4__Impl
	rule__JoinOptions__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinOptions__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinOptionsAccess().getCommaKeyword_4()); }
	','
	{ after(grammarAccess.getJoinOptionsAccess().getCommaKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinOptions__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinOptions__Group__5__Impl
	rule__JoinOptions__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinOptions__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinOptionsAccess().getRightSuffixAssignment_5()); }
	(rule__JoinOptions__RightSuffixAssignment_5)
	{ after(grammarAccess.getJoinOptionsAccess().getRightSuffixAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinOptions__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinOptions__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinOptions__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinOptionsAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getJoinOptionsAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Column__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group_1__0__Impl
	rule__Column__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getTableAssignment_1_0()); }
	(rule__Column__TableAssignment_1_0)
	{ after(grammarAccess.getColumnAccess().getTableAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group_1__1__Impl
	rule__Column__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getFullStopKeyword_1_1()); }
	'.'
	{ after(grammarAccess.getColumnAccess().getFullStopKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getColumnAssignment_1_2()); }
	(rule__Column__ColumnAssignment_1_2)
	{ after(grammarAccess.getColumnAccess().getColumnAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ColumnList__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnList__Group_0__0__Impl
	rule__ColumnList__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnList__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnListAccess().getColumnsAssignment_0_0()); }
	(rule__ColumnList__ColumnsAssignment_0_0)
	{ after(grammarAccess.getColumnListAccess().getColumnsAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnList__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnList__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnList__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnListAccess().getGroup_0_1()); }
	(rule__ColumnList__Group_0_1__0)*
	{ after(grammarAccess.getColumnListAccess().getGroup_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ColumnList__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnList__Group_0_1__0__Impl
	rule__ColumnList__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnList__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnListAccess().getCommaKeyword_0_1_0()); }
	','
	{ after(grammarAccess.getColumnListAccess().getCommaKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnList__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnList__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnList__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnListAccess().getColumnsAssignment_0_1_1()); }
	(rule__ColumnList__ColumnsAssignment_0_1_1)
	{ after(grammarAccess.getColumnListAccess().getColumnsAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group_0__0__Impl
	rule__Number__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getINTTerminalRuleCall_0_0()); }
	RULE_INT
	{ after(grammarAccess.getNumberAccess().getINTTerminalRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getGroup_0_1()); }
	(rule__Number__Group_0_1__0)?
	{ after(grammarAccess.getNumberAccess().getGroup_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group_0_1__0__Impl
	rule__Number__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getFullStopKeyword_0_1_0()); }
	'.'
	{ after(grammarAccess.getNumberAccess().getFullStopKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getINTTerminalRuleCall_0_1_1()); }
	RULE_INT
	{ after(grammarAccess.getNumberAccess().getINTTerminalRuleCall_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group_1__0__Impl
	rule__Number__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getNumberAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1()); }
	RULE_INT
	{ after(grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Regex__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Regex__Group__0__Impl
	rule__Regex__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Regex__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegexAccess().getSolidusKeyword_0()); }
	'/'
	{ after(grammarAccess.getRegexAccess().getSolidusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Regex__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Regex__Group__1__Impl
	rule__Regex__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Regex__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegexAccess().getPatternAssignment_1()); }
	(rule__Regex__PatternAssignment_1)
	{ after(grammarAccess.getRegexAccess().getPatternAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Regex__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Regex__Group__2__Impl
	rule__Regex__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Regex__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegexAccess().getSolidusKeyword_2()); }
	'/'
	{ after(grammarAccess.getRegexAccess().getSolidusKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Regex__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Regex__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Regex__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegexAccess().getFlagsAssignment_3()); }
	(rule__Regex__FlagsAssignment_3)?
	{ after(grammarAccess.getRegexAccess().getFlagsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Workflow__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWorkflowAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getWorkflowAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__SourceAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWorkflowAccess().getSourceDataSourceParserRuleCall_3_0()); }
		ruleDataSource
		{ after(grammarAccess.getWorkflowAccess().getSourceDataSourceParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__BodyAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWorkflowAccess().getBodyWorkflowBodyParserRuleCall_4_0()); }
		ruleWorkflowBody
		{ after(grammarAccess.getWorkflowAccess().getBodyWorkflowBodyParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataSourceAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDataSourceAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__ReaderAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataSourceAccess().getReaderDataReaderParserRuleCall_3_0()); }
		ruleDataReader
		{ after(grammarAccess.getDataSourceAccess().getReaderDataReaderParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CSVReader__FilePathAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCSVReaderAccess().getFilePathFilePathParserRuleCall_2_0()); }
		ruleFilePath
		{ after(grammarAccess.getCSVReaderAccess().getFilePathFilePathParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CSVReader__DelimiterAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCSVReaderAccess().getDelimiterDelimiterParserRuleCall_3_1_0()); }
		ruleDelimiter
		{ after(grammarAccess.getCSVReaderAccess().getDelimiterDelimiterParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FileReader__FilePathAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFileReaderAccess().getFilePathFilePathParserRuleCall_2_0()); }
		ruleFilePath
		{ after(grammarAccess.getFileReaderAccess().getFilePathFilePathParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilePath__PathAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilePathAccess().getPathSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getFilePathAccess().getPathSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delimiter__ValueAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDelimiterAccess().getValueSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getDelimiterAccess().getValueSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkflowBody__StepsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWorkflowBodyAccess().getStepsStepParserRuleCall_0()); }
		ruleStep
		{ after(grammarAccess.getWorkflowBodyAccess().getStepsStepParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getStepAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__TransformationAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepAccess().getTransformationTransformationParserRuleCall_2_0()); }
		ruleTransformation
		{ after(grammarAccess.getStepAccess().getTransformationTransformationParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__TargetAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepAccess().getTargetIDTerminalRuleCall_3_1_0()); }
		RULE_ID
		{ after(grammarAccess.getStepAccess().getTargetIDTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__ContractsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepAccess().getContractsContractBlockParserRuleCall_4_0()); }
		ruleContractBlock
		{ after(grammarAccess.getStepAccess().getContractsContractBlockParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractBlock__ContractsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContractBlockAccess().getContractsContractParserRuleCall_2_0()); }
		ruleContract
		{ after(grammarAccess.getContractBlockAccess().getContractsContractParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Precondition__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreconditionAccess().getNameContractNameParserRuleCall_1_0()); }
		ruleContractName
		{ after(grammarAccess.getPreconditionAccess().getNameContractNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Precondition__BodyAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreconditionAccess().getBodyContractBodyParserRuleCall_3_0()); }
		ruleContractBody
		{ after(grammarAccess.getPreconditionAccess().getBodyContractBodyParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postcondition__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostconditionAccess().getNameContractNameParserRuleCall_1_0()); }
		ruleContractName
		{ after(grammarAccess.getPostconditionAccess().getNameContractNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postcondition__BodyAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostconditionAccess().getBodyContractBodyParserRuleCall_3_0()); }
		ruleContractBody
		{ after(grammarAccess.getPostconditionAccess().getBodyContractBodyParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInvariantAccess().getNameContractNameParserRuleCall_1_0()); }
		ruleContractName
		{ after(grammarAccess.getInvariantAccess().getNameContractNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__BodyAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInvariantAccess().getBodyContractBodyParserRuleCall_3_0()); }
		ruleContractBody
		{ after(grammarAccess.getInvariantAccess().getBodyContractBodyParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractName__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContractNameAccess().getNameSTRINGTerminalRuleCall_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getContractNameAccess().getNameSTRINGTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractName__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContractNameAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getContractNameAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractBody__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContractBodyAccess().getTypeContractTypeParserRuleCall_0()); }
		ruleContractType
		{ after(grammarAccess.getContractBodyAccess().getTypeContractTypeParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueRangeContract__FieldAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueRangeContractAccess().getFieldContractFieldParserRuleCall_2_0()); }
		ruleContractField
		{ after(grammarAccess.getValueRangeContractAccess().getFieldContractFieldParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueRangeContract__ValueAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueRangeContractAccess().getValueContractValueParserRuleCall_4_0()); }
		ruleContractValue
		{ after(grammarAccess.getValueRangeContractAccess().getValueContractValueParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractField__ColumnAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContractFieldAccess().getColumnColumnParserRuleCall_0_2_0()); }
		ruleColumn
		{ after(grammarAccess.getContractFieldAccess().getColumnColumnParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractField__ColumnAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContractFieldAccess().getColumnColumnParserRuleCall_1_2_0()); }
		ruleColumn
		{ after(grammarAccess.getContractFieldAccess().getColumnColumnParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractValue__TypeAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContractValueAccess().getTypeTypeParserRuleCall_0_1_0()); }
		ruleType
		{ after(grammarAccess.getContractValueAccess().getTypeTypeParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractValue__BoundsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContractValueAccess().getBoundsRangeBoundsParserRuleCall_1_1_0()); }
		ruleRangeBounds
		{ after(grammarAccess.getContractValueAccess().getBoundsRangeBoundsParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractValue__ValueAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContractValueAccess().getValueValueParserRuleCall_2_1_0()); }
		ruleValue
		{ after(grammarAccess.getContractValueAccess().getValueValueParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionContract__IfClauseAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionContractAccess().getIfClauseIfClauseParserRuleCall_2_0()); }
		ruleIfClause
		{ after(grammarAccess.getConditionContractAccess().getIfClauseIfClauseParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionContract__ThenClauseAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionContractAccess().getThenClauseThenClauseParserRuleCall_3_0()); }
		ruleThenClause
		{ after(grammarAccess.getConditionContractAccess().getThenClauseThenClauseParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfClause__FieldAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfClauseAccess().getFieldContractFieldParserRuleCall_1_0()); }
		ruleContractField
		{ after(grammarAccess.getIfClauseAccess().getFieldContractFieldParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfClause__OpAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfClauseAccess().getOpBelongOpParserRuleCall_2_0()); }
		ruleBelongOp
		{ after(grammarAccess.getIfClauseAccess().getOpBelongOpParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfClause__ConditionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfClauseAccess().getConditionDataConditionParserRuleCall_3_0()); }
		ruleDataCondition
		{ after(grammarAccess.getIfClauseAccess().getConditionDataConditionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ThenClause__FieldAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThenClauseAccess().getFieldContractFieldParserRuleCall_1_0()); }
		ruleContractField
		{ after(grammarAccess.getThenClauseAccess().getFieldContractFieldParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ThenClause__OpAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThenClauseAccess().getOpBelongOpParserRuleCall_2_0()); }
		ruleBelongOp
		{ after(grammarAccess.getThenClauseAccess().getOpBelongOpParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ThenClause__ResultAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThenClauseAccess().getResultDataResultParserRuleCall_3_0()); }
		ruleDataResult
		{ after(grammarAccess.getThenClauseAccess().getResultDataResultParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastTypeCheck__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCastTypeCheckAccess().getTypeTypeParserRuleCall_1_0()); }
		ruleType
		{ after(grammarAccess.getCastTypeCheckAccess().getTypeTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueCheck__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueCheckAccess().getValueValueParserRuleCall_1_0()); }
		ruleValue
		{ after(grammarAccess.getValueCheckAccess().getValueValueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialValueContract__FieldAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecialValueContractAccess().getFieldContractFieldParserRuleCall_0_2_0()); }
		ruleContractField
		{ after(grammarAccess.getSpecialValueContractAccess().getFieldContractFieldParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialValueContract__FieldAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecialValueContractAccess().getFieldContractFieldParserRuleCall_1_2_0()); }
		ruleContractField
		{ after(grammarAccess.getSpecialValueContractAccess().getFieldContractFieldParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastTypeContract__TypeAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCastTypeContractAccess().getTypeTypeParserRuleCall_0_1_0()); }
		ruleType
		{ after(grammarAccess.getCastTypeContractAccess().getTypeTypeParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastTypeContract__FieldAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCastTypeContractAccess().getFieldContractFieldParserRuleCall_0_3_0()); }
		ruleContractField
		{ after(grammarAccess.getCastTypeContractAccess().getFieldContractFieldParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastTypeContract__TypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCastTypeContractAccess().getTypeTypeParserRuleCall_1_1_0()); }
		ruleType
		{ after(grammarAccess.getCastTypeContractAccess().getTypeTypeParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastTypeContract__FieldAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCastTypeContractAccess().getFieldContractFieldParserRuleCall_1_3_0()); }
		ruleContractField
		{ after(grammarAccess.getCastTypeContractAccess().getFieldContractFieldParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RowFilter__ConditionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRowFilterAccess().getConditionFilterConditionParserRuleCall_2_0()); }
		ruleFilterCondition
		{ after(grammarAccess.getRowFilterAccess().getConditionFilterConditionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissingFilter__ColumnsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMissingFilterAccess().getColumnsColumnListParserRuleCall_2_0()); }
		ruleColumnList
		{ after(grammarAccess.getMissingFilterAccess().getColumnsColumnListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissingFilter__IncludeExcludeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMissingFilterAccess().getIncludeExcludeIncludeExcludeParserRuleCall_4_0()); }
		ruleIncludeExclude
		{ after(grammarAccess.getMissingFilterAccess().getIncludeExcludeIncludeExcludeParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeFilter__ColumnAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeFilterAccess().getColumnColumnParserRuleCall_2_0()); }
		ruleColumn
		{ after(grammarAccess.getRangeFilterAccess().getColumnColumnParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeFilter__BoundsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeFilterAccess().getBoundsRangeBoundsParserRuleCall_4_0()); }
		ruleRangeBounds
		{ after(grammarAccess.getRangeFilterAccess().getBoundsRangeBoundsParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeFilter__IncludeExcludeAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeFilterAccess().getIncludeExcludeIncludeExcludeParserRuleCall_6_0()); }
		ruleIncludeExclude
		{ after(grammarAccess.getRangeFilterAccess().getIncludeExcludeIncludeExcludeParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__LowerAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeBoundsAccess().getLowerBoundValueParserRuleCall_0_1_0()); }
		ruleBoundValue
		{ after(grammarAccess.getRangeBoundsAccess().getLowerBoundValueParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__UpperAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeBoundsAccess().getUpperBoundValueParserRuleCall_0_3_0()); }
		ruleBoundValue
		{ after(grammarAccess.getRangeBoundsAccess().getUpperBoundValueParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__LowerAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeBoundsAccess().getLowerBoundValueParserRuleCall_1_1_0()); }
		ruleBoundValue
		{ after(grammarAccess.getRangeBoundsAccess().getLowerBoundValueParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__UpperAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeBoundsAccess().getUpperBoundValueParserRuleCall_1_3_0()); }
		ruleBoundValue
		{ after(grammarAccess.getRangeBoundsAccess().getUpperBoundValueParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__LowerAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeBoundsAccess().getLowerBoundValueParserRuleCall_2_1_0()); }
		ruleBoundValue
		{ after(grammarAccess.getRangeBoundsAccess().getLowerBoundValueParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__UpperAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeBoundsAccess().getUpperBoundValueParserRuleCall_2_3_0()); }
		ruleBoundValue
		{ after(grammarAccess.getRangeBoundsAccess().getUpperBoundValueParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__LowerAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeBoundsAccess().getLowerBoundValueParserRuleCall_3_1_0()); }
		ruleBoundValue
		{ after(grammarAccess.getRangeBoundsAccess().getLowerBoundValueParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeBounds__UpperAssignment_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeBoundsAccess().getUpperBoundValueParserRuleCall_3_3_0()); }
		ruleBoundValue
		{ after(grammarAccess.getRangeBoundsAccess().getUpperBoundValueParserRuleCall_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundValue__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoundValueAccess().getValueNumberParserRuleCall_0_0()); }
		ruleNumber
		{ after(grammarAccess.getBoundValueAccess().getValueNumberParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFilter__ColumnAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringFilterAccess().getColumnColumnParserRuleCall_0_2_0()); }
		ruleColumn
		{ after(grammarAccess.getStringFilterAccess().getColumnColumnParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFilter__PatternAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringFilterAccess().getPatternPatternParserRuleCall_0_4_0()); }
		rulePattern
		{ after(grammarAccess.getStringFilterAccess().getPatternPatternParserRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFilter__IncludeExcludeAssignment_0_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringFilterAccess().getIncludeExcludeIncludeExcludeParserRuleCall_0_6_0()); }
		ruleIncludeExclude
		{ after(grammarAccess.getStringFilterAccess().getIncludeExcludeIncludeExcludeParserRuleCall_0_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFilter__ColumnAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringFilterAccess().getColumnColumnParserRuleCall_1_2_0()); }
		ruleColumn
		{ after(grammarAccess.getStringFilterAccess().getColumnColumnParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFilter__PatternAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringFilterAccess().getPatternPatternParserRuleCall_1_4_0()); }
		rulePattern
		{ after(grammarAccess.getStringFilterAccess().getPatternPatternParserRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFilter__IncludeExcludeAssignment_1_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringFilterAccess().getIncludeExcludeIncludeExcludeParserRuleCall_1_6_0()); }
		ruleIncludeExclude
		{ after(grammarAccess.getStringFilterAccess().getIncludeExcludeIncludeExcludeParserRuleCall_1_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternAccess().getValueSTRINGTerminalRuleCall_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getPatternAccess().getValueSTRINGTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__RegexAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternAccess().getRegexRegexParserRuleCall_1_0()); }
		ruleRegex
		{ after(grammarAccess.getPatternAccess().getRegexRegexParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnFilter__ColumnsAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnFilterAccess().getColumnsColumnListParserRuleCall_0_2_0()); }
		ruleColumnList
		{ after(grammarAccess.getColumnFilterAccess().getColumnsColumnListParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnFilter__ColumnsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnFilterAccess().getColumnsColumnListParserRuleCall_1_2_0()); }
		ruleColumnList
		{ after(grammarAccess.getColumnFilterAccess().getColumnsColumnListParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnFilter__ColumnsAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnFilterAccess().getColumnsColumnListParserRuleCall_2_2_0()); }
		ruleColumnList
		{ after(grammarAccess.getColumnFilterAccess().getColumnsColumnListParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnFilter__ColumnsAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnFilterAccess().getColumnsColumnListParserRuleCall_3_2_0()); }
		ruleColumnList
		{ after(grammarAccess.getColumnFilterAccess().getColumnsColumnListParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueMapping__ColumnAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueMappingAccess().getColumnColumnParserRuleCall_2_0()); }
		ruleColumn
		{ after(grammarAccess.getValueMappingAccess().getColumnColumnParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueMapping__RulesAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueMappingAccess().getRulesMappingRulesParserRuleCall_5_0()); }
		ruleMappingRules
		{ after(grammarAccess.getValueMappingAccess().getRulesMappingRulesParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueMapping__ModeAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueMappingAccess().getModeMappingModeParserRuleCall_7_0()); }
		ruleMappingMode
		{ after(grammarAccess.getValueMappingAccess().getModeMappingModeParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingRules__RulesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingRulesAccess().getRulesMappingRuleParserRuleCall_0_0()); }
		ruleMappingRule
		{ after(grammarAccess.getMappingRulesAccess().getRulesMappingRuleParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingRules__RulesAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingRulesAccess().getRulesMappingRuleParserRuleCall_1_1_0()); }
		ruleMappingRule
		{ after(grammarAccess.getMappingRulesAccess().getRulesMappingRuleParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingRule__FromAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingRuleAccess().getFromSTRINGTerminalRuleCall_0_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getMappingRuleAccess().getFromSTRINGTerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingRule__ToAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingRuleAccess().getToSTRINGTerminalRuleCall_0_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getMappingRuleAccess().getToSTRINGTerminalRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingRule__PatternAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingRuleAccess().getPatternPatternParserRuleCall_1_0_0()); }
		rulePattern
		{ after(grammarAccess.getMappingRuleAccess().getPatternPatternParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingRule__ToAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingRuleAccess().getToSTRINGTerminalRuleCall_1_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getMappingRuleAccess().getToSTRINGTerminalRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubstringMapping__ColumnAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubstringMappingAccess().getColumnColumnParserRuleCall_2_0()); }
		ruleColumn
		{ after(grammarAccess.getSubstringMappingAccess().getColumnColumnParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubstringMapping__FromAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubstringMappingAccess().getFromSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getSubstringMappingAccess().getFromSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubstringMapping__ToAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubstringMappingAccess().getToSTRINGTerminalRuleCall_6_0()); }
		RULE_STRING
		{ after(grammarAccess.getSubstringMappingAccess().getToSTRINGTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubstringMapping__ModeAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubstringMappingAccess().getModeMappingModeParserRuleCall_8_0()); }
		ruleMappingMode
		{ after(grammarAccess.getSubstringMappingAccess().getModeMappingModeParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingMode__NewNameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingModeAccess().getNewNameIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getMappingModeAccess().getNewNameIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathOp__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathOpAccess().getExpressionMathExpressionParserRuleCall_2_0()); }
		ruleMathExpression
		{ after(grammarAccess.getMathOpAccess().getExpressionMathExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathOp__NewNameAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathOpAccess().getNewNameIDTerminalRuleCall_5_0()); }
		RULE_ID
		{ after(grammarAccess.getMathOpAccess().getNewNameIDTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathExpression__OperatorAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathExpressionAccess().getOperatorOperatorParserRuleCall_1_0_0()); }
		ruleOperator
		{ after(grammarAccess.getMathExpressionAccess().getOperatorOperatorParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathExpression__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathExpressionAccess().getRightPrimaryParserRuleCall_1_1_0()); }
		rulePrimary
		{ after(grammarAccess.getMathExpressionAccess().getRightPrimaryParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__OperandAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getOperandOperandParserRuleCall_0_0()); }
		ruleOperand
		{ after(grammarAccess.getPrimaryAccess().getOperandOperandParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ExpressionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getExpressionMathExpressionParserRuleCall_1_1_0()); }
		ruleMathExpression
		{ after(grammarAccess.getPrimaryAccess().getExpressionMathExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__CallAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getCallFunctionCallParserRuleCall_2_0()); }
		ruleFunctionCall
		{ after(grammarAccess.getPrimaryAccess().getCallFunctionCallParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__FunctionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallAccess().getFunctionFunctionParserRuleCall_0_0()); }
		ruleFunction
		{ after(grammarAccess.getFunctionCallAccess().getFunctionFunctionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__OperandsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallAccess().getOperandsOperandParserRuleCall_2_0_0()); }
		ruleOperand
		{ after(grammarAccess.getFunctionCallAccess().getOperandsOperandParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__OperandsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallAccess().getOperandsOperandParserRuleCall_2_1_1_0()); }
		ruleOperand
		{ after(grammarAccess.getFunctionCallAccess().getOperandsOperandParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__ColumnAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperandAccess().getColumnColumnParserRuleCall_0_0()); }
		ruleColumn
		{ after(grammarAccess.getOperandAccess().getColumnColumnParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__NumberAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperandAccess().getNumberNumberParserRuleCall_1_0()); }
		ruleNumber
		{ after(grammarAccess.getOperandAccess().getNumberNumberParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__StringAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperandAccess().getStringSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getOperandAccess().getStringSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binner__ColumnAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinnerAccess().getColumnColumnParserRuleCall_2_0()); }
		ruleColumn
		{ after(grammarAccess.getBinnerAccess().getColumnColumnParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binner__DefinitionsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinnerAccess().getDefinitionsBinDefinitionsParserRuleCall_5_0()); }
		ruleBinDefinitions
		{ after(grammarAccess.getBinnerAccess().getDefinitionsBinDefinitionsParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binner__ModeAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinnerAccess().getModeBinModeParserRuleCall_7_0()); }
		ruleBinMode
		{ after(grammarAccess.getBinnerAccess().getModeBinModeParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinDefinitions__DefinitionsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinDefinitionsAccess().getDefinitionsBinDefParserRuleCall_0_0()); }
		ruleBinDef
		{ after(grammarAccess.getBinDefinitionsAccess().getDefinitionsBinDefParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinDefinitions__DefinitionsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinDefinitionsAccess().getDefinitionsBinDefParserRuleCall_1_1_0()); }
		ruleBinDef
		{ after(grammarAccess.getBinDefinitionsAccess().getDefinitionsBinDefParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinDef__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinDefAccess().getNameBinNameParserRuleCall_0_0()); }
		ruleBinName
		{ after(grammarAccess.getBinDefAccess().getNameBinNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinDef__IntervalAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinDefAccess().getIntervalIntervalParserRuleCall_2_0()); }
		ruleInterval
		{ after(grammarAccess.getBinDefAccess().getIntervalIntervalParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinName__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinNameAccess().getNameSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getBinNameAccess().getNameSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__LowerAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntervalAccess().getLowerIntervalBoundParserRuleCall_0_1_0()); }
		ruleIntervalBound
		{ after(grammarAccess.getIntervalAccess().getLowerIntervalBoundParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__UpperAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntervalAccess().getUpperIntervalBoundParserRuleCall_0_3_0()); }
		ruleIntervalBound
		{ after(grammarAccess.getIntervalAccess().getUpperIntervalBoundParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__LowerAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntervalAccess().getLowerIntervalBoundParserRuleCall_1_1_0()); }
		ruleIntervalBound
		{ after(grammarAccess.getIntervalAccess().getLowerIntervalBoundParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__UpperAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntervalAccess().getUpperIntervalBoundParserRuleCall_1_3_0()); }
		ruleIntervalBound
		{ after(grammarAccess.getIntervalAccess().getUpperIntervalBoundParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__LowerAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntervalAccess().getLowerIntervalBoundParserRuleCall_2_1_0()); }
		ruleIntervalBound
		{ after(grammarAccess.getIntervalAccess().getLowerIntervalBoundParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__UpperAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntervalAccess().getUpperIntervalBoundParserRuleCall_2_3_0()); }
		ruleIntervalBound
		{ after(grammarAccess.getIntervalAccess().getUpperIntervalBoundParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__LowerAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntervalAccess().getLowerIntervalBoundParserRuleCall_3_1_0()); }
		ruleIntervalBound
		{ after(grammarAccess.getIntervalAccess().getLowerIntervalBoundParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__UpperAssignment_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntervalAccess().getUpperIntervalBoundParserRuleCall_3_3_0()); }
		ruleIntervalBound
		{ after(grammarAccess.getIntervalAccess().getUpperIntervalBoundParserRuleCall_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntervalBound__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntervalBoundAccess().getValueNumberParserRuleCall_0_0()); }
		ruleNumber
		{ after(grammarAccess.getIntervalBoundAccess().getValueNumberParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinMode__NewNameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinModeAccess().getNewNameIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getBinModeAccess().getNewNameIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__ColumnsAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeConversionAccess().getColumnsColumnListParserRuleCall_0_2_0()); }
		ruleColumnList
		{ after(grammarAccess.getTypeConversionAccess().getColumnsColumnListParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__SeparatorAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeConversionAccess().getSeparatorDecimalSeparatorParserRuleCall_0_4_0()); }
		ruleDecimalSeparator
		{ after(grammarAccess.getTypeConversionAccess().getSeparatorDecimalSeparatorParserRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__ColumnsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeConversionAccess().getColumnsColumnListParserRuleCall_1_2_0()); }
		ruleColumnList
		{ after(grammarAccess.getTypeConversionAccess().getColumnsColumnListParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__ColumnsAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeConversionAccess().getColumnsColumnListParserRuleCall_2_2_0()); }
		ruleColumnList
		{ after(grammarAccess.getTypeConversionAccess().getColumnsColumnListParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__ColumnsAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeConversionAccess().getColumnsColumnListParserRuleCall_3_2_0()); }
		ruleColumnList
		{ after(grammarAccess.getTypeConversionAccess().getColumnsColumnListParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__ColumnsAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeConversionAccess().getColumnsColumnListParserRuleCall_4_2_0()); }
		ruleColumnList
		{ after(grammarAccess.getTypeConversionAccess().getColumnsColumnListParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConversion__FormatAssignment_4_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeConversionAccess().getFormatDateFormatParserRuleCall_4_4_0()); }
		ruleDateFormat
		{ after(grammarAccess.getTypeConversionAccess().getFormatDateFormatParserRuleCall_4_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateFormat__FormatAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateFormatAccess().getFormatSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getDateFormatAccess().getFormatSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Imputation__ColumnsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImputationAccess().getColumnsColumnListParserRuleCall_2_0()); }
		ruleColumnList
		{ after(grammarAccess.getImputationAccess().getColumnsColumnListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Imputation__MethodAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImputationAccess().getMethodImputeMethodParserRuleCall_5_0()); }
		ruleImputeMethod
		{ after(grammarAccess.getImputationAccess().getMethodImputeMethodParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FixedImpute__ValuesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFixedImputeAccess().getValuesValueListParserRuleCall_2_0()); }
		ruleValueList
		{ after(grammarAccess.getFixedImputeAccess().getValuesValueListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueList__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueListAccess().getValueValueParserRuleCall_0_0()); }
		ruleValue
		{ after(grammarAccess.getValueListAccess().getValueValueParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueList__ValuesAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueListAccess().getValuesValueParserRuleCall_1_1_0_0()); }
		ruleValue
		{ after(grammarAccess.getValueListAccess().getValuesValueParserRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueList__ValuesAssignment_1_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueListAccess().getValuesValueParserRuleCall_1_1_1_1_0()); }
		ruleValue
		{ after(grammarAccess.getValueListAccess().getValuesValueParserRuleCall_1_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__NumberAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getNumberNumberParserRuleCall_0_0()); }
		ruleNumber
		{ after(grammarAccess.getValueAccess().getNumberNumberParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__StringAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getStringSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getValueAccess().getStringSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdvancedImpute__TypeAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdvancedImputeAccess().getTypeInterpolationTypeParserRuleCall_0_1_0()); }
		ruleInterpolationType
		{ after(grammarAccess.getAdvancedImputeAccess().getTypeInterpolationTypeParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdvancedImpute__WindowSizeAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdvancedImputeAccess().getWindowSizeNumberParserRuleCall_1_1_2_0()); }
		ruleNumber
		{ after(grammarAccess.getAdvancedImputeAccess().getWindowSizeNumberParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdvancedImpute__DegreeAssignment_3_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdvancedImputeAccess().getDegreeNumberParserRuleCall_3_1_2_0()); }
		ruleNumber
		{ after(grammarAccess.getAdvancedImputeAccess().getDegreeNumberParserRuleCall_3_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutlierTreatment__ColumnsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutlierTreatmentAccess().getColumnsColumnListParserRuleCall_2_0()); }
		ruleColumnList
		{ after(grammarAccess.getOutlierTreatmentAccess().getColumnsColumnListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutlierTreatment__StrategyAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutlierTreatmentAccess().getStrategyOutlierStrategyParserRuleCall_5_0()); }
		ruleOutlierStrategy
		{ after(grammarAccess.getOutlierTreatmentAccess().getStrategyOutlierStrategyParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutlierStrategy__ReplacementAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutlierStrategyAccess().getReplacementReplacementStrategyParserRuleCall_0_0()); }
		ruleReplacementStrategy
		{ after(grammarAccess.getOutlierStrategyAccess().getReplacementReplacementStrategyParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutlierStrategy__MethodAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutlierStrategyAccess().getMethodDetectionMethodParserRuleCall_1_0()); }
		ruleDetectionMethod
		{ after(grammarAccess.getOutlierStrategyAccess().getMethodDetectionMethodParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutlierStrategy__OptionsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutlierStrategyAccess().getOptionsOutlierOptionsParserRuleCall_2_0()); }
		ruleOutlierOptions
		{ after(grammarAccess.getOutlierStrategyAccess().getOptionsOutlierOptionsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplacementStrategy__ValueAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReplacementStrategyAccess().getValueNumberParserRuleCall_3_2_0()); }
		ruleNumber
		{ after(grammarAccess.getReplacementStrategyAccess().getValueNumberParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IQRMethod__ParamsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIQRMethodAccess().getParamsIQRParamsParserRuleCall_1_0()); }
		ruleIQRParams
		{ after(grammarAccess.getIQRMethodAccess().getParamsIQRParamsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IQRParams__ScalarAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIQRParamsAccess().getScalarNumberParserRuleCall_0_2_0()); }
		ruleNumber
		{ after(grammarAccess.getIQRParamsAccess().getScalarNumberParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IQRParams__EstimationAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIQRParamsAccess().getEstimationEstimationTypeParserRuleCall_1_2_0()); }
		ruleEstimationType
		{ after(grammarAccess.getIQRParamsAccess().getEstimationEstimationTypeParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZScoreMethod__ThresholdAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getZScoreMethodAccess().getThresholdNumberParserRuleCall_1_2_0()); }
		ruleNumber
		{ after(grammarAccess.getZScoreMethodAccess().getThresholdNumberParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PercentileMethod__LowerAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPercentileMethodAccess().getLowerNumberParserRuleCall_3_0()); }
		ruleNumber
		{ after(grammarAccess.getPercentileMethodAccess().getLowerNumberParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PercentileMethod__UpperAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPercentileMethodAccess().getUpperNumberParserRuleCall_6_0()); }
		ruleNumber
		{ after(grammarAccess.getPercentileMethodAccess().getUpperNumberParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutlierOptions__ScopeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutlierOptionsAccess().getScopeOutlierScopeParserRuleCall_2_0()); }
		ruleOutlierScope
		{ after(grammarAccess.getOutlierOptionsAccess().getScopeOutlierScopeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__LeftAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinAccess().getLeftIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getJoinAccess().getLeftIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__RightAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinAccess().getRightIDTerminalRuleCall_4_0()); }
		RULE_ID
		{ after(grammarAccess.getJoinAccess().getRightIDTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__SpecAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinAccess().getSpecJoinSpecParserRuleCall_7_0()); }
		ruleJoinSpec
		{ after(grammarAccess.getJoinAccess().getSpecJoinSpecParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinSpec__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinSpecAccess().getTypeJoinTypeParserRuleCall_0_0()); }
		ruleJoinType
		{ after(grammarAccess.getJoinSpecAccess().getTypeJoinTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinSpec__ConditionsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinSpecAccess().getConditionsJoinConditionsParserRuleCall_2_0()); }
		ruleJoinConditions
		{ after(grammarAccess.getJoinSpecAccess().getConditionsJoinConditionsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinSpec__OptionsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinSpecAccess().getOptionsJoinOptionsParserRuleCall_3_0()); }
		ruleJoinOptions
		{ after(grammarAccess.getJoinSpecAccess().getOptionsJoinOptionsParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinConditions__ConditionsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinConditionsAccess().getConditionsJoinConditionParserRuleCall_0_0()); }
		ruleJoinCondition
		{ after(grammarAccess.getJoinConditionsAccess().getConditionsJoinConditionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinConditions__ConditionsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinConditionsAccess().getConditionsJoinConditionParserRuleCall_1_1_0()); }
		ruleJoinCondition
		{ after(grammarAccess.getJoinConditionsAccess().getConditionsJoinConditionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinCondition__LeftAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinConditionAccess().getLeftColumnParserRuleCall_0_0_0()); }
		ruleColumn
		{ after(grammarAccess.getJoinConditionAccess().getLeftColumnParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinCondition__RightAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinConditionAccess().getRightColumnParserRuleCall_0_2_0()); }
		ruleColumn
		{ after(grammarAccess.getJoinConditionAccess().getRightColumnParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinCondition__LeftAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinConditionAccess().getLeftColumnParserRuleCall_1_0_0()); }
		ruleColumn
		{ after(grammarAccess.getJoinConditionAccess().getLeftColumnParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinCondition__ComparatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinConditionAccess().getComparatorComparatorParserRuleCall_1_1_0()); }
		ruleComparator
		{ after(grammarAccess.getJoinConditionAccess().getComparatorComparatorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinCondition__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinConditionAccess().getRightColumnParserRuleCall_1_2_0()); }
		ruleColumn
		{ after(grammarAccess.getJoinConditionAccess().getRightColumnParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinOptions__LeftSuffixAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinOptionsAccess().getLeftSuffixSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getJoinOptionsAccess().getLeftSuffixSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinOptions__RightSuffixAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinOptionsAccess().getRightSuffixSTRINGTerminalRuleCall_5_0()); }
		RULE_STRING
		{ after(grammarAccess.getJoinOptionsAccess().getRightSuffixSTRINGTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getColumnAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__TableAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnAccess().getTableIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getColumnAccess().getTableIDTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__ColumnAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnAccess().getColumnIDTerminalRuleCall_1_2_0()); }
		RULE_ID
		{ after(grammarAccess.getColumnAccess().getColumnIDTerminalRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnList__ColumnsAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnListAccess().getColumnsColumnParserRuleCall_0_0_0()); }
		ruleColumn
		{ after(grammarAccess.getColumnListAccess().getColumnsColumnParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnList__ColumnsAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnListAccess().getColumnsColumnParserRuleCall_0_1_1_0()); }
		ruleColumn
		{ after(grammarAccess.getColumnListAccess().getColumnsColumnParserRuleCall_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Regex__PatternAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegexAccess().getPatternSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getRegexAccess().getPatternSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Regex__FlagsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegexAccess().getFlagsSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getRegexAccess().getFlagsSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_COMMENT : ('//' ~(('\n'|'\r'))* ('\r'? '\n')?|'/*' ( options {greedy=false;} : . )*'*/');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
